{"version":3,"file":"saturn-datepicker.umd.js.map","sources":["ng://saturn-datepicker/datetime/date-adapter.ts","ng://saturn-datepicker/datetime/date-formats.ts",null,"ng://saturn-datepicker/datetime/native-date-adapter.ts","ng://saturn-datepicker/datetime/native-date-formats.ts","ng://saturn-datepicker/datetime/index.ts","ng://saturn-datepicker/datepicker/datepicker-errors.ts","ng://saturn-datepicker/datepicker/datepicker-intl.ts","ng://saturn-datepicker/datepicker/calendar-body.ts","ng://saturn-datepicker/datepicker/month-view.ts","ng://saturn-datepicker/datepicker/multi-year-view.ts","ng://saturn-datepicker/datepicker/year-view.ts","ng://saturn-datepicker/datepicker/calendar.ts","ng://saturn-datepicker/datepicker/datepicker-animations.ts","ng://saturn-datepicker/datepicker/datepicker.ts","ng://saturn-datepicker/datepicker/datepicker-input.ts","ng://saturn-datepicker/datepicker/datepicker-toggle.ts","ng://saturn-datepicker/datepicker/datepicker-module.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken, LOCALE_ID} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n/** InjectionToken for datepicker that can be used to override default locale code. */\nexport const MAT_DATE_LOCALE = new InjectionToken<string>('MAT_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: MAT_DATE_LOCALE_FACTORY,\n});\n\n/** @docs-private */\nexport function MAT_DATE_LOCALE_FACTORY(): string {\n  return inject(LOCALE_ID);\n}\n\n/**\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const MAT_DATE_LOCALE_PROVIDER = {provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID};\n\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nexport abstract class DateAdapter<D> {\n  /** The locale to use for all dates. */\n  protected locale: any;\n\n  /** A stream that emits when the locale changes. */\n  get localeChanges(): Observable<void> { return this._localeChanges; }\n  protected _localeChanges = new Subject<void>();\n\n  /**\n   * Gets the year component of the given date.\n   * @param date The date to extract the year from.\n   * @returns The year component.\n   */\n  abstract getYear(date: D): number;\n\n  /**\n   * Gets the month component of the given date.\n   * @param date The date to extract the month from.\n   * @returns The month component (0-indexed, 0 = January).\n   */\n  abstract getMonth(date: D): number;\n\n  /**\n   * Gets the date of the month component of the given date.\n   * @param date The date to extract the date of the month from.\n   * @returns The month component (1-indexed, 1 = first of month).\n   */\n  abstract getDate(date: D): number;\n\n  /**\n   * Gets the day of the week component of the given date.\n   * @param date The date to extract the day of the week from.\n   * @returns The month component (0-indexed, 0 = Sunday).\n   */\n  abstract getDayOfWeek(date: D): number;\n\n  /**\n   * Gets a list of names for the months.\n   * @param style The naming style (e.g. long = 'January', short = 'Jan', narrow = 'J').\n   * @returns An ordered list of all month names, starting with January.\n   */\n  abstract getMonthNames(style: 'long' | 'short' | 'narrow'): string[];\n\n  /**\n   * Gets a list of names for the dates of the month.\n   * @returns An ordered list of all date of the month names, starting with '1'.\n   */\n  abstract getDateNames(): string[];\n\n  /**\n   * Gets a list of names for the days of the week.\n   * @param style The naming style (e.g. long = 'Sunday', short = 'Sun', narrow = 'S').\n   * @returns An ordered list of all weekday names, starting with Sunday.\n   */\n  abstract getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[];\n\n  /**\n   * Gets the name for the year of the given date.\n   * @param date The date to get the year name for.\n   * @returns The name of the given year (e.g. '2017').\n   */\n  abstract getYearName(date: D): string;\n\n  /**\n   * Gets the first day of the week.\n   * @returns The first day of the week (0-indexed, 0 = Sunday).\n   */\n  abstract getFirstDayOfWeek(): number;\n\n  /**\n   * Gets the number of days in the month of the given date.\n   * @param date The date whose month should be checked.\n   * @returns The number of days in the month of the given date.\n   */\n  abstract getNumDaysInMonth(date: D): number;\n\n  /**\n   * Clones the given date.\n   * @param date The date to clone\n   * @returns A new date equal to the given date.\n   */\n  abstract clone(date: D): D;\n\n  /**\n   * Creates a date with the given year, month, and date. Does not allow over/under-flow of the\n   * month and date.\n   * @param year The full year of the date. (e.g. 89 means the year 89, not the year 1989).\n   * @param month The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\n   * @param date The date of month of the date. Must be an integer 1 - length of the given month.\n   * @returns The new date, or null if invalid.\n   */\n  abstract createDate(year: number, month: number, date: number): D;\n\n  /**\n   * Gets today's date.\n   * @returns Today's date.\n   */\n  abstract today(): D;\n\n  /**\n   * Parses a date from a user-provided value.\n   * @param value The value to parse.\n   * @param parseFormat The expected format of the value being parsed\n   *     (type is implementation-dependent).\n   * @returns The parsed date.\n   */\n  abstract parse(value: any, parseFormat: any): D | null;\n\n  /**\n   * Formats a date as a string according to the given format.\n   * @param date The value to format.\n   * @param displayFormat The format to use to display the date as a string.\n   * @returns The formatted date string.\n   */\n  abstract format(date: D, displayFormat: any): string;\n\n  /**\n   * Adds the given number of years to the date. Years are counted as if flipping 12 pages on the\n   * calendar for each year and then finding the closest date in the new month. For example when\n   * adding 1 year to Feb 29, 2016, the resulting date will be Feb 28, 2017.\n   * @param date The date to add years to.\n   * @param years The number of years to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of years added.\n   */\n  abstract addCalendarYears(date: D, years: number): D;\n\n  /**\n   * Adds the given number of months to the date. Months are counted as if flipping a page on the\n   * calendar for each month and then finding the closest date in the new month. For example when\n   * adding 1 month to Jan 31, 2017, the resulting date will be Feb 28, 2017.\n   * @param date The date to add months to.\n   * @param months The number of months to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of months added.\n   */\n  abstract addCalendarMonths(date: D, months: number): D;\n\n  /**\n   * Adds the given number of days to the date. Days are counted as if moving one cell on the\n   * calendar for each day.\n   * @param date The date to add days to.\n   * @param days The number of days to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of days added.\n   */\n  abstract addCalendarDays(date: D, days: number): D;\n\n  /**\n   * Gets the RFC 3339 compatible string (https://tools.ietf.org/html/rfc3339) for the given date.\n   * This method is used to generate date strings that are compatible with native HTML attributes\n   * such as the `min` or `max` attribute of an `<input>`.\n   * @param date The date to get the ISO date string for.\n   * @returns The ISO date string date string.\n   */\n  abstract toIso8601(date: D): string;\n\n  /**\n   * Checks whether the given object is considered a date instance by this DateAdapter.\n   * @param obj The object to check\n   * @returns Whether the object is a date instance.\n   */\n  abstract isDateInstance(obj: any): boolean;\n\n  /**\n   * Checks whether the given date is valid.\n   * @param date The date to check.\n   * @returns Whether the date is valid.\n   */\n  abstract isValid(date: D): boolean;\n\n  /**\n   * Gets date instance that is not valid.\n   * @returns An invalid date.\n   */\n  abstract invalid(): D;\n\n  /**\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n   * string). The default implementation does not allow any deserialization, it simply checks that\n   * the given value is already a valid date object or null. The `<sat-datepicker>` will call this\n   * method on all of it's `@Input()` properties that accept dates. It is therefore possible to\n   * support passing values from your backend directly to these properties by overriding this method\n   * to also deserialize the format used by your backend.\n   * @param value The value to be deserialized into a date object.\n   * @returns The deserialized date object, either a valid date, null if the value can be\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\n   */\n  deserialize(value: any): D | null {\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n      return value;\n    }\n    return this.invalid();\n  }\n\n  /**\n   * Sets the locale used for all dates.\n   * @param locale The new locale.\n   */\n  setLocale(locale: any) {\n    this.locale = locale;\n    this._localeChanges.next();\n  }\n\n  /**\n   * Compares two dates.\n   * @param first The first date to compare.\n   * @param second The second date to compare.\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n   *     a number greater than 0 if the first date is later.\n   */\n  compareDate(first: D, second: D): number {\n    return this.getYear(first) - this.getYear(second) ||\n        this.getMonth(first) - this.getMonth(second) ||\n        this.getDate(first) - this.getDate(second);\n  }\n\n  /**\n   * Checks if two dates are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameDate(first: D | null, second: D | null): boolean {\n    if (first && second) {\n      let firstValid = this.isValid(first);\n      let secondValid = this.isValid(second);\n      if (firstValid && secondValid) {\n        return !this.compareDate(first, second);\n      }\n      return firstValid == secondValid;\n    }\n    return first == second;\n  }\n\n  /**\n   * Clamp the given date between min and max dates.\n   * @param date The date to clamp.\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n   *     otherwise `date`.\n   */\n  clampDate(date: D, min?: D | null, max?: D | null): D {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n\nexport type MatDateFormats = {\n  parse: {\n    dateInput: any\n  },\n  display: {\n    dateInput: any,\n    monthYearLabel: any,\n    dateA11yLabel: any,\n    monthYearA11yLabel: any,\n  }\n};\n\n\nexport const MAT_DATE_FORMATS = new InjectionToken<MatDateFormats>('mat-date-formats');\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {Inject, Injectable, Optional} from '@angular/core';\nimport {DateAdapter, MAT_DATE_LOCALE} from './date-adapter';\n\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/** Whether the browser supports the Intl API. */\nconst SUPPORTS_INTL_API = typeof Intl != 'undefined';\n\n\n/** The default month names to use if Intl API is not available. */\nconst DEFAULT_MONTH_NAMES = {\n  'long': [\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n    'October', 'November', 'December'\n  ],\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\n\n\n/** The default date names to use if Intl API is not available. */\nconst DEFAULT_DATE_NAMES = range(31, i => String(i + 1));\n\n\n/** The default day of the week names to use if Intl API is not available. */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n\n/** First day of week according locale.\n * Taken form moment.js source code https://github.com/moment/moment/tree/develop/src/locale\n */\nconst FIRST_DAY_OF_WEEK = {\n  af:1, ar:6, 'ar-ly':6, 'ar-ma':6, 'ar-tn':1, az:1, be:1, bg:1, bm:1, br:1, bs:1, ca:1, cs:1, cv:1,\n  cy:1, da:1, de:1, 'de-at':1, 'de-ch':1, el:1, 'en-au':1, 'en-gb':1, 'en-ie':1, 'en-nz':1, eo:1,\n  es:1, 'es-do':1, et:1, eu:1, fa:6, fi:1, fo:1, fr:1, 'fr-ch':1, fy:1, gd:1, gl:1, 'gom-latn':1,\n  hr:1, hu:1, 'hy-am':1, id:1, is:1, it:1, jv:1, ka:1, kk:1, km:1, ky:1, lb:1, lt:1, lv:1, me:1,\n  mi:1, mk:1, ms:1, 'ms-my':1, mt:1, my:1, nb:1, nl:1, 'nl-be':1, nn:1, pl:1, pt:1, 'pt-BR': 0, ro:1, ru:1,\n  sd:1, se:1, sk:1, sl:1, sq:1, sr:1, 'sr-cyrl':1, ss:1, sv:1, sw:1, 'tet':1, tg:1, 'tl-ph':1,\n  'tlh':1, tr:1, 'tzl':1, 'tzm':6, 'tzm-latn':6, 'ug-cn':1, uk:1, ur:1, uz:1, 'uz-latn':1, vi:1,\n  'x-pseudo':1, yo:1, 'zh-cn':1,\n};\n\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX =\n    /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n\n\n/** Creates an array and fills it with values. */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\n@Injectable()\nexport class NativeDateAdapter extends DateAdapter<Date> {\n  /** Whether to clamp the date between 1 and 9999 to avoid IE and Edge errors. */\n  private readonly _clampDate: boolean;\n\n  /**\n   * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n   * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n   * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n   * will produce `'8/13/1800'`.\n   *\n   * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n   * getting the string representation of a Date object from it's utc representation. We're keeping\n   * it here for sometime, just for precaution, in case we decide to revert some of these changes\n   * though.\n   */\n  useUtcForDisplay: boolean = true;\n\n  constructor(@Optional() @Inject(MAT_DATE_LOCALE) matDateLocale: string, platform: Platform) {\n    super();\n    super.setLocale(matDateLocale);\n\n    // IE does its own time zone correction, so we disable this on IE.\n    this.useUtcForDisplay = !platform.TRIDENT;\n    this._clampDate = platform.TRIDENT || platform.EDGE;\n  }\n\n  getYear(date: Date): number {\n    return date.getFullYear();\n  }\n\n  getMonth(date: Date): number {\n    return date.getMonth();\n  }\n\n  getDate(date: Date): number {\n    return date.getDate();\n  }\n\n  getDayOfWeek(date: Date): number {\n    return date.getDay();\n  }\n\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {month: style, timeZone: 'utc'});\n      return range(12, i =>\n          this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\n    }\n    return DEFAULT_MONTH_NAMES[style];\n  }\n\n  getDateNames(): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {day: 'numeric', timeZone: 'utc'});\n      return range(31, i => this._stripDirectionalityCharacters(\n          this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DATE_NAMES;\n  }\n\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {weekday: style, timeZone: 'utc'});\n      return range(7, i => this._stripDirectionalityCharacters(\n          this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DAY_OF_WEEK_NAMES[style];\n  }\n\n  getYearName(date: Date): string {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {year: 'numeric', timeZone: 'utc'});\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n    return String(this.getYear(date));\n  }\n\n  getFirstDayOfWeek(): number {\n    // We can't tell using native JS Date what the first day of the week is.\n    // Sometimes people use excess language definition, e.g. ru-RU,\n    // so we use fallback to two-letter language code\n    const locale = this.locale.toLowerCase();\n    return FIRST_DAY_OF_WEEK[locale] || FIRST_DAY_OF_WEEK[locale.substr(0, 2)] || 0;\n  }\n\n  getNumDaysInMonth(date: Date): number {\n    return this.getDate(this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + 1, 0));\n  }\n\n  clone(date: Date): Date {\n    return this.createDate(this.getYear(date), this.getMonth(date), this.getDate(date));\n  }\n\n  createDate(year: number, month: number, date: number): Date {\n    // Check for invalid month and date (except upper bound on date which we have to check after\n    // creating the Date).\n    if (month < 0 || month > 11) {\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n    }\n\n    if (date < 1) {\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n    }\n\n    let result = this._createDateWithOverflow(year, month, date);\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n    if (result.getMonth() != month) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n\n    return result;\n  }\n\n  today(): Date {\n    return new Date();\n  }\n\n  parse(value: any): Date | null {\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n    // parameters.\n    if (typeof value == 'number') {\n      return new Date(value);\n    }\n    return value ? new Date(Date.parse(value)) : null;\n  }\n\n  format(date: Date, displayFormat: Object): string {\n    if (!this.isValid(date)) {\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\n    }\n\n    if (SUPPORTS_INTL_API) {\n      // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n      // if we attempt to format a date whose year is less than 1 or greater than 9999.\n      if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n        date = this.clone(date);\n        date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n      }\n\n      displayFormat = {...displayFormat, timeZone: 'utc'};\n\n      const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n    return this._stripDirectionalityCharacters(date.toDateString());\n  }\n\n  addCalendarYears(date: Date, years: number): Date {\n    return this.addCalendarMonths(date, years * 12);\n  }\n\n  addCalendarMonths(date: Date, months: number): Date {\n    let newDate = this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n\n    // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n    }\n\n    return newDate;\n  }\n\n  addCalendarDays(date: Date, days: number): Date {\n    return this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n  }\n\n  toIso8601(date: Date): string {\n    return [\n      date.getUTCFullYear(),\n      this._2digit(date.getUTCMonth() + 1),\n      this._2digit(date.getUTCDate())\n    ].join('-');\n  }\n\n  /**\n   * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n   * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n   * invalid date for all other values.\n   */\n  deserialize(value: any): Date | null {\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      }\n      // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n      // string is the right format first.\n      if (ISO_8601_REGEX.test(value)) {\n        let date = new Date(value);\n        if (this.isValid(date)) {\n          return date;\n        }\n      }\n    }\n    return super.deserialize(value);\n  }\n\n  isDateInstance(obj: any) {\n    return obj instanceof Date;\n  }\n\n  isValid(date: Date) {\n    return !isNaN(date.getTime());\n  }\n\n  invalid(): Date {\n    return new Date(NaN);\n  }\n\n  /** Creates a date but allows the month and date to overflow. */\n  private _createDateWithOverflow(year: number, month: number, date: number) {\n    const result = new Date(year, month, date);\n\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n    // abbreviations for 19xx.\n    if (year >= 0 && year < 100) {\n      result.setFullYear(this.getYear(result) - 1900);\n    }\n    return result;\n  }\n\n  /**\n   * Pads a number to make it two digits.\n   * @param n The number to pad.\n   * @returns The padded number.\n   */\n  private _2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n\n  /**\n   * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n   * other browsers do not. We remove them to make output consistent and because they interfere with\n   * date parsing.\n   * @param str The string to strip direction characters from.\n   * @returns The stripped string.\n   */\n  private _stripDirectionalityCharacters(str: string) {\n    return str.replace(/[\\u200e\\u200f]/g, '');\n  }\n\n  /**\n   * When converting Date object to string, javascript built-in functions may return wrong\n   * results because it applies its internal DST rules. The DST rules around the world change\n   * very frequently, and the current valid rule is not always valid in previous years though.\n   * We work around this problem building a new Date object which has its internal UTC\n   * representation with the local date and time.\n   * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n   *    timeZone set to 'utc' to work fine.\n   * @param date Date from which we want to get the string representation according to dtf\n   * @returns A Date object with its UTC representation based on the passed in date info\n   */\n  private _format(dtf: Intl.DateTimeFormat, date: Date) {\n    const d = new Date(Date.UTC(\n        date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(),\n        date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n    return dtf.format(d);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MatDateFormats} from './date-formats';\n\n\nexport const MAT_NATIVE_DATE_FORMATS: MatDateFormats = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: {year: 'numeric', month: 'numeric', day: 'numeric'},\n        monthYearLabel: {year: 'numeric', month: 'short'},\n        dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\n        monthYearA11yLabel: {year: 'numeric', month: 'long'},\n    }\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {NgModule} from '@angular/core';\nimport {DateAdapter} from './date-adapter';\nimport {MAT_DATE_FORMATS} from './date-formats';\nimport {NativeDateAdapter} from './native-date-adapter';\nimport {MAT_NATIVE_DATE_FORMATS} from './native-date-formats';\n\nexport * from './date-adapter';\nexport * from './date-formats';\nexport * from './native-date-adapter';\nexport * from './native-date-formats';\n\n\n@NgModule({\n    imports: [PlatformModule],\n    providers: [\n        {provide: DateAdapter, useClass: NativeDateAdapter},\n    ],\n})\nexport class NativeDateModule {}\n\n\n@NgModule({\n    imports: [NativeDateModule],\n    providers: [{provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS}],\n})\nexport class SatNativeDateModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\nexport function createMissingDateImplError(provider: string) {\n    return Error(\n        `SatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n        `modules at your application root: SatNativeDateModule, MatMomentDateModule, or provide a ` +\n        `custom implementation.`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n\n/** Datepicker data that requires internationalization. */\n@Injectable({providedIn: 'root'})\nexport class SatDatepickerIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** A label for the calendar popup (used by screen readers). */\n  calendarLabel: string = 'Calendar';\n\n  /** A label for the button used to open the calendar popup (used by screen readers). */\n  openCalendarLabel: string = 'Open calendar';\n\n  /** A label for the previous month button (used by screen readers). */\n  prevMonthLabel: string = 'Previous month';\n\n  /** A label for the next month button (used by screen readers). */\n  nextMonthLabel: string = 'Next month';\n\n  /** A label for the previous year button (used by screen readers). */\n  prevYearLabel: string = 'Previous year';\n\n  /** A label for the next year button (used by screen readers). */\n  nextYearLabel: string = 'Next year';\n\n  /** A label for the previous multi-year button (used by screen readers). */\n  prevMultiYearLabel: string = 'Previous 20 years';\n\n  /** A label for the next multi-year button (used by screen readers). */\n  nextMultiYearLabel: string = 'Next 20 years';\n\n  /** A label for the 'switch to month view' button (used by screen readers). */\n  switchToMonthViewLabel: string = 'Choose date';\n\n  /** A label for the 'switch to year view' button (used by screen readers). */\n  switchToMultiYearViewLabel: string = 'Choose month and year';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation,\n  NgZone,\n} from '@angular/core';\nimport {take} from 'rxjs/operators';\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nexport class SatCalendarCell {\n  constructor(public value: number,\n              public displayValue: string,\n              public ariaLabel: string,\n              public enabled: boolean) {}\n}\n\n\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: '[sat-calendar-body]',\n  templateUrl: 'calendar-body.html',\n  styleUrls: ['calendar-body.css'],\n  host: {\n    'class': 'mat-calendar-body',\n    'role': 'grid',\n    'attr.aria-readonly': 'true'\n  },\n  exportAs: 'matCalendarBody',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SatCalendarBody {\n  /** The label for the table. (e.g. \"Jan 2017\"). */\n  @Input() label: string;\n\n  /** The cells to display in the table. */\n  @Input() rows: SatCalendarCell[][];\n\n  /** The value in the table that corresponds to today. */\n  @Input() todayValue: number;\n\n  /** The value in the table that is currently selected. */\n  @Input() selectedValue: number;\n\n  /** The value in the table since range of dates started.\n   * Null means no interval or interval doesn't start in this month\n   */\n  @Input() begin: number|null;\n\n  /** The value in the table representing end of dates range.\n   * Null means no interval or interval doesn't end in this month\n   */\n  @Input() end: number|null;\n\n  /** Whether to mark all dates as semi-selected. */\n  @Input() rangeFull: boolean;\n\n  /** Whether to use date range selection behaviour.*/\n  @Input() rangeMode = false;\n\n  /** The minimum number of free cells needed to fit the label in the first row. */\n  @Input() labelMinRequiredCells: number;\n\n  /** The number of columns in the table. */\n  @Input() numCols = 7;\n\n  /** Whether to allow selection of disabled cells. */\n  @Input() allowDisabledSelection = false;\n\n  /** The cell number of the active cell in the table. */\n  @Input() activeCell = 0;\n\n  /**\n   * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n   * maintained even as the table resizes.\n   */\n  @Input() cellAspectRatio = 1;\n\n  /** Emits when a new value is selected. */\n  @Output() readonly selectedValueChange: EventEmitter<number> = new EventEmitter<number>();\n\n  constructor(private _elementRef: ElementRef, private _ngZone: NgZone) { }\n\n  _cellClicked(cell: SatCalendarCell): void {\n    if (!this.allowDisabledSelection && !cell.enabled) {\n      return;\n    }\n    this.selectedValueChange.emit(cell.value);\n  }\n\n  /** The number of blank cells to put at the beginning for the first row. */\n  get _firstRowOffset(): number {\n    return this.rows && this.rows.length && this.rows[0].length ?\n        this.numCols - this.rows[0].length : 0;\n  }\n\n  _isActiveCell(rowIndex: number, colIndex: number): boolean {\n    let cellNumber = rowIndex * this.numCols + colIndex;\n\n    // Account for the fact that the first row may not have as many cells.\n    if (rowIndex) {\n      cellNumber -= this._firstRowOffset;\n    }\n\n    return cellNumber == this.activeCell;\n  }\n\n  /** Whenever to mark cell as semi-selected (inside dates interval). */\n  _isSemiSelected(date: number) {\n    if (!this.rangeMode) {\n      return false;\n    }\n    if (this.rangeFull) {\n      return true;\n    }\n    /** Do not mark start and end of interval. */\n    if (date === this.begin || date === this.end) {\n      return false;\n    }\n    if (this.begin && !this.end) {\n      return date > this.begin;\n    }\n    if (this.end && !this.begin) {\n      return date < this.end;\n    }\n    return date > <number>this.begin && date < <number>this.end;\n  }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                this._elementRef.nativeElement.querySelector('.mat-calendar-body-active').focus();\n            });\n        });\n    }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  ViewEncapsulation,\n  ViewChild,\n} from '@angular/core';\nimport {DateAdapter} from '../datetime/date-adapter';\nimport {MAT_DATE_FORMATS, MatDateFormats} from '../datetime/date-formats';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {SatCalendarBody, SatCalendarCell} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\n\n\nconst DAYS_PER_WEEK = 7;\n\n\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'sat-month-view',\n  templateUrl: 'month-view.html',\n  exportAs: 'matMonthView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SatMonthView<D> implements AfterContentInit {\n\n  /** Current start of interval. */\n  @Input()\n  get beginDate(): D | null { return this._beginDate; }\n  set beginDate(value: D | null) {\n    this._beginDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this.updateRangeSpecificValues();\n  }\n  private _beginDate: D | null;\n\n  /** Current end of interval. */\n  @Input()\n  get endDate(): D | null { return this._endDate; }\n  set endDate(value: D | null) {\n    this._endDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this.updateRangeSpecificValues();\n  }\n  private _endDate: D | null;\n\n  /** Allow selecting range of dates. */\n  @Input() rangeMode = false;\n\n  /** First day of interval. */\n  _beginDateNumber: number | null;\n\n  /* Last day of interval. */\n  _endDateNumber: number | null;\n\n  /** Whenever full month is inside dates interval. */\n  _rangeFull: boolean | null = false;\n\n  /** Whenever user already selected start of dates interval. */\n  private _beginDateSelected = false;\n\n  /**\n   * The date to display in this month view (everything other than the month and year is ignored).\n   */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    const oldActiveDate = this._activeDate;\n    const validDate =\n        this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null { return this._selected; }\n  set selected(value: D | null) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._selectedDate = this._getDateInCurrentMonth(this._selected);\n  }\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Emits when a new date is selected. */\n  @Output() readonly selectedChange: EventEmitter<D | null> = new EventEmitter<D | null>();\n\n  /** Emits when any date is selected. */\n  @Output() readonly _userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(SatCalendarBody) _matCalendarBody: SatCalendarBody;\n\n  /** The label for this month (e.g. \"January 2017\"). */\n  _monthLabel: string;\n\n  /** Grid of calendar cells representing the dates of the month. */\n  _weeks: SatCalendarCell[][];\n\n  /** The number of blank cells in the first row before the 1st of the month. */\n  _firstWeekOffset: number;\n\n  /**\n   * The date of the month that the currently selected Date falls on.\n   * Null if the currently selected Date is in another month.\n   */\n  _selectedDate: number | null;\n\n  /** The date of the month that today falls on. Null if today is in another month. */\n  _todayDate: number | null;\n\n  /** The names of the weekdays. */\n  _weekdays: {long: string, narrow: string}[];\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              @Optional() public _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir?: Directionality) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n    const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n    const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n\n    // Rotate the labels for days of the week based on the configured first day of the week.\n    let weekdays = longWeekdays.map((long, i) => {\n      return {long, narrow: narrowWeekdays[i]};\n    });\n    this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._init();\n  }\n\n  /** Handles when a new date is selected. */\n  _dateSelected(date: number) {\n\n    if (this.rangeMode) {\n\n      const selectedYear = this._dateAdapter.getYear(this.activeDate);\n      const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n      const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n      if (!this._beginDateSelected) { // At first click emit the same start and end of interval\n        this._beginDateSelected = true;\n        this.selectedChange.emit(selectedDate);\n      } else {\n        this._beginDateSelected = false;\n        this.selectedChange.emit(selectedDate);\n        this._userSelection.emit();\n      }\n    } else if (this._selectedDate != date) {\n\n      const selectedYear = this._dateAdapter.getYear(this.activeDate);\n      const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n      const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n\n      this.selectedChange.emit(selectedDate);\n      this._userSelection.emit();\n    }\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in month view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate,\n            1 - this._dateAdapter.getDate(this._activeDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate,\n            (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n              this._dateAdapter.getDate(this._activeDate)));\n        break;\n      case PAGE_UP:\n        this.activeDate = event.altKey ?\n            this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n            this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n        break;\n      case PAGE_DOWN:\n        this.activeDate = event.altKey ?\n            this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n            this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n        break;\n      case ENTER:\n        if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n          this._dateSelected(this._dateAdapter.getDate(this._activeDate));\n          this._userSelection.emit();\n          // Prevent unexpected default actions such as form submission.\n          event.preventDefault();\n        }\n        return;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  /** Initializes this month view. */\n  _init() {\n    this.updateRangeSpecificValues();\n    this._selectedDate = this._getDateInCurrentMonth(this.selected);\n    this._todayDate = this._getDateInCurrentMonth(this._dateAdapter.today());\n    this._monthLabel =\n        this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n            .toLocaleUpperCase();\n\n    let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate),\n        this._dateAdapter.getMonth(this.activeDate), 1);\n    this._firstWeekOffset =\n        (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n         this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n\n    this._createWeekCells();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n\n  /** Creates SatCalendarCells for the dates in this month. */\n  private _createWeekCells() {\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n    const dateNames = this._dateAdapter.getDateNames();\n    this._weeks = [[]];\n    for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n      if (cell == DAYS_PER_WEEK) {\n        this._weeks.push([]);\n        cell = 0;\n      }\n      const date = this._dateAdapter.createDate(\n            this._dateAdapter.getYear(this.activeDate),\n            this._dateAdapter.getMonth(this.activeDate), i + 1);\n      const enabled = this._shouldEnableDate(date);\n      const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n      this._weeks[this._weeks.length - 1]\n          .push(new SatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled));\n    }\n  }\n\n  /** Date filter for the month */\n  private _shouldEnableDate(date: D): boolean {\n    return !!date &&\n        (!this.dateFilter || this.dateFilter(date)) &&\n        (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n        (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0);\n  }\n\n  /**\n   * Gets the date in this month that the given Date falls on.\n   * Returns null if the given Date is in another month.\n   */\n  private _getDateInCurrentMonth(date: D | null): number | null {\n    return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n        this._dateAdapter.getDate(date) : null;\n  }\n\n  /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n  private _hasSameMonthAndYear(d1: D | null, d2: D | null): boolean {\n    return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n              this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n  /** Updates range full parameter on each begin or end of interval update.\n   * Necessary to display calendar-body correctly\n   */\n  private updateRangeSpecificValues(): void {\n    if (this.rangeMode) {\n      this._beginDateNumber = this._getDateInCurrentMonth(this._beginDate);\n      this._endDateNumber = this._getDateInCurrentMonth(this._endDate);\n      this._rangeFull = this.beginDate && this.endDate && !this._beginDateNumber &&\n        !this._endDateNumber &&\n        this._dateAdapter.compareDate(this.beginDate, this.activeDate) <= 0 &&\n        this._dateAdapter.compareDate(this.activeDate, this.endDate) <= 0;\n    } else {\n      this._beginDateNumber = this._endDateNumber = null;\n      this._rangeFull = false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {SatCalendarBody, SatCalendarCell} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {DateAdapter} from '../datetime/date-adapter';\n\nexport const yearsPerPage = 24;\n\nexport const yearsPerRow = 4;\n\n\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'sat-multi-year-view',\n  templateUrl: 'multi-year-view.html',\n  exportAs: 'matMultiYearView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SatMultiYearView<D> implements AfterContentInit {\n  /** The date to display in this multi-year view (everything other than the year is ignored). */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    let oldActiveDate = this._activeDate;\n    const validDate =\n        this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (Math.floor(this._dateAdapter.getYear(oldActiveDate) / yearsPerPage) !=\n        Math.floor(this._dateAdapter.getYear(this._activeDate) / yearsPerPage)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null { return this._selected; }\n  set selected(value: D | null) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._selectedYear = this._selected && this._dateAdapter.getYear(this._selected);\n  }\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Emits when a new year is selected. */\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits the selected year. This doesn't imply a change on the selected date */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(SatCalendarBody) _matCalendarBody: SatCalendarBody;\n\n  /** Grid of calendar cells representing the currently displayed years. */\n  _years: SatCalendarCell[][];\n\n  /** The year that today falls on. */\n  _todayYear: number;\n\n  /** The year of the selected date. Null if the selected date is null. */\n  _selectedYear: number | null;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() public _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir?: Directionality) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._init();\n  }\n\n  /** Initializes this multi-year view. */\n  _init() {\n    this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n    let activeYear = this._dateAdapter.getYear(this._activeDate);\n    let activeOffset = activeYear % yearsPerPage;\n    this._years = [];\n    for (let i = 0, row: number[] = []; i < yearsPerPage; i++) {\n      row.push(activeYear - activeOffset + i);\n      if (row.length == yearsPerRow) {\n        this._years.push(row.map(year => this._createCellForYear(year)));\n        row = [];\n      }\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Handles when a new year is selected. */\n  _yearSelected(year: number) {\n    this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n    let month = this._dateAdapter.getMonth(this.activeDate);\n    let daysInMonth =\n        this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n    this.selectedChange.emit(this._dateAdapter.createDate(year, month,\n        Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate,\n            -this._dateAdapter.getYear(this._activeDate) % yearsPerPage);\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate,\n            yearsPerPage - this._dateAdapter.getYear(this._activeDate) % yearsPerPage - 1);\n        break;\n      case PAGE_UP:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(\n                this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n        break;\n      case PAGE_DOWN:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(\n                this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n        break;\n      case ENTER:\n        this._yearSelected(this._dateAdapter.getYear(this._activeDate));\n        break;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  _getActiveCell(): number {\n    return this._dateAdapter.getYear(this.activeDate) % yearsPerPage;\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n\n  /** Creates an SatCalendarCell for the given year. */\n  private _createCellForYear(year: number) {\n    let yearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(year, 0, 1));\n    return new SatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year));\n  }\n\n  /** Whether the given year is enabled. */\n  private _shouldEnableYear(year: number) {\n    // disable if the year is greater than maxDate lower than minDate\n    if (year === undefined || year === null ||\n        (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n        (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n      return false;\n    }\n\n    // enable if it reaches here and there's no filter defined\n    if (!this.dateFilter) {\n      return true;\n    }\n\n    const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n\n    // If any date in the year is enabled count the year as enabled.\n    for (let date = firstOfYear; this._dateAdapter.getYear(date) == year;\n      date = this._dateAdapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Determines whether the user has the RTL layout direction. */\n  private _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n} from '@angular/cdk/keycodes';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {SatCalendarBody, SatCalendarCell} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {DateAdapter} from '../datetime/date-adapter';\nimport {MAT_DATE_FORMATS, MatDateFormats} from '../datetime/date-formats';\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'sat-year-view',\n  templateUrl: 'year-view.html',\n  exportAs: 'matYearView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SatYearView<D> implements AfterContentInit {\n  /** The date to display in this year view (everything other than the year is ignored). */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    let oldActiveDate = this._activeDate;\n    const validDate =\n        this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null { return this._selected; }\n  set selected(value: D | null) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._selectedMonth = this._getMonthInCurrentYear(this._selected);\n  }\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Emits when a new month is selected. */\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits the selected month. This doesn't imply a change on the selected date */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(SatCalendarBody) _matCalendarBody: SatCalendarBody;\n\n  /** Grid of calendar cells representing the months of the year. */\n  _months: SatCalendarCell[][];\n\n  /** The label for this year (e.g. \"2017\"). */\n  _yearLabel: string;\n\n  /** The month in this year that today falls on. Null if today is in a different year. */\n  _todayMonth: number | null;\n\n  /**\n   * The month in this year that the selected Date falls on.\n   * Null if the selected Date is in a different year.\n   */\n  _selectedMonth: number | null;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              @Optional() public _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir?: Directionality) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._init();\n  }\n\n  /** Handles when a new month is selected. */\n  _monthSelected(month: number) {\n    const normalizedDate =\n          this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n\n    this.monthSelected.emit(normalizedDate);\n\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n\n    this.selectedChange.emit(this._dateAdapter.createDate(\n        this._dateAdapter.getYear(this.activeDate), month,\n        Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in year view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate,\n            -this._dateAdapter.getMonth(this._activeDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate,\n            11 - this._dateAdapter.getMonth(this._activeDate));\n        break;\n      case PAGE_UP:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n        break;\n      case PAGE_DOWN:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n        break;\n      case ENTER:\n        this._monthSelected(this._dateAdapter.getMonth(this._activeDate));\n        break;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  /** Initializes this year view. */\n  _init() {\n    this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n    this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n    this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n\n    let monthNames = this._dateAdapter.getMonthNames('short');\n    // First row of months only contains 5 elements so we can fit the year label on the same row.\n    this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(row => row.map(\n        month => this._createCellForMonth(month, monthNames[month])));\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n\n  /**\n   * Gets the month in this year that the given Date falls on.\n   * Returns null if the given Date is in another year.\n   */\n  private _getMonthInCurrentYear(date: D | null) {\n    return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n        this._dateAdapter.getMonth(date) : null;\n  }\n\n  /** Creates an SatCalendarCell for the given month. */\n  private _createCellForMonth(month: number, monthName: string) {\n    let ariaLabel = this._dateAdapter.format(\n        this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1),\n        this._dateFormats.display.monthYearA11yLabel);\n    return new SatCalendarCell(\n        month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month));\n  }\n\n  /** Whether the given month is enabled. */\n  private _shouldEnableMonth(month: number) {\n\n    const activeYear = this._dateAdapter.getYear(this.activeDate);\n\n    if (month === undefined || month === null ||\n        this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n        this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n      return false;\n    }\n\n    if (!this.dateFilter) {\n      return true;\n    }\n\n    const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n\n    // If any date in the month is enabled count the month as enabled.\n    for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month;\n         date = this._dateAdapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Tests whether the combination month/year is after this.maxDate, considering\n   * just the month and year of this.maxDate\n   */\n  private _isYearAndMonthAfterMaxDate(year: number, month: number) {\n    if (this.maxDate) {\n      const maxYear = this._dateAdapter.getYear(this.maxDate);\n      const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n\n      return year > maxYear || (year === maxYear && month > maxMonth);\n    }\n\n    return false;\n  }\n\n  /**\n   * Tests whether the combination month/year is before this.minDate, considering\n   * just the month and year of this.minDate\n   */\n  private _isYearAndMonthBeforeMinDate(year: number, month: number) {\n    if (this.minDate) {\n      const minYear = this._dateAdapter.getYear(this.minDate);\n      const minMonth = this._dateAdapter.getMonth(this.minDate);\n\n      return year < minYear || (year === minYear && month < minMonth);\n    }\n\n    return false;\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Determines whether the user has the RTL layout direction. */\n  private _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentPortal, ComponentType, Portal} from '@angular/cdk/portal';\nimport {\n  AfterContentInit,\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {SatDatepickerIntl} from './datepicker-intl';\nimport {SatMonthView} from './month-view';\nimport {SatMultiYearView, yearsPerPage} from './multi-year-view';\nimport {SatYearView} from './year-view';\n\nimport {SatDatepickerRangeValue} from './datepicker-input';\nimport {DateAdapter} from '../datetime/date-adapter';\nimport {MAT_DATE_FORMATS, MatDateFormats} from '../datetime/date-formats';\n\n/**\n * Possible views for the calendar.\n * @docs-private\n */\nexport type SatCalendarView = 'month' | 'year' | 'multi-year';\n\n/** Default header for SatCalendar */\n@Component({\n  moduleId: module.id,\n  selector: 'sat-calendar-header',\n  templateUrl: 'calendar-header.html',\n  exportAs: 'matCalendarHeader',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SatCalendarHeader<D> {\n  constructor(private _intl: SatDatepickerIntl,\n              @Inject(forwardRef(() => SatCalendar)) public calendar: SatCalendar<D>,\n              @Optional() private _dateAdapter: DateAdapter<D>,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              changeDetectorRef: ChangeDetectorRef) {\n\n    this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n  /** The label for the current calendar view. */\n  get periodButtonText(): string {\n    if (this.calendar.currentView == 'month') {\n      return this._dateAdapter\n          .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n              .toLocaleUpperCase();\n    }\n    if (this.calendar.currentView == 'year') {\n      return this._dateAdapter.getYearName(this.calendar.activeDate);\n    }\n    const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n    const firstYearInView = this._dateAdapter.getYearName(\n        this._dateAdapter.createDate(activeYear - activeYear % 24, 0, 1));\n    const lastYearInView = this._dateAdapter.getYearName(\n        this._dateAdapter.createDate(activeYear + yearsPerPage - 1 - activeYear % 24, 0, 1));\n    return `${firstYearInView} \\u2013 ${lastYearInView}`;\n  }\n\n  get periodButtonLabel(): string {\n    return this.calendar.currentView == 'month' ?\n        this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n  }\n\n  /** The label for the the previous button. */\n  get prevButtonLabel(): string {\n    return {\n      'month': this._intl.prevMonthLabel,\n      'year': this._intl.prevYearLabel,\n      'multi-year': this._intl.prevMultiYearLabel\n    }[this.calendar.currentView];\n  }\n\n  /** The label for the the next button. */\n  get nextButtonLabel(): string {\n    return {\n      'month': this._intl.nextMonthLabel,\n      'year': this._intl.nextYearLabel,\n      'multi-year': this._intl.nextMultiYearLabel\n    }[this.calendar.currentView];\n  }\n\n  /** Handles user clicks on the period label.\n   * Option`calendar.orderPeriodLabel` sort the label period views.\n   * - Default [multi-year]: multi-year then back to month\n   * - Month [month]: month > year > multi-year\n   */\n  currentPeriodClicked(): void {\n    const mouthFirstOrder: SatCalendarView[] = ['month', 'year', 'multi-year'];\n    const defaultOrder: SatCalendarView[] = ['month', 'multi-year', 'month'];\n    const orderPeriod = this.calendar.orderPeriodLabel === 'month' ? mouthFirstOrder : defaultOrder;\n    switch (this.calendar.currentView) {\n      case 'month':\n        this.calendar.currentView = orderPeriod[1];\n        break;\n      case 'year':\n          this.calendar.currentView = orderPeriod[2]\n          break;\n      default:\n        this.calendar.currentView = orderPeriod[0]\n        break;\n    }\n  }\n\n  /** Handles user clicks on the previous button. */\n  previousClicked(): void {\n    this.calendar.activeDate = this.calendar.currentView == 'month' ?\n        this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this._dateAdapter.addCalendarYears(\n                this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage\n            );\n  }\n\n  /** Handles user clicks on the next button. */\n  nextClicked(): void {\n    this.calendar.activeDate = this.calendar.currentView == 'month' ?\n        this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this._dateAdapter.addCalendarYears(\n                this.calendar.activeDate,\n                    this.calendar.currentView == 'year' ? 1 : yearsPerPage\n            );\n  }\n\n  /** Whether the previous period button is enabled. */\n  previousEnabled(): boolean {\n    if (!this.calendar.minDate) {\n      return true;\n    }\n    return !this.calendar.minDate ||\n        !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n  }\n\n  /** Whether the next period button is enabled. */\n  nextEnabled(): boolean {\n    return !this.calendar.maxDate ||\n        !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n  }\n\n  /** Whether the two dates represent the same view in the current view mode (month or year). */\n  private _isSameView(date1: D, date2: D): boolean {\n    if (this.calendar.currentView == 'month') {\n      return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n          this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n    }\n    if (this.calendar.currentView == 'year') {\n      return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n    }\n    // Otherwise we are in 'multi-year' view.\n    return Math.floor(this._dateAdapter.getYear(date1) / yearsPerPage) ==\n        Math.floor(this._dateAdapter.getYear(date2) / yearsPerPage);\n  }\n}\n\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'sat-calendar',\n  templateUrl: 'calendar.html',\n  styleUrls: ['calendar.css'],\n  host: {\n    'class': 'mat-calendar',\n  },\n  exportAs: 'matCalendar',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SatCalendar<D> implements AfterContentInit, AfterViewChecked, OnDestroy, OnChanges {\n\n    /** Beginning of date range. */\n    @Input()\n    get beginDate(): D | null { return this._beginDate; }\n    set beginDate(value: D | null) {\n        this._beginDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    private _beginDate: D | null;\n\n    /** Date range end. */\n    @Input()\n    get endDate(): D | null { return this._endDate; }\n    set endDate(value: D | null) {\n        this._endDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    private _endDate: D | null;\n\n    /** Whenever datepicker is for selecting range of dates. */\n    @Input() rangeMode = false;\n\n    /** Emits when new pair of dates selected. */\n    @Output() dateRangesChange = new EventEmitter<SatDatepickerRangeValue<D>>();\n\n\n    /** Whenever user already selected start of dates interval. */\n    private _beginDateSelected = false;\n\n    /** An input indicating the type of the header component, if set. */\n  @Input() headerComponent: ComponentType<any>;\n\n  /** A portal containing the header component type for this calendar. */\n  _calendarHeaderPortal: Portal<any>;\n\n  private _intlChanges: Subscription;\n\n  /**\n   * Used for scheduling that focus should be moved to the active cell on the next tick.\n   * We need to schedule it, rather than do it immediately, because we have to wait\n   * for Angular to re-evaluate the view children.\n   */\n  private _moveFocusOnNextTick = false;\n\n  /** A date representing the period (month or year) to start the calendar in. */\n  @Input()\n  get startAt(): D | null { return this._startAt; }\n  set startAt(value: D | null) {\n    this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _startAt: D | null;\n\n  /** Whether the calendar should be started in month or year view. */\n  @Input() startView: SatCalendarView = 'month';\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null { return this._selected; }\n  set selected(value: D | null) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Order the views when clicking on period label button */\n  @Input() orderPeriodLabel: 'multi-year' | 'month' = 'multi-year';\n\n  /** Emits when the currently selected date changes. */\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits the year chosen in multiyear view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits the month chosen in year view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits when any date is selected. */\n  @Output() readonly _userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Reference to the current month view component. */\n  @ViewChild(SatMonthView) monthView: SatMonthView<D>;\n\n  /** Reference to the current year view component. */\n  @ViewChild(SatYearView) yearView: SatYearView<D>;\n\n  /** Reference to the current multi-year view component. */\n  @ViewChild(SatMultiYearView) multiYearView: SatMultiYearView<D>;\n\n  /**\n   * The current active date. This determines which time period is shown and which date is\n   * highlighted when using keyboard navigation.\n   */\n  get activeDate(): D { return this._clampedActiveDate; }\n  set activeDate(value: D) {\n    this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n    this.stateChanges.next();\n  }\n  private _clampedActiveDate: D;\n\n  /** Whether the calendar is in month view. */\n  get currentView(): SatCalendarView { return this._currentView; }\n  set currentView(value: SatCalendarView) {\n    this._currentView = value;\n    this._moveFocusOnNextTick = true;\n  }\n  private _currentView: SatCalendarView;\n\n  /**\n   * Emits whenever there is a state change that the header may need to respond to.\n   */\n  stateChanges = new Subject<void>();\n\n  constructor(_intl: SatDatepickerIntl,\n              @Optional() private _dateAdapter: DateAdapter<D>,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              private _changeDetectorRef: ChangeDetectorRef) {\n\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    this._intlChanges = _intl.changes.subscribe(() => {\n      _changeDetectorRef.markForCheck();\n      this.stateChanges.next();\n    });\n  }\n\n  ngAfterContentInit() {\n    this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || SatCalendarHeader);\n    this.activeDate = this.startAt || this._dateAdapter.today();\n\n    // Assign to the private property since we don't want to move focus on init.\n    this._currentView = this.startView;\n  }\n\n  ngAfterViewChecked() {\n    if (this._moveFocusOnNextTick) {\n      this._moveFocusOnNextTick = false;\n      this.focusActiveCell();\n    }\n  }\n\n  ngOnDestroy() {\n    this._intlChanges.unsubscribe();\n    this.stateChanges.complete();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const change = changes.minDate || changes.maxDate || changes.dateFilter;\n\n    if (change && !change.firstChange) {\n      const view = this._getCurrentViewComponent();\n\n      if (view) {\n        // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n        // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n        this._changeDetectorRef.detectChanges();\n        view._init();\n      }\n    }\n\n    this.stateChanges.next();\n  }\n\n  focusActiveCell() {\n    this._getCurrentViewComponent()._focusActiveCell();\n  }\n\n  /** Handles date selection in the month view. */\n  _dateSelected(date: D): void {\n    if (this.rangeMode) {\n        if (!this._beginDateSelected) {\n          this._beginDateSelected = true;\n          this.beginDate = date;\n          this.endDate = date;\n        } else {\n          this._beginDateSelected = false;\n          if (this._dateAdapter.compareDate(<D>this.beginDate, date) <= 0) {\n            this.dateRangesChange.emit({begin: <D>this.beginDate, end: date});\n          } else {\n            this.dateRangesChange.emit({begin: date, end: <D>this.beginDate});\n          }\n        }\n    } else if (!this._dateAdapter.sameDate(date, this.selected)) {\n      this.selectedChange.emit(date);\n    }\n  }\n\n  /** Handles year selection in the multiyear view. */\n  _yearSelectedInMultiYearView(normalizedYear: D) {\n    this.yearSelected.emit(normalizedYear);\n  }\n\n  /** Handles month selection in the year view. */\n  _monthSelectedInYearView(normalizedMonth: D) {\n    this.monthSelected.emit(normalizedMonth);\n  }\n\n  _userSelected(): void {\n    this._userSelection.emit();\n  }\n\n  /** Handles year/month selection in the multi-year/year views. */\n  _goToDateInView(date: D, view: 'month' | 'year' | 'multi-year'): void {\n    this.activeDate = date;\n    this.currentView = view;\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Returns the component instance that corresponds to the current calendar view. */\n  private _getCurrentViewComponent() {\n    return this.monthView || this.yearView || this.multiYearView;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata,\n    group,\n    query,\n    animateChild,\n} from '@angular/animations';\n\n/** Animations used by the Material datepicker. */\nexport const matDatepickerAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInCalendar: AnimationTriggerMetadata;\n} = {\n    /** Transforms the height of the datepicker's calendar. */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({opacity: 0, transform: 'scale(1, 0)'})),\n        state('enter', style({opacity: 1, transform: 'scale(1, 1)'})),\n        transition('void => enter', group([\n            query('@fadeInCalendar', animateChild()),\n            animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', animate('100ms linear', style({opacity: 0})))\n    ]),\n\n    /** Fades in the content of the calendar. */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({opacity: 0})),\n        state('enter', style({opacity: 1})),\n        transition('void => *', animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ESCAPE, UP_ARROW} from '@angular/cdk/keycodes';\nimport {\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  PositionStrategy,\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {ComponentPortal, ComponentType} from '@angular/cdk/portal';\nimport {DOCUMENT} from '@angular/common';\nimport {take, filter} from 'rxjs/operators';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ComponentRef,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  Optional,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n  OnDestroy,\n} from '@angular/core';\nimport {CanColor, mixinColor, ThemePalette} from '@angular/material/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {merge, Subject, Subscription} from 'rxjs';\nimport {SatCalendar} from './calendar';\nimport {matDatepickerAnimations} from './datepicker-animations';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {SatDatepickerInput, SatDatepickerRangeValue} from './datepicker-input';\nimport {DateAdapter} from '../datetime/date-adapter';\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n\n/** Injection token that determines the scroll handling while the calendar is open. */\nexport const MAT_DATEPICKER_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('sat-datepicker-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n\n// Boilerplate for applying mixins to SatDatepickerContent.\n/** @docs-private */\nexport class SatDatepickerContentBase {\n  constructor(public _elementRef: ElementRef) { }\n}\nexport const _SatDatepickerContentMixinBase = mixinColor(SatDatepickerContentBase);\n\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * SatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'sat-datepicker-content',\n  templateUrl: 'datepicker-content.html',\n  styleUrls: ['datepicker-content.css'],\n  host: {\n    'class': 'mat-datepicker-content',\n    '[@transformPanel]': '\"enter\"',\n    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi',\n  },\n  animations: [\n    matDatepickerAnimations.transformPanel,\n    matDatepickerAnimations.fadeInCalendar,\n  ],\n  exportAs: 'matDatepickerContent',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['color'],\n})\nexport class SatDatepickerContent<D> extends _SatDatepickerContentMixinBase\n  implements AfterViewInit, CanColor {\n\n  /** Reference to the internal calendar component. */\n  @ViewChild(SatCalendar) _calendar: SatCalendar<D>;\n\n  /** Reference to the datepicker that created the overlay. */\n  datepicker: SatDatepicker<D>;\n\n  /** Whether the datepicker is above or below the input. */\n  _isAbove: boolean;\n\n  constructor(elementRef: ElementRef) {\n    super(elementRef);\n  }\n\n  ngAfterViewInit() {\n    this._calendar.focusActiveCell();\n  }\n\n  close() {\n    if (this.datepicker.closeAfterSelection) {\n      this.datepicker.close();\n    }\n  }\n}\n\n\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\n@Component({\n  moduleId: module.id,\n  selector: 'sat-datepicker',\n  template: '',\n  exportAs: 'matDatepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SatDatepicker<D> implements OnDestroy, CanColor {\n\n  /** Whenever datepicker is for selecting range of dates. */\n  @Input()\n  get rangeMode(): boolean {\n    return this._rangeMode;\n  }\n  set rangeMode(mode: boolean) {\n    this._rangeMode = mode;\n    if (this.rangeMode) {\n      this._validSelected = null;\n    } else {\n      this._beginDate = this._endDate = null;\n    }\n  }\n  private _rangeMode;\n\n  /** Start of dates interval. */\n  @Input()\n  get beginDate(): D | null { return this._beginDate; }\n  set beginDate(value: D | null) {\n    this._validSelected = null;\n    this._beginDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  _beginDate: D | null;\n\n  /** End of dates interval. */\n  @Input()\n  get endDate(): D | null { return this._endDate; }\n  set endDate(value: D | null) {\n    this._validSelected = null;\n    this._endDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  _endDate: D | null;\n\n    /** An input indicating the type of the custom header component for the calendar, if set. */\n    @Input() calendarHeaderComponent: ComponentType<any>;\n\n  /** The date to open the calendar to initially. */\n  @Input()\n  get startAt(): D | null {\n    // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n    // selected value is.\n    if (this.rangeMode) {\n      return this._startAt || (this._datepickerInput && this._datepickerInput.value ?\n        (<SatDatepickerRangeValue<D>>this._datepickerInput.value).begin : null);\n    }\n    return this._startAt || (this._datepickerInput ? <D|null>this._datepickerInput.value : null);\n  }\n  set startAt(value: D | null) {\n    this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _startAt: D | null;\n\n  /** The view that the calendar should start in. */\n  @Input() startView: 'month' | 'year' = 'month';\n\n  /** Color palette to use on the datepicker's calendar. */\n  @Input()\n  get color(): ThemePalette {\n    return this._color ||\n        (this._datepickerInput ? this._datepickerInput._getThemePalette() : undefined);\n  }\n  set color(value: ThemePalette) {\n    this._color = value;\n  }\n  _color: ThemePalette;\n\n  /**\n   * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n   * than a popup and elements have more padding to allow for bigger touch targets.\n   */\n  @Input()\n  get touchUi(): boolean { return this._touchUi; }\n  set touchUi(value: boolean) {\n    this._touchUi = coerceBooleanProperty(value);\n  }\n  private _touchUi = false;\n\n  /** Whether the datepicker pop-up should be disabled. */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled === undefined && this._datepickerInput ?\n        this._datepickerInput.disabled : !!this._disabled;\n  }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n\n    if (newValue !== this._disabled) {\n      this._disabled = newValue;\n      this._disabledChange.next(newValue);\n    }\n  }\n  private _disabled: boolean;\n\n  /**\n   * Emits selected year in multiyear view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits selected month in year view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`. */\n  @Input() panelClass: string | string[];\n\n  /** Emits when the datepicker has been opened. */\n  @Output('opened') openedStream: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Emits when the datepicker has been closed. */\n  @Output('closed') closedStream: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Enables datepicker closing after selection */\n  @Input() closeAfterSelection = true;\n\n  /** Order the views when clicking on period label button */\n  @Input() orderPeriodLabel: 'month' | 'multi-year' = 'multi-year';\n\n  /** Whether the calendar is open. */\n  @Input()\n  get opened(): boolean { return this._opened; }\n  set opened(value: boolean) { value ? this.open() : this.close(); }\n  private _opened = false;\n\n  /** The id for the datepicker calendar. */\n  id: string = `sat-datepicker-${datepickerUid++}`;\n\n  /** The currently selected date. */\n  get _selected(): D | null { return this._validSelected; }\n  set _selected(value: D | null) { this._validSelected = value; }\n  private _validSelected: D | null = null;\n\n  /** The minimum selectable date. */\n  get _minDate(): D | null {\n    return this._datepickerInput && this._datepickerInput.min;\n  }\n\n  /** The maximum selectable date. */\n  get _maxDate(): D | null {\n    return this._datepickerInput && this._datepickerInput.max;\n  }\n\n  get _dateFilter(): (date: D | null) => boolean {\n    return this._datepickerInput && this._datepickerInput._dateFilter;\n  }\n\n  /** A reference to the overlay when the calendar is opened as a popup. */\n  _popupRef: OverlayRef;\n\n  /** A reference to the dialog when the calendar is opened as a dialog. */\n  private _dialogRef: MatDialogRef<SatDatepickerContent<D>> | null;\n\n  /** A portal containing the calendar for this datepicker. */\n  private _calendarPortal: ComponentPortal<SatDatepickerContent<D>>;\n\n  /** Reference to the component instantiated in popup mode. */\n  private _popupComponentRef: ComponentRef<SatDatepickerContent<D>> | null;\n\n  /** The element that was focused before the datepicker was opened. */\n  private _focusedElementBeforeOpen: HTMLElement | null = null;\n\n  /** Subscription to value changes in the associated input element. */\n  private _inputSubscription = Subscription.EMPTY;\n\n  /** The input element this datepicker is associated with. */\n  _datepickerInput: SatDatepickerInput<D>;\n\n  /** Emits when the datepicker is disabled. */\n  readonly _disabledChange = new Subject<boolean>();\n\n  /** Emits new selected date when selected date changes. */\n  readonly _selectedChanged = new Subject<SatDatepickerRangeValue<D>|D>();\n\n  constructor(private _dialog: MatDialog,\n              private _overlay: Overlay,\n              private _ngZone: NgZone,\n              private _viewContainerRef: ViewContainerRef,\n              @Inject(MAT_DATEPICKER_SCROLL_STRATEGY) private _scrollStrategy,\n              @Optional() private _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir: Directionality,\n              @Optional() @Inject(DOCUMENT) private _document: any) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    this._inputSubscription.unsubscribe();\n    this._disabledChange.complete();\n\n    if (this._popupRef) {\n      this._popupRef.dispose();\n      this._popupComponentRef = null;\n    }\n  }\n\n  /** Selects the given date */\n  _select(date: D): void {\n    let oldValue = this._selected;\n    this._selected = date;\n    if (!this._dateAdapter.sameDate(oldValue, this._selected)) {\n      this._selectedChanged.next(date);\n    }\n  }\n\n\n  /** Selects the given date range */\n  _selectRange(dates: SatDatepickerRangeValue<D>): void {\n    if (!this._dateAdapter.sameDate(dates.begin, this.beginDate) ||\n      !this._dateAdapter.sameDate(dates.end, this.endDate)) {\n      this._selectedChanged.next(dates);\n    }\n    this._beginDate = dates.begin;\n    this._endDate = dates.end;\n  }\n  /** Emits the selected year in multiyear view */\n  _selectYear(normalizedYear: D): void {\n    this.yearSelected.emit(normalizedYear);\n  }\n\n  /** Emits selected month in year view */\n  _selectMonth(normalizedMonth: D): void {\n    this.monthSelected.emit(normalizedMonth);\n  }\n\n  /**\n   * Register an input with this datepicker.\n   * @param input The datepicker input to register with this datepicker.\n   */\n  _registerInput(input: SatDatepickerInput<D>): void {\n    if (this._datepickerInput) {\n      throw Error('A SatDatepicker can only be associated with a single input.');\n    }\n    this._datepickerInput = input;\n    this._inputSubscription =\n        this._datepickerInput._valueChange\n          .subscribe((value: SatDatepickerRangeValue<D> | D | null) => {\n          if (value === null) {\n            this.beginDate = this.endDate = this._selected = null;\n            return;\n          }\n          if (value && value.hasOwnProperty('begin') && value.hasOwnProperty('end')) {\n            value = <SatDatepickerRangeValue<D>>value;\n            if (value.begin && value.end &&\n              this._dateAdapter.compareDate(value.begin, value.end) <= 0) {\n              this.beginDate = value.begin;\n              this.endDate = value.end;\n            } else {\n              this.beginDate = this.endDate = null;\n            }\n          } else {\n            this._selected = <D>value;\n          }\n        });\n  }\n\n  /** Open the calendar. */\n  open(): void {\n    if (this._opened || this.disabled) {\n      return;\n    }\n    if (!this._datepickerInput) {\n      throw Error('Attempted to open an SatDatepicker with no associated input.');\n    }\n    if (this._document) {\n      this._focusedElementBeforeOpen = this._document.activeElement;\n    }\n\n    this.touchUi ? this._openAsDialog() : this._openAsPopup();\n    this._opened = true;\n    this.openedStream.emit();\n  }\n\n  /** Close the calendar. */\n  close(): void {\n    if (!this._opened) {\n      return;\n    }\n    if (this._popupRef && this._popupRef.hasAttached()) {\n      this._popupRef.detach();\n    }\n    if (this._dialogRef) {\n      this._dialogRef.close();\n      this._dialogRef = null;\n    }\n    if (this._calendarPortal && this._calendarPortal.isAttached) {\n      this._calendarPortal.detach();\n    }\n\n    const completeClose = () => {\n      // The `_opened` could've been reset already if\n      // we got two events in quick succession.\n      if (this._opened) {\n        this._opened = false;\n        this.closedStream.emit();\n        this._focusedElementBeforeOpen = null;\n      }\n    };\n\n    if (this._focusedElementBeforeOpen &&\n      typeof this._focusedElementBeforeOpen.focus === 'function') {\n      // Because IE moves focus asynchronously, we can't count on it being restored before we've\n      // marked the datepicker as closed. If the event fires out of sequence and the element that\n      // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n      // able to close the calendar at all. We work around it by making the logic, that marks\n      // the datepicker as closed, async as well.\n      this._focusedElementBeforeOpen.focus();\n      setTimeout(completeClose);\n    } else {\n      completeClose();\n    }\n  }\n\n  /** Open the calendar as a dialog. */\n  private _openAsDialog(): void {\n    this._dialogRef = this._dialog.open<SatDatepickerContent<D>>(SatDatepickerContent, {\n      direction: this._dir ? this._dir.value : 'ltr',\n      viewContainerRef: this._viewContainerRef,\n      panelClass: 'mat-datepicker-dialog',\n    });\n\n    this._dialogRef.afterClosed().subscribe(() => this.close());\n    this._dialogRef.componentInstance.datepicker = this;\n    this._setColor();\n  }\n\n  /** Open the calendar as a popup. */\n  private _openAsPopup(): void {\n    if (!this._calendarPortal) {\n      this._calendarPortal = new ComponentPortal<SatDatepickerContent<D>>(SatDatepickerContent,\n                                                                          this._viewContainerRef);\n    }\n\n    if (!this._popupRef) {\n      this._createPopup();\n    }\n\n    if (!this._popupRef.hasAttached()) {\n      this._popupComponentRef = this._popupRef.attach(this._calendarPortal);\n      this._popupComponentRef.instance.datepicker = this;\n      this._setColor();\n\n      // Update the position once the calendar has rendered.\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n        this._popupRef.updatePosition();\n      });\n    }\n  }\n\n  /** Create the popup. */\n  private _createPopup(): void {\n    const overlayConfig = new OverlayConfig({\n      positionStrategy: this._createPopupPositionStrategy(),\n      hasBackdrop: true,\n      backdropClass: 'mat-overlay-transparent-backdrop',\n      direction: this._dir,\n      scrollStrategy: this._scrollStrategy(),\n      panelClass: 'mat-datepicker-popup',\n    });\n\n    this._popupRef = this._overlay.create(overlayConfig);\n    this._popupRef.overlayElement.setAttribute('role', 'dialog');\n\n    merge(\n      this._popupRef.backdropClick(),\n      this._popupRef.detachments(),\n      this._popupRef.keydownEvents().pipe(filter(event => {\n        // Closing on alt + up is only valid when there's an input associated with the datepicker.\n        return event.keyCode === ESCAPE ||\n               (this._datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n      }))\n    ).subscribe(() => this.close());\n  }\n\n  /** Create the popup PositionStrategy. */\n  private _createPopupPositionStrategy(): PositionStrategy {\n    return this._overlay.position()\n      .flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin())\n      .withTransformOriginOn('.mat-datepicker-content')\n      .withFlexibleDimensions(false)\n      .withViewportMargin(8)\n      .withPush(false)\n      .withPositions([\n        {\n          originX: 'start',\n          originY: 'bottom',\n          overlayX: 'start',\n          overlayY: 'top'\n        },\n        {\n          originX: 'start',\n          originY: 'top',\n          overlayX: 'start',\n          overlayY: 'bottom'\n        },\n        {\n          originX: 'end',\n          originY: 'bottom',\n          overlayX: 'end',\n          overlayY: 'top'\n        },\n        {\n          originX: 'end',\n          originY: 'top',\n          overlayX: 'end',\n          overlayY: 'bottom'\n        }\n      ]);\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Passes the current theme color along to the calendar overlay. */\n  private _setColor(): void {\n    const color = this.color;\n    if (this._popupComponentRef) {\n      this._popupComponentRef.instance.color = color;\n    }\n    if (this._dialogRef) {\n      this._dialogRef.componentInstance.color = color;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {DOWN_ARROW} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidationErrors,\n  Validator,\n  ValidatorFn,\n  Validators\n} from '@angular/forms';\nimport {DateAdapter} from '../datetime/date-adapter';\nimport {MAT_DATE_FORMATS, MatDateFormats} from '../datetime/date-formats';\nimport {MatFormField} from '@angular/material/form-field';\nimport {MAT_INPUT_VALUE_ACCESSOR} from '@angular/material/input';\nimport {Subscription} from 'rxjs';\nimport {SatDatepicker} from './datepicker';\nimport {createMissingDateImplError} from './datepicker-errors';\n\n\nexport const MAT_DATEPICKER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SatDatepickerInput),\n  multi: true\n};\n\n\nexport const MAT_DATEPICKER_VALIDATORS: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => SatDatepickerInput),\n  multi: true\n};\n\n/**\n * Special interface to input and output dates interval.\n */\nexport interface SatDatepickerRangeValue<D> {\n  begin: D | null;\n  end: D | null;\n}\n\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use SatDatepickerInputEvent instead.\n */\nexport class SatDatepickerInputEvent<D> {\n  /** The new value for the target datepicker input. */\n  value: SatDatepickerRangeValue<D> | D | null;\n\n  constructor(\n    /** Reference to the datepicker input component that emitted the event. */\n    public target: SatDatepickerInput<D>,\n    /** Reference to the native input element associated with the datepicker input. */\n    public targetElement: HTMLElement) {\n    this.value = this.target.value;\n  }\n}\n\n\n/** Directive used to connect an input to a SatDatepicker. */\n@Directive({\n  selector: 'input[satDatepicker]',\n  providers: [\n    MAT_DATEPICKER_VALUE_ACCESSOR,\n    MAT_DATEPICKER_VALIDATORS,\n    {provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: SatDatepickerInput},\n  ],\n  host: {\n    '[attr.aria-haspopup]': 'true',\n    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n    '[disabled]': 'disabled',\n    '(input)': '_onInput($event.target.value)',\n    '(change)': '_onChange()',\n    '(blur)': '_onBlur()',\n    '(keydown)': '_onKeydown($event)',\n  },\n  exportAs: 'matDatepickerInput',\n})\nexport class SatDatepickerInput<D> implements AfterContentInit, ControlValueAccessor, OnDestroy,\n    Validator {\n  /** The datepicker that this input is associated with. */\n  @Input()\n  set satDatepicker(value: SatDatepicker<D>) {\n    this.registerDatepicker(value);\n  }\n  _datepicker: SatDatepicker<D>;\n\n  private registerDatepicker(value: SatDatepicker<D>) {\n    if (value) {\n      this._datepicker = value;\n      this._datepicker._registerInput(this);\n    }\n  }\n\n  /** Function that can be used to filter out dates within the datepicker. */\n  @Input()\n  set matDatepickerFilter(value: (date: D | null) => boolean) {\n    this._dateFilter = value;\n    this._validatorOnChange();\n  }\n  _dateFilter: (date: SatDatepickerRangeValue<D> | D | null) => boolean;\n\n  /** The value of the input. */\n  @Input()\n  get value(): SatDatepickerRangeValue<D> | D | null {\n    return this._value;\n  }\n  set value(value:  SatDatepickerRangeValue<D> | D | null) {\n    if (value && value.hasOwnProperty('begin') && value.hasOwnProperty('end')) {\n      /** Range mode */\n      const rangeValue = <SatDatepickerRangeValue<D>>value;\n      rangeValue.begin = this._dateAdapter.deserialize(rangeValue.begin);\n      rangeValue.end = this._dateAdapter.deserialize(rangeValue.end);\n      this._lastValueValid = !rangeValue.begin || !rangeValue.end ||\n          this._dateAdapter.isValid(rangeValue.begin) && this._dateAdapter.isValid(rangeValue.end);\n      rangeValue.begin = this._getValidDateOrNull(rangeValue.begin);\n      rangeValue.end = this._getValidDateOrNull(rangeValue.end);\n      let oldDate = <SatDatepickerRangeValue<D> | null>this.value;\n      this._elementRef.nativeElement.value =\n          rangeValue && rangeValue.begin && rangeValue.end\n              ? this._dateAdapter.format(rangeValue.begin, this._dateFormats.display.dateInput) +\n                ' - ' +\n                this._dateAdapter.format(rangeValue.end, this._dateFormats.display.dateInput)\n              : '';\n      if (oldDate == null && rangeValue != null || oldDate != null && rangeValue == null ||\n          !this._dateAdapter.sameDate((<SatDatepickerRangeValue<D>>oldDate).begin,\n              rangeValue.begin) ||\n          !this._dateAdapter.sameDate((<SatDatepickerRangeValue<D>>oldDate).end,\n              rangeValue.end)) {\n        if (rangeValue.end && rangeValue.begin &&\n            this._dateAdapter\n                .compareDate(rangeValue.begin, rangeValue.end ) > 0) { // if begin > end\n          value = null;\n        }\n        this._value = value;\n        this._valueChange.emit(value);\n      }\n    } else {\n      /** Not range mode */\n      value = this._dateAdapter.deserialize(value);\n      this._lastValueValid = !value || this._dateAdapter.isValid(value);\n      value = this._getValidDateOrNull(value);\n      let oldDate = this.value;\n      this._value = value;\n      this._elementRef.nativeElement.value =\n          value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n      if (!this._dateAdapter.sameDate(<D>oldDate, value)) {\n        this._valueChange.emit(value);\n      }\n    }\n  }\n  private _value: SatDatepickerRangeValue<D> | D | null;\n\n  /** The minimum valid date. */\n  @Input()\n  get min(): D | null { return this._min; }\n  set min(value: D | null) {\n    this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._validatorOnChange();\n  }\n  private _min: D | null;\n\n  /** The maximum valid date. */\n  @Input()\n  get max(): D | null { return this._max; }\n  set max(value: D | null) {\n    this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._validatorOnChange();\n  }\n  private _max: D | null;\n\n  /** Whether the datepicker-input is disabled. */\n  @Input()\n  get disabled(): boolean { return !!this._disabled; }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    const element = this._elementRef.nativeElement;\n\n    if (this._disabled !== newValue) {\n      this._disabled = newValue;\n      this._disabledChange.emit(newValue);\n    }\n\n    // We need to null check the `blur` method, because it's undefined during SSR.\n    if (newValue && element.blur) {\n      // Normally, native input elements automatically blur if they turn disabled. This behavior\n      // is problematic, because it would mean that it triggers another change detection cycle,\n      // which then causes a changed after checked error if the input element was focused before.\n      element.blur();\n    }\n  }\n  private _disabled: boolean;\n\n  /** Emits when a `change` event is fired on this `<input>`. */\n  @Output() readonly dateChange: EventEmitter<SatDatepickerInputEvent<D>> =\n      new EventEmitter<SatDatepickerInputEvent<D>>();\n\n  /** Emits when an `input` event is fired on this `<input>`. */\n  @Output() readonly dateInput: EventEmitter<SatDatepickerInputEvent<D>> =\n      new EventEmitter<SatDatepickerInputEvent<D>>();\n\n  /** Emits when the value changes (either due to user input or programmatic change). */\n  _valueChange = new EventEmitter<SatDatepickerRangeValue<D>|D|null>();\n\n  /** Emits when the disabled state has changed */\n  _disabledChange = new EventEmitter<boolean>();\n\n  _onTouched = () => {};\n\n  private _cvaOnChange: (value: any) => void = () => {};\n\n  private _validatorOnChange = () => {};\n\n  private _datepickerSubscription = Subscription.EMPTY;\n\n  private _localeSubscription = Subscription.EMPTY;\n\n  /** The form control validator for whether the input parses. */\n  private _parseValidator: ValidatorFn = (): ValidationErrors | null => {\n    return this._lastValueValid ?\n        null : {'matDatepickerParse': {'text': this._elementRef.nativeElement.value}};\n  }\n\n  /** The form control validator for the min date. */\n  private _minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    if (this._datepicker.rangeMode && control.value) {\n      const beginDate =\n          this._getValidDateOrNull(this._dateAdapter.deserialize(control.value.begin));\n      const endDate =\n          this._getValidDateOrNull(this._dateAdapter.deserialize(control.value.end));\n      if (this.min) {\n        if (beginDate && this._dateAdapter.compareDate(this.min, beginDate) > 0) {\n          return {'matDatepickerMin': {'min': this.min, 'actual': beginDate}};\n        }\n        if (endDate && this._dateAdapter.compareDate(this.min, endDate) > 0) {\n          return {'matDatepickerMin': {'min': this.min, 'actual': endDate}};\n        }\n      }\n      return null;\n    }\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    return (!this.min || !controlValue ||\n        this._dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n        null : {'matDatepickerMin': {'min': this.min, 'actual': controlValue}};\n  }\n\n  /** The form control validator for the max date. */\n  private _maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    if (this._datepicker.rangeMode && control.value) {\n      const beginDate =\n          this._getValidDateOrNull(this._dateAdapter.deserialize(control.value.begin));\n      const endDate = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value.end));\n      if (this.max) {\n        if (beginDate && this._dateAdapter.compareDate(this.max, beginDate) < 0 ) {\n          return {'matDatepickerMax': {'max': this.max, 'actual': beginDate}};\n        }\n        if (endDate && this._dateAdapter.compareDate(this.max, endDate) < 0) {\n          return {'matDatepickerMax': {'max': this.max, 'actual': endDate}};\n        }\n      }\n      return null;\n    }\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    return (!this.max || !controlValue ||\n        this._dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n        null : {'matDatepickerMax': {'max': this.max, 'actual': controlValue}};\n  }\n\n  /** The form control validator for the date filter. */\n  private _filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    if (this._datepicker.rangeMode && control.value) {\n      const beginDate =\n          this._getValidDateOrNull(this._dateAdapter.deserialize(control.value.begin));\n      const endDate = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value.end));\n      return !this._dateFilter || !beginDate && !endDate ||\n          this._dateFilter(beginDate) && this._dateFilter(endDate) ?\n        null : {'matDatepickerFilter': true};\n    }\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    return !this._dateFilter || !controlValue || this._dateFilter(controlValue) ?\n        null : {'matDatepickerFilter': true};\n  }\n\n  /** The form control validator for the date filter. */\n  private _rangeValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    if (this._datepicker.rangeMode && control.value) {\n      const beginDate =\n          this._getValidDateOrNull(this._dateAdapter.deserialize(control.value.begin));\n      const endDate = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value.end));\n      return !beginDate || !endDate || this._dateAdapter.compareDate(beginDate, endDate) <= 0 ?\n        null : {'matDatepickerRange': true};\n    }\n    return null;\n  }\n\n  /** The combined form control validator for this input. */\n  private _validator: ValidatorFn | null =\n      Validators.compose(\n          [this._parseValidator, this._minValidator, this._maxValidator,\n            this._filterValidator, this._rangeValidator]);\n\n  /** Whether the last value set on the input was valid. */\n  private _lastValueValid = false;\n\n  constructor(\n      private _elementRef: ElementRef,\n      @Optional() public _dateAdapter: DateAdapter<D>,\n      @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n      @Optional() private _formField: MatFormField) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    // Update the displayed date when the locale changes.\n    this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n      this.value = this.value;\n    });\n  }\n\n  ngAfterContentInit() {\n    if (this._datepicker) {\n      this._datepickerSubscription =\n          this._datepicker._selectedChanged.subscribe((selected: SatDatepickerRangeValue<D> | D) => {\n            this.value = selected;\n            this._cvaOnChange(selected);\n            this._onTouched();\n            this.dateInput.emit(new SatDatepickerInputEvent(this, this._elementRef.nativeElement));\n            this.dateChange.emit(new SatDatepickerInputEvent(this, this._elementRef.nativeElement));\n          });\n    }\n  }\n\n  ngOnDestroy() {\n    this._datepickerSubscription.unsubscribe();\n    this._localeSubscription.unsubscribe();\n    this._valueChange.complete();\n    this._disabledChange.complete();\n  }\n\n  /** @docs-private */\n  registerOnValidatorChange(fn: () => void): void {\n    this._validatorOnChange = fn;\n  }\n\n  /** @docs-private */\n  validate(c: AbstractControl): ValidationErrors | null {\n    return this._validator ? this._validator(c) : null;\n  }\n\n  /**\n   * @deprecated\n   * @deletion-target 7.0.0 Use `getConnectedOverlayOrigin` instead\n   */\n  getPopupConnectionElementRef(): ElementRef {\n    return this.getConnectedOverlayOrigin();\n  }\n\n  /**\n   * Gets the element that the datepicker popup should be connected to.\n   * @return The element to connect the popup to.\n   */\n  getConnectedOverlayOrigin(): ElementRef {\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n  }\n\n  // Implemented as part of ControlValueAccessor\n  writeValue(value: SatDatepickerRangeValue<D> | D): void {\n    this.value = value;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn: (value: any) => void): void {\n    this._cvaOnChange = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  _onKeydown(event: KeyboardEvent) {\n    if (event.altKey && event.keyCode === DOWN_ARROW) {\n      this._datepicker.open();\n      event.preventDefault();\n    }\n  }\n\n  _onInput(value: string) {\n    let date: SatDatepickerRangeValue<D>|D|null = null;\n    if (this._datepicker.rangeMode) {\n      const parts = value.split('-');\n      if (parts.length > 1) {\n          const position = Math.floor(parts.length / 2);\n          const beginDateString = parts.slice(0, position).join('-');\n          const endDateString = parts.slice(position).join('-');\n          let beginDate = this._dateAdapter.parse(beginDateString,\n              this._dateFormats.parse.dateInput);\n          let endDate = this._dateAdapter.parse(endDateString, this._dateFormats.parse.dateInput);\n          this._lastValueValid = !beginDate || !endDate || this._dateAdapter.isValid(beginDate) &&\n                                                           this._dateAdapter.isValid(endDate);\n          beginDate = this._getValidDateOrNull(beginDate);\n          endDate = this._getValidDateOrNull(endDate);\n          if (beginDate && endDate) {\n            date = <SatDatepickerRangeValue<D>>{begin: beginDate, end: endDate};\n          }\n      }\n    } else {\n      date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n      this._lastValueValid = !date || this._dateAdapter.isValid(date);\n      date = this._getValidDateOrNull(date);\n    }\n    this._value = date;\n    this._cvaOnChange(date);\n    this._valueChange.emit(date);\n    this.dateInput.emit(new SatDatepickerInputEvent(this, this._elementRef.nativeElement));\n  }\n\n  _onChange() {\n    this.dateChange.emit(new SatDatepickerInputEvent(this, this._elementRef.nativeElement));\n  }\n\n  /** Returns the palette used by the input's form field, if any. */\n  _getThemePalette() {\n    return this._formField ? this._formField.color : undefined;\n  }\n\n  /** Handles blur events on the input. */\n  _onBlur() {\n    // Reformat the input only if we have a valid value.\n    if (this.value) {\n      this._formatValue(this.value);\n    }\n\n    this._onTouched();\n  }\n\n  /** Formats a value and sets it on the input element. */\n  private _formatValue(value: SatDatepickerRangeValue<D> | D | null) {\n      if (value && value.hasOwnProperty('begin') && value.hasOwnProperty('end')) {\n          value = value as SatDatepickerRangeValue<D>\n          this._elementRef.nativeElement.value =\n              value && value.begin && value.end\n                  ? this._dateAdapter.format(value.begin, this._dateFormats.display.dateInput) +\n                  ' - ' +\n                  this._dateAdapter.format(value.end, this._dateFormats.display.dateInput)\n                  : ''\n      }\n      else {\n            value = value as D | null\n          this._elementRef.nativeElement.value =\n              value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n      }\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {merge, of as observableOf, Subscription} from 'rxjs';\nimport {SatDatepicker} from './datepicker';\nimport {SatDatepickerIntl} from './datepicker-intl';\n\n\n/** Can be used to override the icon of a `matDatepickerToggle`. */\n@Directive({\n  selector: '[matDatepickerToggleIcon]'\n})\nexport class SatDatepickerToggleIcon {}\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'sat-datepicker-toggle',\n  templateUrl: 'datepicker-toggle.html',\n  styleUrls: ['datepicker-toggle.css'],\n  host: {\n    'class': 'mat-datepicker-toggle',\n    '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n    '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n    '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n  },\n  exportAs: 'matDatepickerToggle',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SatDatepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\n  private _stateChanges = Subscription.EMPTY;\n\n  /** Datepicker instance that the button will toggle. */\n  @Input('for') datepicker: SatDatepicker<D>;\n\n  /** Whether the toggle button is disabled. */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled === undefined ? this.datepicker.disabled : !!this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled: boolean;\n\n  /** Custom icon set by the consumer. */\n  @ContentChild(SatDatepickerToggleIcon) _customIcon: SatDatepickerToggleIcon;\n\n  constructor(public _intl: SatDatepickerIntl, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.datepicker) {\n      this._watchStateChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.unsubscribe();\n  }\n\n  ngAfterContentInit() {\n    this._watchStateChanges();\n  }\n\n  _open(event: Event): void {\n    if (this.datepicker && !this.disabled) {\n      this.datepicker.open();\n      event.stopPropagation();\n    }\n  }\n\n  private _watchStateChanges() {\n    const datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : observableOf();\n    const inputDisabled = this.datepicker && this.datepicker._datepickerInput ?\n        this.datepicker._datepickerInput._disabledChange : observableOf();\n    const datepickerToggled = this.datepicker ?\n        merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n        observableOf();\n\n    this._stateChanges.unsubscribe();\n    this._stateChanges = merge(\n      this._intl.changes,\n      datepickerDisabled,\n      inputDisabled,\n      datepickerToggled\n    ).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {SatCalendar, SatCalendarHeader} from './calendar';\nimport {SatCalendarBody} from './calendar-body';\nimport {\n  SatDatepicker,\n  SatDatepickerContent,\n  MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n} from './datepicker';\nimport {SatDatepickerInput} from './datepicker-input';\nimport {SatDatepickerIntl} from './datepicker-intl';\nimport {SatDatepickerToggle, SatDatepickerToggleIcon} from './datepicker-toggle';\nimport {SatMonthView} from './month-view';\nimport {SatMultiYearView} from './multi-year-view';\nimport {SatYearView} from './year-view';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatDialogModule,\n    OverlayModule,\n    A11yModule,\n    PortalModule,\n  ],\n  exports: [\n    SatCalendar,\n    SatCalendarBody,\n    SatDatepicker,\n    SatDatepickerContent,\n    SatDatepickerInput,\n    SatDatepickerToggle,\n    SatDatepickerToggleIcon,\n    SatMonthView,\n    SatYearView,\n    SatMultiYearView,\n    SatCalendarHeader,\n  ],\n  declarations: [\n    SatCalendar,\n    SatCalendarBody,\n    SatDatepicker,\n    SatDatepickerContent,\n    SatDatepickerInput,\n    SatDatepickerToggle,\n    SatDatepickerToggleIcon,\n    SatMonthView,\n    SatYearView,\n    SatMultiYearView,\n    SatCalendarHeader,\n  ],\n  providers: [\n    SatDatepickerIntl,\n    MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n  ],\n  entryComponents: [\n    SatDatepickerContent,\n    SatCalendarHeader,\n  ]\n})\nexport class SatDatepickerModule {}\n"],"names":["InjectionToken","inject","LOCALE_ID","Subject","tslib_1.__extends","platform","Injectable","Optional","Inject","Platform","NgModule","PlatformModule","EventEmitter","take","Component","ViewEncapsulation","ChangeDetectionStrategy","ElementRef","NgZone","Input","Output","LEFT_ARROW","RIGHT_ARROW","UP_ARROW","DOWN_ARROW","HOME","END","PAGE_UP","PAGE_DOWN","ENTER","ChangeDetectorRef","Directionality","ViewChild","forwardRef","ComponentPortal","trigger","state","style","transition","group","query","animateChild","animate","overlay","Overlay","mixinColor","Subscription","coerceBooleanProperty","input","OverlayConfig","merge","filter","ESCAPE","MatDialog","ViewContainerRef","DOCUMENT","NG_VALUE_ACCESSOR","NG_VALIDATORS","Validators","Directive","MAT_INPUT_VALUE_ACCESSOR","MatFormField","observableOf","ContentChild","CommonModule","MatButtonModule","MatDialogModule","OverlayModule","A11yModule","PortalModule"],"mappings":"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"}
