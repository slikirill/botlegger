{"version":3,"sources":["webpack:///./src/app/role/admin/admin-item-edit/admin-item-edit.component.css","webpack:///./src/app/role/admin/admin-item-edit/admin-item-edit.component.html","webpack:///./src/app/role/admin/admin-item-edit/admin-item-edit.component.ts","webpack:///./src/app/role/admin/admin-item-list/admin-item-list.component.css","webpack:///./src/app/role/admin/admin-item-list/admin-item-list.component.html","webpack:///./src/app/role/admin/admin-item-list/admin-item-list.component.ts","webpack:///./src/app/role/admin/admin-order-list/admin-order-list.component.css","webpack:///./src/app/role/admin/admin-order-list/admin-order-list.component.html","webpack:///./src/app/role/admin/admin-order-list/admin-order-list.component.ts","webpack:///./src/app/role/admin/admin-purchase-edit/admin-purchase-edit.component.css","webpack:///./src/app/role/admin/admin-purchase-edit/admin-purchase-edit.component.html","webpack:///./src/app/role/admin/admin-purchase-edit/admin-purchase-edit.component.ts","webpack:///./src/app/role/admin/admin-purchase-list/admin-purchase-list.component.css","webpack:///./src/app/role/admin/admin-purchase-list/admin-purchase-list.component.html","webpack:///./src/app/role/admin/admin-purchase-list/admin-purchase-list.component.ts","webpack:///./src/app/role/admin/admin-purchase-list/purchase.invoice.datasource.ts","webpack:///./src/app/role/admin/admin-routing.module.ts","webpack:///./src/app/role/admin/admin-sale-edit/admin-sale-edit.component.css","webpack:///./src/app/role/admin/admin-sale-edit/admin-sale-edit.component.html","webpack:///./src/app/role/admin/admin-sale-edit/admin-sale-edit.component.ts","webpack:///./src/app/role/admin/admin-sale-edit/sale-snackbar/sale-snackbar.component.css","webpack:///./src/app/role/admin/admin-sale-edit/sale-snackbar/sale-snackbar.component.html","webpack:///./src/app/role/admin/admin-sale-edit/sale-snackbar/sale-snackbar.component.ts","webpack:///./src/app/role/admin/admin-sale-list/admin-sale-list.component.css","webpack:///./src/app/role/admin/admin-sale-list/admin-sale-list.component.html","webpack:///./src/app/role/admin/admin-sale-list/admin-sale-list.component.ts","webpack:///./src/app/role/admin/admin-sale-list/sale.invoice.datasource.ts","webpack:///./src/app/role/admin/admin.module.ts","webpack:///./src/app/role/admin/admin.service.ts"],"names":[],"mappings":"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","file":"role-admin-admin-module.js","sourcesContent":["module.exports = \".mcard{\\n    min-height: 87vh;\\n    background-color: white;\\n    margin-left: 5px;\\n    margin-right: 5px;\\n    margin-top: 5px;\\n}\\n\\n.card {\\n    margin-bottom: 1%;\\n  }\"","module.exports = \"<mat-card class=\\\"mcard\\\">\\n    <mat-card-header *ngIf=\\\"item$ | async as item\\\">\\n    <div mat-card-avatar [ngStyle]=\\\"{'background-image': 'url(/backend/api/storages/images/download/' + item.image + ')'}\\\" style=\\\"background-size: cover;\\\"></div>\\n    <div fxLayout=\\\"row\\\" fxFill fxLayoutAlign=\\\"space-between center\\\">\\n      <div fxFlex=\\\"75\\\">\\n          <mat-card-title *ngIf=\\\"itemForm && item\\\">{{item.name}}</mat-card-title>\\n          <mat-card-subtitle  *ngIf=\\\"itemForm && item\\\">{{item.type}}</mat-card-subtitle>\\n      </div>\\n      <div fxFlex>\\n          <button mat-button (click)=\\\"imgFileInput.click()\\\">Add a photo</button>\\n          <input hidden #imgFileInput type=\\\"file\\\" (change)=\\\"uploadImage($event)\\\">\\n      </div>\\n    </div>\\n    </mat-card-header>\\n    \\n    <form fxLayout=\\\"column\\\" *ngIf=\\\"item$ | async as item\\\" [formGroup]=\\\"itemForm\\\" (ngSubmit)=\\\"onUpdate()\\\">\\n      <ng-template *ngIf=\\\"!editMode\\\">\\n        <input matInput formControlName=\\\"id\\\" [(value)]=\\\"item.id\\\">\\n      </ng-template>\\n      <div  fxLayout=\\\"row\\\"  fxFill fxLayoutAlign=\\\"space-between center\\\">\\n        <input hidden formControlName=\\\"image\\\" [(value)]=\\\"item.image\\\">\\n        \\n        <mat-form-field fxFlex=\\\"32\\\">\\n          <input matInput placeholder=\\\"Name\\\" [(value)]=\\\"item.name\\\" formControlName=\\\"name\\\">\\n          <mat-error *ngIf=\\\"itemForm.controls['name'].hasError('required')\\\">\\n            Name is\\n            <strong>required</strong>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field fxFlex=\\\"32\\\">\\n            <mat-select placeholder=\\\"Menu Item\\\" name=\\\"menuItem\\\" value=\\\"{{item.menuItem}}\\\" formControlName=\\\"menuItem\\\">\\n              <mat-option value=\\\"true\\\">Yes</mat-option>\\n              <mat-option value=\\\"false\\\">No</mat-option>\\n            </mat-select>\\n        </mat-form-field>\\n        <mat-form-field  fxFlex=\\\"32\\\">\\n          <mat-select placeholder=\\\"Executor\\\" name=\\\"executor\\\" [(value)]=\\\"item.executor\\\" formControlName=\\\"executor\\\">\\n            <mat-option value=\\\"chef\\\">Chef</mat-option>\\n            <mat-option value=\\\"barman\\\">Barman</mat-option>\\n          </mat-select>\\n      </mat-form-field>\\n      </div>\\n      <div  fxLayout=\\\"row\\\"  fxFill  fxLayoutAlign=\\\"space-between center\\\">\\n        <mat-form-field fxFlex=\\\"32\\\">\\n            <mat-select placeholder=\\\"Category\\\" name=\\\"categoryId\\\" [(value)]=\\\"item.categoryId\\\" formControlName=\\\"categoryId\\\">\\n              <mat-option *ngFor=\\\"let category of categories$ | async as categories\\\"  [value]=\\\"category.id\\\">\\n                {{category.name}}\\n              </mat-option>\\n            </mat-select>\\n        </mat-form-field>\\n        <mat-form-field fxFlex=\\\"32\\\">\\n            <mat-select placeholder=\\\"Type\\\" name=\\\"type\\\" [(value)]=\\\"item.type\\\" formControlName=\\\"type\\\" (selectionChange)=\\\"typeChanged(e)\\\">\\n              <mat-option value=\\\"ingredient\\\">Ingredient</mat-option>\\n              <mat-option value=\\\"recipe\\\">Recipe</mat-option>\\n            </mat-select>\\n        </mat-form-field>\\n        <mat-form-field fxFlex=\\\"32\\\">\\n            <mat-select placeholder=\\\"Tare\\\" name=\\\"tare\\\" [(value)]=\\\"item.tare\\\" formControlName=\\\"tare\\\">\\n              <mat-option>None</mat-option>\\n              <mat-option value=\\\"pack\\\">Pack</mat-option>\\n              <mat-option value=\\\"bottle\\\">Bottle</mat-option>\\n            </mat-select>\\n        </mat-form-field>\\n      </div>\\n      <div fxLayout=\\\"row\\\" fxFill fxLayoutAlign=\\\"space-between center\\\"  >\\n        <mat-form-field  *ngIf=\\\"isRecipe\\\" fxFlex=\\\"24\\\">\\n            <input matInput placeholder=\\\"Weight\\\" [(value)]=\\\"item.weight\\\" formControlName=\\\"weight\\\">\\n            <mat-error *ngIf=\\\"itemForm.controls['weight'].hasError('required')\\\">\\n                Weight is\\n              <strong>required</strong>\\n            </mat-error>\\n        </mat-form-field>\\n        <mat-form-field  *ngIf=\\\"!isRecipe\\\" fxFlex=\\\"24\\\">\\n          <input matInput placeholder=\\\"Quantity\\\" [(value)]=\\\"item.quantity\\\" formControlName=\\\"quantity\\\">\\n          <mat-error *ngIf=\\\"itemForm.controls['quantity'].hasError('required')\\\">\\n              Quantity is\\n            <strong>required</strong>\\n          </mat-error>\\n      </mat-form-field>\\n      <mat-form-field fxFlex=\\\"8\\\">\\n          <mat-select placeholder=\\\"Unit\\\" name=\\\"unit\\\" [(value)]=\\\"item.unit\\\" formControlName=\\\"unit\\\">\\n            <mat-option value=\\\"g\\\">g</mat-option>\\n            <mat-option value=\\\"ml\\\">ml</mat-option>\\n            <mat-option value=\\\"pieces\\\">pieces</mat-option>\\n          </mat-select>\\n      </mat-form-field>\\n        <mat-form-field fxFlex=\\\"24\\\">\\n          <input matInput placeholder=\\\"Average cost\\\" [(value)]=\\\"item.averageCost\\\" formControlName=\\\"averageCost\\\">\\n          <span matSuffix>&#x24;</span>\\n          <mat-error *ngIf=\\\"itemForm.controls['averageCost'].hasError('required')\\\">\\n              Average cost is\\n            <strong>required</strong>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field  fxFlex=\\\"24\\\">\\n            <input matInput placeholder=\\\"Selling price\\\" [(value)]=\\\"item.sellingPrice\\\" formControlName=\\\"sellingPrice\\\">\\n            <span matSuffix>&#x24;</span> \\n            <mat-error *ngIf=\\\"itemForm.controls['sellingPrice'].hasError('required')\\\">\\n                Selling price is\\n              <strong>required</strong>\\n            </mat-error>\\n        </mat-form-field>\\n      </div>\\n      <div style=\\\"position: fixed; bottom: 10px; right: 10px;\\\">\\n        <button  mat-fab color=\\\"primary\\\" type=\\\"submit\\\"><mat-icon aria-label=\\\"Save\\\">save</mat-icon></button>\\n      </div>\\n    </form>\\n\\n    <div *ngIf=\\\"isRecipe && editMode\\\">\\n      <div  fxLayout=\\\"row\\\" fxFill >\\n        <div fxFlex=\\\"98\\\"><h5>Ingredients</h5></div>\\n      </div>\\n      <form [formGroup]=\\\"ingredientsForm\\\">\\n          <div  formArrayName=\\\"ingredients\\\" fxLayout=\\\"row wrap\\\" fxLayout.sm=\\\"column\\\" fxLayoutGap=\\\"1%\\\" fxLayoutWrap fxLayoutAlign=\\\"start center\\\" fxLayoutAlign.sm=\\\"center\\\"   >\\n              <mat-card class=\\\"card\\\" fxFlex=\\\"49%\\\" fxFlex.xs=\\\"100\\\"  \\n              *ngFor=\\\"let ingredient of ingredients$ | async as ingredients; let i = index\\\"\\n              [formGroupName]=\\\"i\\\">\\n                  <mat-card-header fxLayout=\\\"row\\\">\\n                      <div  fxLayout=\\\"row\\\" fxFlex=\\\"70\\\">\\n                          <div mat-card-avatar [ngStyle]=\\\"{'background-image':'url(/backend/api/storages/images/download/'+ingredient.ingredient.image+')'}\\\" style=\\\"background-size: cover;\\\"></div>\\n                          <div fxLayout=\\\"column\\\"> \\n                              <mat-card-title>{{ingredient.ingredient.name}} </mat-card-title>\\n                              <mat-card-subtitle>{{ingredient.ingredient.type}}</mat-card-subtitle>\\n                          </div>\\n                      </div>\\n                  </mat-card-header>\\n                  <mat-card-actions fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                      <div fxFlex=\\\"70\\\">\\n          \\n                      </div>\\n\\n                          <mat-form-field fxFlex>\\n                              <input matInput [(value)]=\\\"ingredient.recipeQuantity\\\" formControlName=\\\"recipeQuantity\\\" (focusout)=\\\"onUpdateIngredient(ingredientsForm.get('ingredients').controls[i].value, i)\\\">\\n                              <span matSuffix>{{ingredient.ingredient.unit}}</span>\\n                            </mat-form-field>\\n\\n                  </mat-card-actions>\\n              </mat-card>\\n          </div>\\n    </form>\\n    </div>\\n  </mat-card>\\n\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ElementRef , Renderer2} from '@angular/core';\n\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators, FormArray} from '@angular/forms';\nimport { AdminService } from './../admin.service';\nimport {\n  BehaviorSubject,\n  Subscription,\n  Observable,\n  of,\n  Subject} from 'rxjs';\n\nimport {\n  debounceTime,\n  delay,\n  distinctUntilChanged,\n  flatMap,\n  map,\n  tap} from 'rxjs/operators';\n\nimport { SearchService } from './../../../shared/dashboard/search.service';\n\n\n\nimport { Item } from './../../../model/Item';\nimport { Category } from './../../../model/Category';\nimport { Ingredient } from './../../../model/Ingredient';\n\n@Component({\n  selector: 'app-admin-item-edit',\n  templateUrl: './admin-item-edit.component.html',\n  styleUrls: ['./admin-item-edit.component.css']\n})\nexport class AdminItemEditComponent implements OnInit, OnDestroy {\n  public id: string;\n  public editMode = false;\n\n  private _item: Subscription;\n  public item: BehaviorSubject<Item> = new BehaviorSubject<Item>(\n    {\n      name: '',\n      type: '',\n      categoryId: null,\n      tare: '',\n      quantity: 0,\n      weight: 0,\n      unit: '',\n      image: 'no-image.png',\n      menuItem: '',\n      averageCost: 0,\n      sellingPrice: 0,\n      creatorId: '',\n      id: '',\n      executor: null,\n      autoSellingPrice: false,\n      description: '',\n    }\n  );\n  public item$ = this.item.asObservable();\n\n  private _ingredients: Subscription;\n  public ingredients: BehaviorSubject<Ingredient[]> = new BehaviorSubject<Ingredient[]>([]);\n  public ingredients$ = this.ingredients.asObservable();\n\n  private _categories: Subscription;\n  public categories: Subject<Category[]> = new Subject<Category[]>();\n  public categories$ = this.categories.asObservable();\n\n  public itemForm: FormGroup;\n  public ingredientsForm: FormGroup;\n  public ingredientsArray: FormArray;\n  public isRecipe: boolean;\n  public fullText;\n\n  constructor(private route: ActivatedRoute,\n    private adminService: AdminService,\n    private router: Router,\n    private searchService: SearchService) { }\n\n    ngOnInit() {\n      this.route.params\n        .subscribe(\n          (params: Params) => {\n            this.id = params.id;\n            this.editMode = params.id != null;\n            this._categories = this.adminService.getCategories().subscribe(categories => {\n              this.categories.next(categories);\n            });\n            if (this.editMode === true) {\n                this.adminService.getItem(this.id).subscribe(item => {\n                  this.item.next(item);\n                });\n            }\n          }\n        );\n        this._item = this.item.subscribe(data => {\n          this.isRecipe = this.item.value.type === 'recipe';\n            if ( this.isRecipe ) {\n              this.searchService.confirmSearchPossibility(true);\n              this.adminService.search(this.id).subscribe(ingredients => {\n                this.ingredients.next(ingredients);\n              });\n              this.searchService.searchRequest$.subscribe(\n                fullText => {\n                  this.fullText = fullText;\n                  this.adminService.search(this.id, this.fullText).subscribe(ingredients => {\n                    this.ingredients.next(ingredients);\n                  });\n                });\n            } else {\n              this.searchService.confirmSearchPossibility(false);\n            }\n          this.initForm();\n        });\n        this._ingredients = this.ingredients.subscribe(data => {\n          this.initIngredientsForm();\n        });\n    }\n\n\n  private initForm() {\n    this.itemForm = new FormGroup({\n      'name': new FormControl(this.item.value.name, Validators.required),\n      'executor': new FormControl(this.item.value.executor, Validators.required),\n      'type': new FormControl({value: this.item.value.type, disabled: this.editMode}, Validators.required),\n      'categoryId': new FormControl(this.item.value.categoryId, Validators.required),\n      'tare': new FormControl(this.item.value.tare),\n      'unit': new FormControl(this.item.value.unit, Validators.required),\n      'menuItem': new FormControl(this.item.value.menuItem, Validators.required),\n      'averageCost': new FormControl({value: this.item.value.averageCost, disabled: true}),\n      'sellingPrice': new FormControl(this.item.value.sellingPrice),\n      'image': new FormControl(this.item.value.image, Validators.required),\n    });\n    if (this.editMode) {\n      this.itemForm.addControl('id', new FormControl({value: this.item.value.id, disabled: true}));\n    }\n    if (this.isRecipe) {\n      this.itemForm.addControl('weight', new FormControl({value: this.item.value.weight, disabled: true}));\n    } else {\n      this.itemForm.addControl('quantity', new FormControl({value: this.item.value.quantity, disabled: true}));\n    }\n  }\n\n\n\n  initIngredientsForm() {\n    this.ingredientsForm = new FormGroup({});\n    this.ingredientsArray = new FormArray([]);\n    this.ingredients.value.forEach(ingredient => {\n      this.ingredientsArray.push(\n        new FormGroup({\n          'id': new FormControl(ingredient.id),\n          'ingredientId': new FormControl(ingredient.ingredientId),\n          'recipeId': new FormControl(ingredient.recipeId),\n          'recipeQuantity': new FormControl(ingredient.recipeQuantity),\n        })\n      );\n    });\n    this.ingredientsForm.addControl('ingredients', this.ingredientsArray);\n  }\n\n  onUpdate() {\n    if (this.itemForm.valid) {\n      this.adminService.updateItem(this.itemForm.getRawValue()).subscribe(\n        (result: any) => {\n          this.router.navigate(['/admin/item/' + result.id + '/edit']);\n        },\n        error => console.log(error)\n      );\n    }\n  }\n\n  typeChanged(e) {\n    if (this.itemForm.value.type === 'recipe') {\n      this.item.value.type = 'recipe';\n      // this.isRecipe = true;\n    } else {\n      this.item.value.type = 'ingredient';\n      // this.isRecipe = false;\n    }\n  }\n\n  onUpdateIngredient(ingredient, index: number) {\n    this.adminService.updateIngredient(ingredient).subscribe(\n      (result: any) => {\n        this.itemForm.controls['weight'].patchValue(result.quantitySummary);\n        this.itemForm.controls['averageCost'].patchValue(result.averageCost);\n        this.itemForm.controls['sellingPrice'].patchValue(result.sellingSummary);\n        console.log(result.quantitySummary);\n      },\n      error => console.log(error)\n    );\n  }\n\n  uploadImage(event) {\n    const formData: FormData = new FormData();\n    formData.append('degree_attachment', event.target.files[0], event.target.files[0].name);\n    this.adminService.uploadFile(formData).subscribe(\n      (result: any) => {\n        this.itemForm.controls['image'].patchValue(event.target.files[0].name);\n        this.item.value.image = event.target.files[0].name;\n      },\n      error => console.log(error)\n    );\n}\n\n  ngOnDestroy() {\n    this.searchService.confirmSearchPossibility(false);\n    if (this.editMode === true) {\n      this._item.unsubscribe();\n    }\n    if ( this.isRecipe ) {\n      this._ingredients.unsubscribe();\n    }\n    this._categories.unsubscribe();\n  }\n\n}\n","module.exports = \".card {\\n    margin-bottom: 1%;\\n  }\\n  \\n  .card-image {\\n    max-width: 400px;\\n    max-height: 300px;\\n  }\\n  \\n  .mat-card:not([class*=mat-elevation-z]) {\\n    box-shadow: 0px 2px 6px 0px rgba(0,0,0,.12);\\n}\\n  \\n  ::ng-deep .mat-card-header-text {\\n  margin: 0;\\n}\\n  \\n  .mcard{\\n  min-height: 87vh;\\n  margin-left: 5px;\\n  margin-top: 5px;\\n}\"","module.exports = \"<div class=\\\"mcard\\\"  fxLayout=\\\"row wrap\\\" fxLayout.sm=\\\"column\\\" fxLayoutGap=\\\"1%\\\" fxLayoutWrap fxLayoutAlign=\\\"space-between center\\\" fxLayoutAlign.sm=\\\"center\\\"   >\\n    <mat-card *ngFor=\\\"let item of items$ | async\\\" class=\\\"card\\\" fxFlex=\\\"49\\\" fxFlex.xs=\\\"100\\\">\\n        <mat-card-header fxLayout=\\\"row\\\">\\n            <div  fxLayout=\\\"row\\\" fxFlex=\\\"70\\\">\\n                <div mat-card-avatar [ngStyle]=\\\"{'background-image':'url(/backend/api/storages/images/download/'+item.image+')'}\\\" style=\\\"background-size: cover;\\\"></div>\\n                <div fxLayout=\\\"column\\\"> \\n                    <mat-card-title>{{item.name}} </mat-card-title>\\n                    <mat-card-subtitle>{{item.type}}</mat-card-subtitle>\\n                </div>\\n            </div>\\n            <div fxLayout=\\\"column\\\" fxFlex fxLayoutAlign.sm=\\\"end center\\\">\\n                <mat-card-subtitle>{{item.quantity}} {{item.unit}}</mat-card-subtitle>\\n            </div>\\n        </mat-card-header>\\n        <mat-card-actions fxLayout=\\\"row\\\">\\n            <div fxFlex=\\\"70\\\">\\n                <mat-icon style=\\\"margin-left: 10px;\\\" *ngIf=\\\"item.menuItem\\\" aria-label=\\\"Menu item\\\">restaurant_menu</mat-icon>\\n            </div>\\n            <div fxFlex>\\n                <button routerLink=\\\"/admin/item/{{item.id}}/edit\\\" mat-button>EDIT</button>\\n            </div>\\n        </mat-card-actions>\\n    </mat-card>\\n</div>\\n\\n<div style=\\\"position: fixed; bottom: 10px; right: 10px;\\\">\\n    <a  routerLink=\\\"/admin/item/new\\\" mat-fab color=\\\"primary\\\"><mat-icon aria-label=\\\"Add\\\">add</mat-icon></a>  \\n</div>\"","import { Component, OnInit, OnDestroy  } from '@angular/core';\nimport { AdminService } from './../admin.service';\nimport { Item } from './../../../model/Item';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { SearchService } from './../../../shared/dashboard/search.service';\n\n\nimport {\n  Observable,\n  Subscription,\n} from 'rxjs';\n\n@Component({\n  selector: 'app-admin-item-list',\n  templateUrl: './admin-item-list.component.html',\n  styleUrls: ['./admin-item-list.component.css']\n})\nexport class AdminItemListComponent implements OnInit, OnDestroy {\n\n  private _routes: Subscription;\n\n  public items$: Observable<Item[]> = null;\n  private filter: string | Boolean = false;\n\n  constructor(\n    private adminService: AdminService,\n    private route: ActivatedRoute,\n    private searchService: SearchService\n    ) { }\n\n  ngOnInit() {\n    this._routes = this.route.params\n    .subscribe(\n      (params: Params) => {\n        this.filter = params.filter;\n        this.searchService.confirmSearchPossibility(true);\n        this.searchService.searchRequest$.subscribe(\n         fullText => {\n           this.adminService.getItems(this.filter, fullText);\n         });\n        this.items$ = this.adminService.items$;\n        this.adminService.getItems(this.filter);\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this._routes.unsubscribe();\n    this.searchService.confirmSearchPossibility(false);\n  }\n}\n","module.exports = \".mat-card:not([class*=mat-elevation-z]) {\\n    box-shadow: 0px 2px 6px 0px rgba(0,0,0,.12);\\n}\\n\\n::ng-deep .mat-card-header-text {\\n  margin: 0;\\n}\\n\\n.mcard{\\n  margin-left: 5px;\\n  margin-top: 5px;\\n}\\n\\n.card {\\n    margin-bottom: 1%;\\n  }\"","module.exports = \"<div class=\\\"mcard\\\" fxLayout=\\\"row wrap\\\" fxLayout.sm=\\\"column\\\" fxLayoutGap=\\\"1%\\\" fxLayoutWrap fxLayoutAlign=\\\"space-between center\\\" fxLayoutAlign.sm=\\\"center\\\"   >\\n  <mat-card *ngFor=\\\"let order of orders$ | async; let i = index\\\" class=\\\"card\\\" fxFlex=\\\"49%\\\" fxFlex.xs=\\\"100\\\">\\n      <mat-card-header fxLayout=\\\"row\\\">\\n          <div  fxLayout=\\\"row\\\" fxFlex=\\\"70\\\">\\n              <div mat-card-avatar [ngStyle]=\\\"{'background-image':'url(/backend/api/storages/images/download/'+order.item.image+')'}\\\" style=\\\"background-size: cover;\\\"></div>\\n              <div fxLayout=\\\"column\\\"> \\n                  <mat-card-title>{{order.item.name}} <mat-icon *ngIf=\\\"order.menuItem\\\" aria-label=\\\"Menu order\\\">restaurant_menu</mat-icon></mat-card-title>\\n                  <mat-card-subtitle>{{order.quantity}} x {{order.sellingPrice | currency}}</mat-card-subtitle>\\n              </div>\\n          </div>\\n          <div fxLayout=\\\"column\\\" fxFlex fxLayoutAlign.sm=\\\"end center\\\">\\n            <div [ngSwitch]=\\\"order.state\\\">\\n              <ng-container *ngSwitchCase= \\\"'new'\\\">   \\n                <button mat-icon-button  color=\\\"primary\\\">\\n                  <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">fiber_new</mat-icon>\\n                </button> \\n              </ng-container>\\n              <ng-container *ngSwitchCase= \\\"'progress'\\\">\\n                <button mat-icon-button color=\\\"primary\\\">\\n                  <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">update</mat-icon>\\n                </button> \\n              </ng-container>\\n              <ng-container *ngSwitchCase= \\\"'ready'\\\">\\n                <button mat-icon-button color=\\\"primary\\\">\\n                  <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">thumb_up_alt</mat-icon>\\n                </button>                 \\n              </ng-container>\\n              <ng-container *ngSwitchCase= \\\"'served'\\\">                \\n                <button mat-icon-button color=\\\"primary\\\">\\n                  <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">restaurant_menu</mat-icon>\\n                </button>    \\n              </ng-container>\\n            </div> \\n          </div>\\n      </mat-card-header>\\n      <mat-card-actions fxLayout=\\\"row\\\">\\n          <div fxFlex=\\\"70\\\">\\n\\n          </div>\\n          <div [ngSwitch]=\\\"order.state\\\">\\n              <ng-container *ngSwitchCase= \\\"'new'\\\">   \\n                  <div fxFlex>\\n                      <button  mat-button (click)=\\\"changeState(order.id,'progress', i);\\\">PROGRESS</button>\\n                  </div>\\n              </ng-container>\\n              <ng-container *ngSwitchCase= \\\"'progress'\\\" >\\n                  <div fxFlex>\\n                      <button  mat-button (click)=\\\"changeState(order.id,'ready', i);\\\">READY</button>\\n                  </div>\\n              </ng-container>\\n              <ng-container *ngSwitchCase= \\\"'ready'\\\">\\n                  <div fxFlex>\\n                      <button mat-button (click)=\\\"changeState(order.id,'served', i);\\\">SERVE</button>\\n                  </div>             \\n              </ng-container>\\n              <ng-container *ngSwitchCase= \\\"'served'\\\">                \\n                  <div fxFlex>\\n                      <button routerLink=\\\"/admin/sale/{{order.salesInvoiceId}}/edit\\\" mat-button>INVOICE</button>\\n                  </div> \\n              </ng-container>\\n            </div> \\n\\n      </mat-card-actions>\\n  </mat-card>\\n</div>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AdminService } from './../admin.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { AdminStatService } from './../stat.service';\nimport { Order } from './../../../model/Order';\n\nimport {\n  Observable,\n  Subscription,\n  BehaviorSubject,\n  timer\n} from 'rxjs';\nimport {\n  switchMap\n} from 'rxjs/operators';\n@Component({\n  selector: 'app-admin-order-list',\n  templateUrl: './admin-order-list.component.html',\n  styleUrls: ['./admin-order-list.component.css']\n})\nexport class AdminOrderListComponent implements OnInit, OnDestroy {\n\n  private _routes: Subscription;\n  private _orders: Subscription = new Subscription;\n\n  public orders: BehaviorSubject<Order[]> = new BehaviorSubject<Order[]>(null);\n  public orders$ = this.orders.asObservable();\n  private filter: string | Boolean = false;\n\n  constructor(\n    private adminService: AdminService,\n    private route: ActivatedRoute,\n    private statService: AdminStatService\n    ) { }\n\n  ngOnInit() {\n    this._routes = this.route.params\n    .subscribe(\n      (params: Params) => {\n        this.filter = params.filter;\n        this._orders.unsubscribe();\n        this._orders = timer(0, 1000 * 30).pipe(\n          switchMap(() => this.adminService.getOrders(this.filter))\n        ).subscribe((result)  => this.orders.next(result));\n      }\n    );\n\n  }\n\n  changeState(id: string, state: string, index) {\n    switch (state) {\n      case 'progress':\n        this.statService.changeCounter('newOrders', 'decrement');\n        this.statService.changeCounter('progressOrders');\n        this.adminService.progressOrder(id, index).subscribe(() => {\n          this.orders.value[index].state = 'progress';\n        });\n        break;\n      case 'ready':\n        this.statService.changeCounter('progressOrders', 'decrement');\n        this.statService.changeCounter('readyOrders');\n        this.adminService.readyOrder(id, index).subscribe(() => {\n          this.orders.value[index].state = 'ready';\n        });\n        break;\n      case 'served':\n        this.statService.changeCounter('readyOrders', 'decrement');\n        this.adminService.serveOrder(id, index).subscribe(() => {\n          this.orders.value[index].state = 'served';\n        });\n        break;\n      default:\n        break;\n    }\n    return true;\n  }\n\n  ngOnDestroy(): void {\n    this._orders.unsubscribe();\n    this._routes.unsubscribe();\n  }\n\n}\n","module.exports = \".mcard_white{\\n    background-color: white;\\n    padding: 5px;\\n    margin-left: 5px;\\n    margin-right: 6px;\\n    margin-top: 5px;\\n    box-shadow: 0px 2px 6px 0px rgba(0,0,0,.12);\\n}\\n\\n.mcard{\\n    margin-left: 5px;\\n    margin-top: 5px;\\n    margin-right: 5px;\\n}\\n\\n.mat-card:not([class*=mat-elevation-z]) {\\n    box-shadow: 0px 2px 6px 0px rgba(0,0,0,.12);\\n}\\n\\n.card {\\n    margin-bottom: 1%;\\n  }\\n\\n.mat-fab-div{\\n    margin-bottom: 5px; \\n}\\n\\n.buttons-container {\\n    position: fixed; bottom: 10px; right: 10px;\\n}\\n\\n.buttons {\\n    margin-left: 9px;\\n}\"","module.exports = \"<div class=\\\"mcard_white\\\" fxLayout=\\\"column\\\" >\\n  <h3 *ngIf=\\\"purchaseInvoiceForm && PurchaseInvoice\\\">Purchase invoice </h3>\\n\\n    <div *ngIf=\\\"PurchaseInvoice$ | async as PurchaseInvoice\\\">\\n      <p>Supplier: {{PurchaseInvoice.supplierId}}</p>\\n      <p>Date: {{PurchaseInvoice.date | date: 'fullDate'}}</p>\\n      <p>Profiled: {{PurchaseInvoice.profiled}}</p>\\n      <p>Total: {{total| currency}}</p>\\n  </div>\\n\\n\\n  <form fxLayout=\\\"column\\\" fxHide *ngIf=\\\"SaleInvoice$ | async\\\" [formGroup]=\\\"purchaseInvoiceForm\\\" (ngSubmit)=\\\"onUpdate()\\\">\\n    <ng-template *ngIf=\\\"!editMode\\\">\\n      <input matInput formControlName=\\\"id\\\">\\n    </ng-template>\\n    <div  fxLayout=\\\"row\\\"  fxFill fxLayoutAlign=\\\"space-between center\\\">\\n      <mat-form-field fxFlex=\\\"32\\\">\\n        <input matInput placeholder=\\\"Supplier\\\" formControlName=\\\"supplierId\\\">\\n        <mat-error *ngIf=\\\"purchaseInvoiceForm.controls['supplierId'].hasError('required')\\\">\\n          Supplier is\\n          <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field fxFlex=\\\"32\\\">\\n        <input matInput placeholder=\\\"Total\\\" formControlName=\\\"total\\\">\\n        <mat-error *ngIf=\\\"purchaseInvoiceForm.controls['total'].hasError('required')\\\">\\n          Total is\\n          <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput [matDatepicker]=\\\"date\\\"  placeholder=\\\"Date\\\" formControlName=\\\"date\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"date\\\">\\n          <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\\n        </mat-datepicker-toggle>\\n        <mat-datepicker #date></mat-datepicker>\\n        <mat-error *ngIf=\\\"purchaseInvoiceForm.controls['date'].hasError('required')\\\">\\n          Date is\\n          <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n    </div>\\n  </form>\\n\\n\\n  <div class=\\\"buttons-container\\\" fxLayout=\\\"column\\\">\\n      <div  class=\\\"buttons\\\" *ngIf=\\\"show\\\" fxLayout=\\\"column\\\" >\\n          <div class=\\\"mat-fab-div\\\"  (click)=\\\" show = !show; onUpdate() \\\" fxFlex=\\\"32\\\">\\n              <button form=\\\"ngForm\\\" color=\\\"primary\\\" mat-mini-fab aria-label=\\\"Save\\\">\\n                <mat-icon>save</mat-icon>\\n              </button>\\n          </div>\\n          <div class=\\\"mat-fab-div\\\" (click)=\\\" show = !show; onProfile() \\\" fxFlex=\\\"32\\\">\\n              <button mat-mini-fab  aria-label=\\\"Profile\\\">\\n                <mat-icon>archive</mat-icon>\\n              </button>\\n            </div>\\n        </div>\\n      <button mat-fab color=\\\"primary\\\" [disabled]=\\\"profiled\\\" (click)=\\\" show = !show \\\"><mat-icon aria-label=\\\"Options\\\">more_vert</mat-icon></button>\\n    </div>\\n</div>\\n<div *ngIf=\\\"editMode\\\">\\n  <div class=\\\"mcard\\\">\\n    <form *ngIf=\\\"items$ | async as items\\\" [formGroup]=\\\"itemsForm\\\">\\n        <div  formArrayName=\\\"items\\\"   fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\".1%\\\" fxLayoutGap.lt-md=\\\".9%\\\" fxLayoutWrap fxLayoutAlign=\\\"space-around center\\\"   >\\n          <mat-card class=\\\"card\\\" style=\\\"margin-bottom: 1em;\\\" fxFill fxFlex=\\\"49%\\\" fxFlex.lt-md=\\\"99.5%\\\" \\n          *ngFor=\\\"let itemCtrl of itemsForm.get('items').controls; let i = index\\\"\\n          [formGroupName]=\\\"i\\\">\\n              <mat-card-header fxLayout=\\\"row\\\">\\n                  <div  fxLayout=\\\"row\\\" fxFlex=\\\"70\\\">\\n                      <div mat-card-avatar [ngStyle]=\\\"{'background-image':'url(/backend/api/storages/images/download/'+items[i].item.image+')'}\\\" style=\\\"background-size: cover;\\\"></div>\\n                      <div fxLayout=\\\"column\\\"> \\n                          <mat-card-title>{{items[i].item.name}} </mat-card-title>\\n                      </div>\\n                      \\n                  </div>\\n                  \\n              </mat-card-header>\\n              <mat-card-footer>\\n                  <div  style=\\\"padding: 5px;\\\" fxLayout=\\\"column\\\" fxFlex=\\\"98\\\"  fxLayoutAlign=\\\"space-between center\\\" >\\n                  <input hidden matInput formControlName=\\\"total\\\">\\n                  <input hidden matInput formControlName=\\\"id\\\">\\n                  <input hidden matInput formControlName=\\\"itemId\\\">\\n                  <input hidden matInput formControlName=\\\"purchaseInvoiceId\\\">\\n                  <mat-form-field fxFlex=\\\"98\\\">\\n                    <input matInput placeholder=\\\"Quantity\\\" formControlName=\\\"quantity\\\" (focusout)=\\\"onUpdateItem(itemCtrl.getRawValue(), i)\\\" (keyup)=\\\"onCountTotal(itemCtrl.getRawValue(), i)\\\">\\n                    <span matSuffix>{{items[i].item.unit}}</span>\\n                  </mat-form-field >\\n                  <mat-form-field fxFlex=\\\"98\\\">\\n                    <input matInput placeholder=\\\"Price\\\" formControlName=\\\"purchasePrice\\\" (focusout)=\\\"onUpdateItem(itemCtrl.getRawValue(), i)\\\" (keyup)=\\\"onCountTotal(itemCtrl.getRawValue(), i)\\\">\\n                    <span matSuffix>&#x24;</span>\\n                  </mat-form-field>\\n                  <mat-form-field fxFlex=\\\"98\\\">\\n                      <input matInput placeholder=\\\"Total\\\" formControlName=\\\"total\\\">\\n                      <span matSuffix>&#x24;</span>\\n                    </mat-form-field>\\n                  </div>\\n              </mat-card-footer>\\n          </mat-card>\\n        </div>\\n    </form>\\n    </div>\\n  </div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators, FormArray} from '@angular/forms';\nimport { AdminService } from './../admin.service';\nimport {BehaviorSubject, Subscription} from 'rxjs';\nimport {MatDialog} from '@angular/material';\nimport { SearchService } from './../../../shared/dashboard/search.service';\nimport { PurchaseInvoice } from './../../../model/PurchaseInvoice';\n\nexport interface DialogData {\n  animal: string;\n  name: string;\n}\n\n@Component({\n  selector: 'app-admin-purchase-edit',\n  templateUrl: './admin-purchase-edit.component.html',\n  styleUrls: ['./admin-purchase-edit.component.css'],\n})\nexport class AdminPurchaseEditComponent implements OnInit, OnDestroy {\n\n  public id: string;\n  public editMode = false;\n  public _PurchaseInvoice: Subscription;\n  public PurchaseInvoice: BehaviorSubject<PurchaseInvoice> = new BehaviorSubject<PurchaseInvoice>(\n    {\n      id: null,\n      supplierId: 'Tube',\n      date: new Date(),\n      profiled: false,\n      total: 0\n    }\n  );\n  public PurchaseInvoice$ = this.PurchaseInvoice.asObservable();\n\n  private _items: Subscription;\n  public items: BehaviorSubject<any> = new BehaviorSubject<any>([]);\n  public items$ = this.items.asObservable();\n\n  public purchaseInvoiceForm: FormGroup;\n  public itemsForm:  FormGroup;\n  public itemsArray: FormArray;\n\n  public profiled: Boolean = false;\n  public fullText;\n  public total;\n\n  constructor(private route: ActivatedRoute,\n    private adminService: AdminService,\n    private router: Router,\n    public dialog: MatDialog,\n    private searchService: SearchService\n    ) { }\n\n  ngOnInit() {\n    this.route.params\n    .subscribe(\n      (params: Params) => {\n        this.id = params.id;\n        this.editMode = params.id != null;\n        if (this.editMode === true) {\n          this.adminService.getPurchaseInvoice(this.id).subscribe(purchaseInvoice => {\n            this.PurchaseInvoice.next(purchaseInvoice);\n          });\n          this.adminService.searchItemsPurchaseInvoice(this.id).subscribe(items => {\n            this.items.next(items);\n          });\n        } else {\n          this.adminService.updatePurchaseInvoice({supplierId: 'Tube', date: new Date(), total: 0}).subscribe(\n            (result: any) => {\n              console.log(result);\n              if (!this.editMode) {\n                this.router.navigate(['/admin/purchase/' + result.id + '/edit']);\n              }\n            },\n            error => console.log(error)\n          );\n        }\n      }\n    );\n    this._items = this.items.subscribe(() => {\n      this.initItemsForm();\n    });\n    this._PurchaseInvoice = this.PurchaseInvoice.subscribe(data => {\n      this.total = this.PurchaseInvoice.value.total;\n      this.profiled = this.PurchaseInvoice.value.profiled;\n        if (!this.profiled) {\n          this.searchService.confirmSearchPossibility(true);\n          this.searchService.searchRequest$.subscribe(\n          fullText => {\n            this.fullText = fullText;\n            this.adminService.searchItemsPurchaseInvoice(this.id, this.fullText).subscribe(items => {\n              this.items.next(items);\n            });\n          });\n        }\n        this.initForm();\n      }\n    );\n  }\n\n  private initForm() {\n    this.purchaseInvoiceForm = new FormGroup({\n      'supplierId': new FormControl({ value: this.PurchaseInvoice.value.supplierId, disabled: this.profiled}, Validators.required),\n      'id': new FormControl({ value: this.PurchaseInvoice.value.id, disabled: this.profiled}),\n      'date': new FormControl({ value: this.PurchaseInvoice.value.date, disabled: this.profiled}, Validators.required),\n      'total': new FormControl({value: this.PurchaseInvoice.value.total, disabled: true}),\n    });\n\n    this.initItemsForm();\n\n  }\n\n  initItemsForm() {\n    this.itemsForm = new FormGroup({});\n    this.itemsArray = new FormArray([]);\n    this.items.value.forEach(item => {\n      this.itemsArray.push(\n        new FormGroup({\n          'itemId': new FormControl({ value: item.itemId, disabled: this.profiled}),\n          'purchaseInvoiceId': new FormControl({ value: item.purchaseInvoiceId, disabled: this.profiled}),\n          'quantity': new FormControl({ value: item.quantity, disabled: this.profiled}),\n          'purchasePrice': new FormControl({ value: item.purchasePrice, disabled: this.profiled}),\n          'total': new FormControl({value: item.total, disabled: true}),\n          'id': new FormControl({ value: item.id, disabled: this.profiled}),\n        })\n      );\n    });\n    this.itemsForm.addControl('items', this.itemsArray);\n  }\n\n  onUpdate() {\n      // if (this.purchaseInvoiceForm.invalid) {\n      //   this.purchaseInvoiceForm.get('supplierId').markAsTouched();\n      //   this.purchaseInvoiceForm.get('date').markAsTouched();\n      //   return;\n      // } else {\n      //   this.adminService.updatePurchaseInvoice(this.purchaseInvoiceForm.getRawValue()).subscribe(\n      //     (result: any) => {\n      //       console.log(result);\n      //       if (!this.editMode) {\n      //         this.router.navigate(['/admin/purchase/' + result.id + '/edit']);\n      //       }\n      //     },\n      //     error => console.log(error)\n      //   );\n      // }\n  }\n\n  onProfile() {\n    this.adminService.profilePurchaseInvoice(this.purchaseInvoiceForm.getRawValue()).subscribe(\n      (result: any) => {\n        this.adminService.searchItemsPurchaseInvoice(this.id, '').subscribe(items => {\n          if (!this.editMode) {\n            this.router.navigate(['/admin/purchase/' + result.id + '/edit']);\n          }\n          this.PurchaseInvoice.value.profiled = true;\n          this.items.next(items);\n        });\n      },\n      error => console.log(error)\n    );\n  }\n\n  onUpdateItem(item, index: number) {\n    this.adminService.updatePurchaseInvoiceItem(item).subscribe(\n      result => {\n        this.total = Number(result);\n        this.PurchaseInvoice.value.total = Number(result);\n      },\n      error => console.log(error)\n    );\n  }\n\n  onCountTotal(item, index: number) {\n    const total = item.purchasePrice * item.quantity;\n    this.items.value[index].total = total;\n    this.itemsArray.controls[index].patchValue({'total': total});\n  }\n\n  ngOnDestroy() {\n    this.searchService.clearSearchInput(true);\n    this.searchService.confirmSearchPossibility(false);\n  }\n\n}\n","module.exports = \".mcard{\\n    background-color: white;\\n    padding: 5px;\\n    margin-left: 5px;\\n    margin-right: 5px;\\n    margin-top: 5px;\\n    box-shadow: 0px 2px 6px 0px rgba(0,0,0,.12);\\n}\\n\\n.no-line {\\n    width: 200px;\\n  }\"","module.exports = \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"dataSource.loading$ | async\\\"></mat-progress-bar>\\n<div fxLayout=\\\"column\\\" class=\\\"mcard\\\">\\n  <div fxLayout=\\\"column\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort matSortDisableClear=true>\\n\\n      <ng-container matColumnDef=\\\"supplierId\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Supplier </th>\\n        <td mat-cell *matCellDef=\\\"let purchaseInvoice\\\"> {{purchaseInvoice.supplierId}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"id\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> State </th>\\n        <td mat-cell *matCellDef=\\\"let purchaseInvoice\\\"> \\n          <span [ngSwitch]=\\\"purchaseInvoice.profiled\\\">\\n              <button matTooltip=\\\"New\\\" *ngSwitchCase=\\\"false\\\" mat-icon-button>\\n                <mat-icon routerLink=\\\"/admin/purchase/{{purchaseInvoice.id}}/edit\\\" >update</mat-icon>\\n              </button>\\n              <button matTooltip=\\\"Profiled\\\" *ngSwitchCase=\\\"true\\\" mat-icon-button>\\n                  <mat-icon routerLink=\\\"/admin/purchase/{{purchaseInvoice.id}}/edit\\\" >check_circle_outline</mat-icon>\\n              </button>\\n            </span>\\n        </td>\\n      </ng-container>\\n    \\n      <ng-container matColumnDef=\\\"date\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\\n            <div>\\n                <mat-form-field class=\\\"no-line\\\">\\n                    <input matInput\\n                          [formControl]=\\\"dateForm\\\"\\n                           placeholder=\\\"Date\\\"\\n                           [satDatepicker]=\\\"date\\\"\\n                           (dateInput)=\\\"updateDate('input', $event)\\\" \\n                           (dateChange)=\\\"updateDate('change', $event)\\\"\\n                           >\\n                    <sat-datepicker #date [rangeMode]=\\\"true\\\" [closeAfterSelection]=\\\"true\\\">\\n                    </sat-datepicker>\\n                    <sat-datepicker-toggle matSuffix [for]=\\\"date\\\"></sat-datepicker-toggle>\\n                    <button matTooltip=\\\"Current date\\\"  mat-button matSuffix mat-icon-button aria-label=\\\"Current date\\\" (click)=\\\"currentDate()\\\">\\n                        <mat-icon>access_time</mat-icon>\\n                      </button>\\n                      <button matTooltip=\\\"Date time show\\\"  mat-button matSuffix mat-icon-button aria-label=\\\"Date time show\\\" (click)=\\\"dateTimeToggle()\\\">\\n                        <mat-icon>alarm</mat-icon>\\n                      </button>\\n                      <button matTooltip=\\\"Reset\\\" mat-button matSuffix mat-icon-button aria-label=\\\"Reset\\\" (click)=\\\"resetDate()\\\">\\n                          <mat-icon>close</mat-icon>\\n                      </button>   \\n                  </mat-form-field>\\n              </div>\\n        </th>\\n        <td mat-cell *matCellDef=\\\"let purchaseInvoice\\\">  {{dateFormat === 'shortTime' ? (purchaseInvoice.date | date: 'shortTime') : (purchaseInvoice.date | date: 'mediumDate')}}  </td>\\n      </ng-container>\\n    \\n      <ng-container matColumnDef=\\\"total\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Total </th>\\n        <td mat-cell *matCellDef=\\\"let purchaseInvoice\\\"> {{purchaseInvoice.total | currency}} </td>\\n      </ng-container>\\n    \\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    </table>\\n\\n    <mat-paginator [length]=\\\"2000\\\" [pageSize]=\\\"25\\\" [pageSizeOptions]=\\\"[25, 50, 100]\\\"></mat-paginator>\\n  </div>\\n</div>\\n<div style=\\\"position: fixed; bottom: 10px; right: 10px;\\\">\\n  <a  routerLink=\\\"/admin/purchase/new\\\" mat-fab color=\\\"primary\\\"><mat-icon aria-label=\\\"Add\\\">add</mat-icon></a>  \\n</div>\\n\"","import { Component, OnInit, AfterViewInit, ElementRef, ViewChild } from '@angular/core';\nimport { AdminService } from './../admin.service';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { PurchaseInvoice } from './../../../model/PurchaseInvoice';\nimport { debounceTime, distinctUntilChanged, startWith, tap, delay } from 'rxjs/operators';\nimport { merge, fromEvent } from 'rxjs';\nimport { PurchaseInvoiceDatasource } from './purchase.invoice.datasource';\nimport {MatDatepickerInputEvent} from '@angular/material/datepicker';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-admin-purchase-list',\n  templateUrl: './admin-purchase-list.component.html',\n  styleUrls: ['./admin-purchase-list.component.css']\n})\nexport class AdminPurchaseListComponent implements OnInit, AfterViewInit  {\n\n  purchaseInvoice: PurchaseInvoice;\n  dateFormat = 'shortTime';\n  dataSource: PurchaseInvoiceDatasource;\n  date = null;\n  dateBegin = null;\n  dateEnd = null;\n  dateForm = new FormControl();\n  displayedColumns = [\n    'id',\n    'supplierId',\n    'date',\n    'total'\n  ];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  @ViewChild(MatSort) sort: MatSort;\n\n  @ViewChild('input') input: ElementRef;\n\n  constructor(private adminService: AdminService) { }\n\n  ngOnInit() {\n    this.dataSource = new PurchaseInvoiceDatasource(this.adminService);\n    this.dataSource.loadPurchaseInvoices('id ASC', 0, 25);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n\n    merge(this.sort.sortChange, this.paginator.page)\n      .pipe(\n        tap(() => this.loadPurchaseInvoicesPage())\n      )\n      .subscribe();\n\n  }\n\n  updateDate(type: string, event: MatDatepickerInputEvent<any>) {\n    localStorage.setItem('dateBegin', event.value.begin);\n    localStorage.setItem('dateEnd', event.value.end);\n    this.dateBegin = event.value.begin;\n    this.dateEnd = event.value.end;\n    this.loadPurchaseInvoicesPage();\n  }\n\n  currentDate() {\n    const beginDate = new Date();\n    beginDate.setHours(0, 0, 0, 0);\n    const endDate = new Date();\n    endDate.setHours(23, 59, 59, 999);\n    this.dateForm.setValue({begin: beginDate, end: endDate});\n    localStorage.setItem('dateBegin', beginDate.toString());\n    localStorage.setItem('dateEnd', endDate.toString());\n    this.dateBegin = beginDate;\n    this.dateEnd = endDate;\n    this.loadPurchaseInvoicesPage();\n  }\n\n  dateTimeToggle() {\n    this.dateFormat = this.dateFormat === 'shortTime' ? 'mediumDate' : 'shortTime';\n    localStorage.setItem('dateFormat' , this.dateFormat);\n  }\n\n  resetDate() {\n    this.dateForm.setValue('');\n    localStorage.removeItem('dateBegin');\n    localStorage.removeItem('dateEnd');\n    this.dateBegin = null;\n    this.dateEnd = null;\n    this.loadPurchaseInvoicesPage();\n  }\n\n  loadPurchaseInvoicesPage() {\n\n    const sort = this.sort.active === undefined ? 'id ASC' : this.sort.active + ' ' + this.sort.direction.toUpperCase();\n\n    this.dataSource.loadPurchaseInvoices(\n      sort,\n      this.paginator.pageIndex,\n      this.paginator.pageSize,\n      this.dateBegin,\n      this.dateEnd);\n  }\n}\n","import { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { Observable, BehaviorSubject, of } from 'rxjs';\nimport { PurchaseInvoice } from './../../../model/PurchaseInvoice';\nimport { AdminService } from './../admin.service';\nimport { catchError, finalize } from 'rxjs/operators';\n\n\n\nexport class PurchaseInvoiceDatasource implements DataSource<PurchaseInvoice> {\n\n\n  private purchaseInvoiceSubject = new BehaviorSubject<PurchaseInvoice[]>([]);\n\n  private loadingSubject = new BehaviorSubject<boolean>(false);\n\n  public loading$ = this.loadingSubject.asObservable();\n\n  public paginator;\n\n  constructor(private adminService: AdminService) {\n\n  }\n\n  loadPurchaseInvoices(\n    sortDirection: string,\n    pageIndex: number,\n    pageSize: number,\n    startDate: Date = null,\n    endDate: Date = null) {\n\n    this.loadingSubject.next(true);\n\n    this.adminService.findPurchaseInvoices(sortDirection,\n      pageIndex, pageSize, startDate, endDate).pipe(\n        catchError(() => of([])),\n        finalize(() => this.loadingSubject.next(false))\n      )\n      .subscribe((purchaseInvoices: any) => {\n        this.purchaseInvoiceSubject.next(purchaseInvoices.body);\n        this.paginator.length = purchaseInvoices.headers.get('Content-Range').split('/')[1];\n      });\n\n  }\n\n  connect(collectionViewer: CollectionViewer): Observable<PurchaseInvoice[]> {\n    return this.purchaseInvoiceSubject.asObservable();\n  }\n\n  disconnect(collectionViewer: CollectionViewer): void {\n    console.log('disconnect');\n    this.purchaseInvoiceSubject.complete();\n    this.loadingSubject.complete();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { StubComponent } from './../../shared/stub/stub.component';\nimport { DashboardComponent } from './../../shared/dashboard/dashboard.component';\nimport { NotFoundComponent } from './../../shared/not-found/not-found.component';\n\nimport { AdminItemListComponent } from './admin-item-list/admin-item-list.component';\nimport { AdminItemEditComponent } from './admin-item-edit/admin-item-edit.component';\n\nimport { AdminSaleListComponent } from './admin-sale-list/admin-sale-list.component';\nimport { AdminSaleEditComponent } from './admin-sale-edit/admin-sale-edit.component';\nimport { AdminOrderListComponent } from './admin-order-list/admin-order-list.component';\n\nimport { AdminPurchaseListComponent } from './admin-purchase-list/admin-purchase-list.component';\nimport { AdminPurchaseEditComponent } from './admin-purchase-edit/admin-purchase-edit.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardComponent,\n    children: [\n      { path: 'item', component: StubComponent ,\n        children: [\n          { path: '', component: AdminItemListComponent },\n          { path: ':filter/show', component: AdminItemListComponent },\n          { path: 'new', component: AdminItemEditComponent },\n          { path: ':id/edit', component: AdminItemEditComponent},\n        ]\n      },\n      { path: 'sale', component: StubComponent ,\n        children: [\n          { path: '', component: AdminSaleListComponent },\n          { path: 'new', component: AdminSaleEditComponent },\n          { path: ':id/edit', component: AdminSaleEditComponent},\n          { path: ':filter/show', component: AdminSaleListComponent },\n          { path: 'order', component: AdminOrderListComponent},\n          { path: 'order/:filter/show', component: AdminOrderListComponent },\n        ]\n      },\n      { path: 'purchase', component: StubComponent ,\n        children: [\n          { path: '', component: AdminPurchaseListComponent },\n          { path: 'new', component: AdminPurchaseEditComponent },\n          { path: ':id/edit', component: AdminPurchaseEditComponent},\n        ]\n      },\n      {path: '404', component: NotFoundComponent},\n      {path: '**', redirectTo: '/admin/404'}\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n\n\n","module.exports = \".mat-18{\\n    margin-top: 6px;\\n}\\n\\n.card {\\n    margin-bottom: 1%;\\n  }\\n\\n.mat-card:not([class*=mat-elevation-z]) {\\n    box-shadow: 0px 2px 6px 0px rgba(0,0,0,.12);\\n}\\n\\n.mcard_white{\\n    background-color: white;\\n    padding: 5px;\\n    margin-left: 5px;\\n    margin-right: 5px;\\n    margin-top: 5px;\\n    box-shadow: 0px 2px 6px 0px rgba(0,0,0,.12);\\n}\\n\\n.mcard{\\n    margin-left: 5px;\\n    margin-top: 5px;\\n    margin-right: 5px;\\n}\\n\\n.mat-fab-div{\\n    margin-bottom: 5px; \\n}\\n\\n.buttons-container {\\n    position: fixed; bottom: 10px; right: 10px;\\n}\\n\\n.buttons {\\n    margin-left: 9px;\\n}\\n\"","module.exports = \"<div class=\\\"mcard_white\\\" fxLayout=\\\"column\\\">\\n  <h3>Sale invoice </h3>\\n\\n  <div *ngIf=\\\"SaleInvoice$ | async as SaleInvoice\\\">\\n      <p>Visitor: {{SaleInvoice.visitorId}}</p>\\n      <p>State: {{SaleInvoice.state}}</p>\\n      <p>Opened: {{SaleInvoice.openedAt | date: 'fullDate'}}</p>\\n      <p *ngIf=\\\"SaleInvoice.closedAt\\\">Closed: {{SaleInvoice.closedAt | date: 'fullDate'}}</p>\\n      <p>Total: {{SaleInvoice.total | currency}}</p>\\n  </div>\\n\\n  <form fxHide fxLayout=\\\"column\\\" *ngIf=\\\"SaleInvoice$ | async\\\" [formGroup]=\\\"saleInvoiceForm\\\" (ngSubmit)=\\\"onUpdate()\\\">\\n    <ng-template *ngIf=\\\"!editMode\\\">\\n      <input matInput formControlName=\\\"id\\\">\\n    </ng-template>\\n    <div  fxLayout=\\\"row\\\"  fxFill fxLayoutAlign=\\\"space-between center\\\">\\n      <mat-form-field fxFlex=\\\"32\\\">\\n        <input matInput placeholder=\\\"Visitor\\\" formControlName=\\\"visitorId\\\">\\n        <mat-error *ngIf=\\\"saleInvoiceForm.controls['visitorId'].hasError('required')\\\">\\n          Visitor is\\n          <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field fxFlex=\\\"32\\\">\\n        <input matInput placeholder=\\\"Total\\\" formControlName=\\\"total\\\">\\n        <mat-error *ngIf=\\\"saleInvoiceForm.controls['total'].hasError('required')\\\">\\n          Total is\\n          <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n    <div  fxLayout=\\\"row\\\"  fxFill fxLayoutAlign=\\\"space-between center\\\">\\n      <mat-form-field>\\n        <input matInput [matDatepicker]=\\\"openedAt\\\"  placeholder=\\\"Opened at\\\" formControlName=\\\"openedAt\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"openedAt\\\">\\n          <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\\n        </mat-datepicker-toggle>\\n        <mat-datepicker #openedAt></mat-datepicker>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput [matDatepicker]=\\\"closedAt\\\"  placeholder=\\\"Closed at\\\" formControlName=\\\"closedAt\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"closedAt\\\">\\n          <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\\n        </mat-datepicker-toggle>\\n        <mat-datepicker #closedAt></mat-datepicker>\\n      </mat-form-field>\\n    </div>\\n  </form>\\n\\n  <div class=\\\"buttons-container\\\" fxLayout=\\\"column\\\">\\n      <div  class=\\\"buttons\\\" *ngIf=\\\"show\\\" fxLayout=\\\"column\\\" >\\n          <div class=\\\"mat-fab-div\\\"  (click)=\\\" show = !show;\\\" fxFlex=\\\"32\\\">\\n              <button form=\\\"ngForm\\\" color=\\\"primary\\\" mat-mini-fab aria-label=\\\"Save\\\" (click)=\\\"saveInvoice()\\\">\\n                <mat-icon>save</mat-icon>\\n              </button>\\n          </div>\\n          <div class=\\\"mat-fab-div\\\" (click)=\\\" show = !show;\\\" fxFlex=\\\"32\\\">\\n            <button mat-mini-fab  aria-label=\\\"Close\\\" (click)=\\\"closeInvoice()\\\">\\n              <mat-icon>close</mat-icon>\\n            </button>\\n          </div>\\n        </div>\\n      <button mat-fab color=\\\"primary\\\" [disabled]=\\\"closed\\\" (click)=\\\" show = !show \\\"><mat-icon aria-label=\\\"Options\\\">more_vert</mat-icon></button>\\n    </div>\\n</div>\\n  <div class=\\\"mcard\\\">\\n    <form   [formGroup]=\\\"searchItemsForm\\\">\\n      <div  formArrayName=\\\"searchItems\\\"     fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\".3%\\\" fxLayoutGap.lt-md=\\\".9%\\\" fxLayoutWrap fxLayoutAlign=\\\"space-between center\\\">\\n        <mat-card    style=\\\"margin-bottom: 1em;\\\" fxFill fxFlex=\\\"49.5%\\\" fxFlex.lt-md=\\\"99.5%\\\" \\n        *ngFor=\\\"let searchItem of searchItems$ | async as searchItems; let i = index\\\"\\n        [formGroupName]=\\\"i\\\" class=\\\"card\\\">\\n            <mat-card-header fxLayout=\\\"row\\\">\\n                <div  fxLayout=\\\"row\\\" fxFlex=\\\"70\\\">\\n                    <div mat-card-avatar [ngStyle]=\\\"{'background-image':'url(/backend/api/storages/images/download/'+searchItem.image+')'}\\\" style=\\\"background-size: cover;\\\"></div>\\n                    <div fxLayout=\\\"column\\\"> \\n                        <mat-card-title>{{searchItem.name}} </mat-card-title>\\n                        <mat-card-subtitle>{{searchItem.sellingPrice | currency}}&#x24;</mat-card-subtitle>\\n                    </div>\\n                </div>\\n                <div fxLayout=\\\"row\\\" fxFlex fxLayoutAlign=\\\"end center\\\">\\n\\n                    <input hidden matInput formControlName=\\\"quantity\\\">\\n                    <input hidden matInput formControlName=\\\"itemId\\\">\\n                    <input hidden matInput formControlName=\\\"salesInvoiceId\\\">\\n                    <div  fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\" [ngSwitch]=\\\"searchItemsForm.get('searchItems').controls[i].value.quantity\\\">\\n                        <ng-template ngSwitchCase=\\\"0\\\">\\n                            <button disabled mat-icon-button (click)=\\\"changeQuantity(searchItemsForm.get('searchItems').controls[i].value, i,false)\\\"><mat-icon aria-label=\\\"Add one\\\">chevron_left</mat-icon></button>\\n                            <button  mat-mini-fab color=\\\"accent\\\"  [matBadge]=\\\"searchItemsForm.get('searchItems').controls[i].value.quantity\\\" matBadgePosition=\\\"after\\\" matBadgeColor=\\\"primary\\\" (click)=\\\"clearSearch(searchItemsForm.get('searchItems').controls[i].value, i)\\\">Clear</button>\\n                            <button disabled mat-icon-button (click)=\\\"changeQuantity(searchItemsForm.get('searchItems').controls[i].value, i, true)\\\"><mat-icon aria-label=\\\"Delete one\\\">chevron_right</mat-icon></button>\\n                        </ng-template>\\n                        <ng-template ngSwitchDefault>\\n                            <button mat-icon-button (click)=\\\"changeQuantity(searchItemsForm.get('searchItems').controls[i].value, i,false)\\\"><mat-icon aria-label=\\\"Add one\\\">chevron_left</mat-icon></button>\\n                            <button mat-mini-fab color=\\\"primary\\\"  [matBadge]=\\\"searchItemsForm.get('searchItems').controls[i].value.quantity\\\" matBadgePosition=\\\"after\\\" matBadgeColor=\\\"accent\\\" (click)=\\\"addItem(searchItemsForm.get('searchItems').controls[i].value, i)\\\">Add</button>\\n                            <button mat-icon-button (click)=\\\"changeQuantity(searchItemsForm.get('searchItems').controls[i].value, i, true)\\\"><mat-icon aria-label=\\\"Delete one\\\">chevron_right</mat-icon></button>                         \\n                        </ng-template>\\n                    </div>\\n\\n                </div>\\n            </mat-card-header>\\n        </mat-card>\\n\\n      </div>\\n  </form>\\n    <form *ngIf=\\\"items$ | async as items\\\" [formGroup]=\\\"itemsForm\\\">\\n      <div  formArrayName=\\\"items\\\"   fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\".3%\\\" fxLayoutGap.lt-md=\\\".9%\\\" fxLayoutWrap fxLayoutAlign=\\\"space-between center\\\">\\n        <mat-card class=\\\"card\\\"  style=\\\"margin-bottom: 1em;\\\" fxFill fxFlex=\\\"49.5%\\\" fxFlex.lt-md=\\\"99.5%\\\"  \\n        *ngFor=\\\"let itemCtrl of itemsForm.get('items').controls; let i = index\\\"\\n        [formGroupName]=\\\"i\\\">\\n            <mat-card-header fxLayout=\\\"row\\\">\\n                    <div mat-card-avatar [ngStyle]=\\\"{'background-image':'url(/backend/api/storages/images/download/'+items[i].item.image+')'}\\\" style=\\\"background-size: cover;\\\"></div>\\n                        <mat-card-title>{{items[i].item.name}} </mat-card-title>\\n                        <mat-card-subtitle>State: {{items[i].state}} <br> Quantity: {{items[i].quantity}} <br> Total: {{items[i].sellingPrice * items[i].quantity | currency}}</mat-card-subtitle>\\n                    \\n            </mat-card-header>\\n        </mat-card>\\n      </div>\\n  </form>\\n  </div>\\n\\n\\n\\n\"","import { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators, FormArray} from '@angular/forms';\nimport { AdminService } from './../admin.service';\nimport { AdminStatService } from './../stat.service';\nimport { SafePipe } from './../../../safe.pipe';\nimport {MatSnackBar} from '@angular/material';\nimport {SaleSnackbarComponent} from './sale-snackbar/sale-snackbar.component';\nimport { SearchService } from './../../../shared/dashboard/search.service';\nimport { SaleInvoice } from './../../../model/SaleInvoice';\n\n\nimport {\n  Subject,\n  BehaviorSubject,\n  Subscription\n} from 'rxjs';\n@Component({\n  selector: 'app-admin-sale-edit',\n  templateUrl: './admin-sale-edit.component.html',\n  styleUrls: ['./admin-sale-edit.component.css']\n})\nexport class AdminSaleEditComponent implements OnInit, OnDestroy {\n\n  @ViewChild('invoiceForm') invoiceForm: ElementRef;\n  public id: string;\n  public editMode = false;\n  public saleInvoiceForm: FormGroup;\n  public itemsForm:  FormGroup;\n  public itemsArray: FormArray;\n  public searchItemsForm:  FormGroup;\n  public searchItemsArray: FormArray;\n  public searchInputSubscription;\n  public searchInput = new Subject<string>();\n  public fullText;\n  public closed = false;\n  private _SaleInvoice: Subscription;\n  public SaleInvoice: BehaviorSubject<SaleInvoice> = new BehaviorSubject<SaleInvoice>(\n    {\n      id: null,\n      visitorId: 'New visitor',\n      openedAt: new Date(),\n      closedAt: null,\n      state: 'opened',\n      total: 0\n    }\n  );\n  public SaleInvoice$ = this.SaleInvoice.asObservable();\n\n  private _items: Subscription;\n  public items: BehaviorSubject<any> = new BehaviorSubject<any>([]);\n  public items$ = this.items.asObservable();\n\n  private _searchItems: Subscription;\n  public searchItems: BehaviorSubject<any> = new BehaviorSubject<any>([]);\n  public searchItems$ = this.searchItems.asObservable();\n\n  constructor(\n    private route: ActivatedRoute,\n    private adminService: AdminService,\n    private router: Router,\n    private safePipe: SafePipe,\n    public snackBar: MatSnackBar,\n    private searchService: SearchService,\n    private statService: AdminStatService\n    ) { }\n\n  ngOnInit() {\n    this.route.params\n    .subscribe(\n      (params: Params) => {\n        this.id = params.id;\n        this.editMode = params.id != null;\n        if (this.editMode === true) {\n          this.adminService.getSaleInvoice(this.id).subscribe(saleInvoice => {\n            this.SaleInvoice.next(saleInvoice);\n            this.closed = this.SaleInvoice.value.state === 'closed' ? true : false;\n            if (!this.closed) {\n              this.searchService.confirmSearchPossibility(true);\n              this.searchService.searchRequest$.subscribe(\n               fullText => {\n                 this.fullText = fullText;\n                 this.adminService.searchMenuItems(this.fullText).subscribe(items => {\n                  this.searchItems.next(items);\n                 });\n               });\n            }\n          });\n          this.adminService.searchItemsSaleInvoice(this.id).subscribe(items => {\n            this.items.next(items);\n          });\n        } else {\n          this.adminService.updateSaleInvoice(\n            this.SaleInvoice.value).subscribe(\n            (result: any) => {\n              console.log('', result);\n              this.router.navigate(['/admin/sale/' + result.id + '/edit']);\n            },\n            error => console.log(error)\n          );\n        }\n      }\n    );\n    this._items = this.items.subscribe(data => {\n      this.initItemsForm();\n    });\n    this._SaleInvoice = this.SaleInvoice.subscribe(data => {\n        this.initForm();\n      }\n    );\n    this._searchItems = this.searchItems.subscribe(data => {\n      this.initSearchItemsForm();\n    });\n  }\n\n  private saveInvoice() {\n    this.invoiceForm.nativeElement.submit();\n  }\n\n  private closeInvoice() {\n    this.adminService.closeSaleInvoice(this.id).subscribe(result => {\n      if (result) {\n        this.searchService.clearSearchInput(true);\n        this.searchService.confirmSearchPossibility(false);\n        this.closed = true;\n        this.SaleInvoice.value.state = 'closed';\n        this.statService.changeCounter('openedInvoices', 'decrement');\n      }\n    });\n  }\n\n  private initForm() {\n    this.saleInvoiceForm = new FormGroup({\n      'visitorId': new FormControl({value: this.SaleInvoice.value.visitorId, disabled: this.closed}),\n      'id': new FormControl({value: this.SaleInvoice.value.id,  disabled: this.closed}, Validators.required),\n      'openedAt': new FormControl({value: this.SaleInvoice.value.openedAt,  disabled: this.closed}, Validators.required),\n      'closedAt': new FormControl({value: this.SaleInvoice.value.closedAt,  disabled: this.closed}),\n      'total': new FormControl({value: this.SaleInvoice.value.total, disabled: true}),\n      'state': new FormControl({value: this.SaleInvoice.value.state,  disabled: this.closed}, Validators.required),\n    });\n  }\n  \n\n\n  addItem(item, index) {\n    this.adminService.addItemSaleInvoice(item).subscribe(\n      (result: any) => {\n        if (!result.add) {\n          if (result.availablePortions === 0) {\n            this.showSnackbar({message: 'Sorry, you are not allowed to order this dish at the moment.'});\n          }\n          if (this.searchItemsArray.controls[index].value.quantity !== result.availablePortions) {\n            this.showSnackbar({message: 'Sorry, but this dish is currently available in quantities of ' + result.availablePortions + ' servings'});\n          }\n\n          this.searchItemsArray.controls[index].patchValue({'quantity': result.availablePortions});\n        } else {\n          this.adminService.getSaleInvoice(this.id).subscribe(saleInvoice => {\n            this.adminService.searchItemsSaleInvoice(this.id).subscribe(items => {\n              this.items.next(items);\n              this.SaleInvoice.next(saleInvoice);\n              this.saleInvoiceForm.controls['total'].patchValue(result.total);\n              this.searchItems.value.splice(index, 1);\n              this.searchItemsArray.removeAt(index);\n              this.searchItemsArray.updateValueAndValidity();\n              this.statService.changeCounter('newOrders');\n            });\n          });\n        }\n      },\n      error => console.log(error)\n    );\n  }\n\n  changeQuantity(itemCtrl, i, add = true) {\n    if (add === true) {\n      this.searchItemsArray.controls[i].patchValue({'quantity': itemCtrl.quantity + 1});\n    } else {\n      if (itemCtrl.quantity === 1) {\n        this.searchItemsArray.controls[i].patchValue({'quantity': itemCtrl.quantity});\n      } else {\n        this.searchItemsArray.controls[i].patchValue({'quantity': itemCtrl.quantity - 1});\n      }\n    }\n  }\n\n  initSearchItemsForm() {\n    this.searchItemsForm = new FormGroup({});\n    this.searchItemsArray = new FormArray([]);\n    this.searchItems.value.forEach((item, key) => {\n      this.searchItemsArray.push(\n        new FormGroup({\n          'itemId': new FormControl(item.id),\n          'salesInvoiceId': new FormControl(this.id),\n          'quantity': new FormControl(1),\n        })\n      );\n    });\n\n    this.searchItemsForm.addControl('searchItems', this.searchItemsArray);\n  }\n\n\n  initItemsForm() {\n    this.itemsForm = new FormGroup({});\n    this.itemsArray = new FormArray([]);\n    this.items.value.forEach((item, key) => {\n      this.itemsArray.push(\n        new FormGroup({\n          'itemId': new FormControl(item.itemId),\n          'salesInvoiceId': new FormControl(item.salesInvoiceId),\n          'quantity': new FormControl(item.quantity),\n          'sellingPrice': new FormControl(item.sellingPrice),\n          'id': new FormControl(item.id),\n        })\n      );\n    });\n\n    this.itemsForm.addControl('items', this.itemsArray);\n  }\n\n  onUpdate() {\n    this.adminService.updateSaleInvoice(this.saleInvoiceForm.getRawValue()).subscribe(\n      (result: any) => {\n        this.router.navigate(['/admin/sale/' + result.id + '/edit']);\n      },\n      error => console.log(error)\n    );\n  }\n\n  clearSearch(item, i) {\n    this.searchService.clearSearchInput(true);\n    // this.searchItems.value.splice(i, 1);\n    console.log('', this.searchItemsForm)\n  }\n\n  onUpdateItem(item, index: number) {\n    this.adminService.updateSaleInvoiceItem(item).subscribe(\n      (result: any) => {\n        this.saleInvoiceForm.controls['total'].patchValue(result.total);\n      },\n      error => console.log(error)\n    );\n  }\n\n  showSnackbar(item: object) {\n    this.openSnackBar(item);\n  }\n\n  openSnackBar(item: object) {\n    this.snackBar.openFromComponent(SaleSnackbarComponent, {\n      data: item,\n      duration: 5000,\n    });\n\n  }\n\n  ngOnDestroy() {\n    this.searchService.clearSearchInput(true);\n    this.searchService.confirmSearchPossibility(false);\n    this._items.unsubscribe();\n    this._searchItems.unsubscribe();\n    this._SaleInvoice.unsubscribe();\n  }\n}\n","module.exports = \".mat-18{\\n    margin-top: 6px;\\n    cursor: pointer;\\n}\"","module.exports = \"<div fxLayout=\\\"column\\\">\\n  <div fxLayout=\\\"row\\\" fxFill fxLayoutAlign=\\\"space-between center\\\">\\n    <div fxFlex=\\\"90\\\"><p>{{ data.message }}</p></div>\\n    <div fxFlex=\\\"10\\\">\\n      <button mat-icon-button (click)=\\\"snackBarRef.dismiss()\\\"><mat-icon>close</mat-icon></button>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n  <!-- <div fxLayout=\\\"row\\\" fxFill fxLayoutAlign=\\\"space-between center\\\">\\n    <div fxFlex=\\\"90\\\">{{data.item.name}} - {{data.quantity}}</div>\\n    <div fxFlex=\\\"10\\\">\\n      <button mat-icon-button (click)=\\\"snackBarRef.dismiss()\\\"><mat-icon>close</mat-icon></button>\\n    </div>\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" *ngIf=\\\"data.newAt\\\" fxLayoutWrap fxLayoutGap=\\\"0.5%\\\" fxLayoutAlign=\\\"space-between end\\\">\\n      <div fxFlex=\\\"10\\\"><mat-icon matTooltip=\\\"Order time\\\" matTooltipPosition=\\\"above\\\" class=\\\"mat-18\\\">fiber_new</mat-icon></div>\\n      <div fxFlex=\\\"30\\\"><p>{{ newAt$ | async }}</p></div>\\n    </div>\\n \\n    <mat-divider></mat-divider>\\n    <div fxLayout=\\\"row\\\" *ngIf=\\\"data.progressAt\\\" fxLayoutWrap fxLayoutGap=\\\"0.5%\\\" fxLayoutAlign=\\\"space-between end\\\">\\n        <div fxFlex=\\\"10\\\"><mat-icon matTooltip=\\\"In progress\\\" matTooltipPosition=\\\"above\\\" class=\\\"mat-18\\\">schedule</mat-icon></div>\\n        <div fxFlex=\\\"30\\\"><p>{{ time$ | async | date:'mediumTime' }}</p></div>\\n      </div>\\n      <mat-divider></mat-divider>\\n      <div fxLayout=\\\"row\\\" *ngIf=\\\"data.readyAt\\\" fxLayoutWrap fxLayoutGap=\\\"0.5%\\\" fxLayoutAlign=\\\"space-between end\\\">\\n          <div fxFlex=\\\"10\\\"><mat-icon matTooltip=\\\"Ready\\\" matTooltipPosition=\\\"above\\\" class=\\\"mat-18\\\">thumb_up_alt</mat-icon></div>\\n          <div fxFlex=\\\"30\\\"><p>{{data.readyAt | date:'shortTime' }}</p></div>\\n        </div>\\n        <mat-divider></mat-divider>\\n        <div fxLayout=\\\"row\\\" *ngIf=\\\"data.servedAt\\\" fxLayoutWrap fxLayoutGap=\\\"0.5%\\\" fxLayoutAlign=\\\"space-between end\\\">\\n            <div fxFlex=\\\"10\\\"><mat-icon matTooltip=\\\"Served\\\" matTooltipPosition=\\\"above\\\" class=\\\"mat-18\\\">restaurant</mat-icon></div>\\n            <div fxFlex=\\\"30\\\"><p>{{data.servedAt | date:'shortTime' }}</p></div>\\n          </div> -->\"","import { Component, OnInit, AfterViewInit, Inject } from '@angular/core';\nimport { MatSnackBarRef, MAT_SNACK_BAR_DATA } from '@angular/material';\nimport {Observable, of, Subject, interval, } from 'rxjs';\nimport {delay, distinctUntilChanged, flatMap, map, tap} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-sale-snackbar',\n  templateUrl: './sale-snackbar.component.html',\n  styleUrls: ['./sale-snackbar.component.css']\n})\nexport class SaleSnackbarComponent implements OnInit, AfterViewInit {\n\n  constructor(    public snackBarRef: MatSnackBarRef<SaleSnackbarComponent>,\n    @Inject(MAT_SNACK_BAR_DATA) public data) {\n      this.time$ = interval(1000).pipe(\n        map(val => new Date())\n      );\n      this.initTimer(this.data);\n    }\n    message$: Observable<string>;\n    newAt$: Observable<string>;\n    newTime;\n    time$;\n\n    ticks = 0;\n\n    initTimer(data) {\n      this.newAt$ = interval(1000).pipe(\n          map((val) => {\n            const newAt = new Date(data.newAt);\n            const startTime = new Date(data.newAt);\n            const endTime = new Date();\n            let timeDiff = Number(endTime) - Number(startTime);\n            timeDiff /= 1000;\n            const seconds = Math.round(timeDiff % 60);\n            timeDiff = Math.floor(timeDiff / 60);\n            const minutes = Math.round(timeDiff % 60);\n            timeDiff = Math.floor(timeDiff / 60);\n            const hours = Math.round(timeDiff % 24);\n            timeDiff = Math.floor(timeDiff / 24);\n            const days = timeDiff;\n            newAt.setSeconds(newAt.getSeconds() + val);\n            console.log(hours + ':' + minutes + ':' + seconds);\n            return hours + ':' + minutes + ':' + seconds;\n          })\n        );\n    }\n\n  ngOnInit() {\n\n  }\n\n  ngAfterViewInit(): void {\n\n  }\n\n}\n","module.exports = \".mcard{\\n    background-color: white;\\n    padding: 5px;\\n    margin-left: 5px;\\n    margin-right: 5px;\\n    margin-top: 5px;\\n    box-shadow: 0px 2px 6px 0px rgba(0,0,0,.12);\\n}\\n\\n\\n.no-line {\\n    width: 200px;\\n  }\"","module.exports = \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"dataSource.loading$ | async\\\"></mat-progress-bar>\\n<div fxLayout=\\\"column\\\" class=\\\"mcard\\\" >\\n  <div fxLayout=\\\"column\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort matSortDisableClear=true>\\n\\n      <ng-container matColumnDef=\\\"state\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>State</th>\\n\\n          <td mat-cell *matCellDef=\\\"let saleInvoice\\\"> \\n            <span [ngSwitch]=\\\"saleInvoice.state\\\">\\n              <button matTooltip=\\\"Opened\\\" *ngSwitchCase=\\\"'opened'\\\" mat-icon-button>\\n                <mat-icon routerLink=\\\"/admin/sale/{{saleInvoice.id}}/edit\\\" >update</mat-icon>\\n              </button>\\n              <button matTooltip=\\\"Closed\\\" *ngSwitchCase=\\\"'closed'\\\" mat-icon-button>\\n                  <mat-icon routerLink=\\\"/admin/sale/{{saleInvoice.id}}/edit\\\" >check_circle_outline</mat-icon>\\n              </button>\\n            </span>\\n            </td>\\n          <td mat-footer-cell  *matFooterCellDef> \\n              <p>Revenue</p>  \\n              <p>Gross profit</p>\\n              <p>Net profit</p>\\n          </td>  \\n        </ng-container>\\n\\n      <ng-container matColumnDef=\\\"openedAt\\\">\\n        <th mat-header-cell *matHeaderCellDef> \\n          <div>\\n              <mat-form-field class=\\\"no-line\\\">\\n                  <input matInput\\n                        [formControl]=\\\"openedDateForm\\\"\\n                         placeholder=\\\"Opened\\\"\\n                         [satDatepicker]=\\\"openedDate\\\"\\n                         (dateInput)=\\\"updateOpenedDate('input', $event)\\\" \\n                         (dateChange)=\\\"updateOpenedDate('change', $event)\\\"\\n                         >\\n                  <sat-datepicker #openedDate [rangeMode]=\\\"true\\\" [closeAfterSelection]=\\\"true\\\">\\n                  </sat-datepicker>\\n                  <sat-datepicker-toggle matSuffix [for]=\\\"openedDate\\\"></sat-datepicker-toggle>\\n                  <button matTooltip=\\\"Current date\\\"  mat-button matSuffix mat-icon-button aria-label=\\\"Current date\\\" (click)=\\\"openedCurrent()\\\">\\n                      <mat-icon>access_time</mat-icon>\\n                    </button>\\n                    <button matTooltip=\\\"Date time show\\\"  mat-button matSuffix mat-icon-button aria-label=\\\"Date time show\\\" (click)=\\\"openedDateTimeToggle()\\\">\\n                      <mat-icon>alarm</mat-icon>\\n                    </button>\\n                    <button matTooltip=\\\"Reset\\\" mat-button matSuffix mat-icon-button aria-label=\\\"Reset\\\" (click)=\\\"openedReset()\\\">\\n                        <mat-icon>close</mat-icon>\\n                    </button>   \\n                </mat-form-field>\\n            </div>\\n        </th>\\n        <td mat-cell *matCellDef=\\\"let saleInvoice\\\"> {{openedDateFormat === 'shortTime' ? (saleInvoice.openedAt | date: 'shortTime') : (saleInvoice.openedAt | date: 'mediumDate')}} </td>\\n        <td mat-footer-cell *matFooterCellDef></td>\\n      </ng-container>\\n    \\n      <ng-container matColumnDef=\\\"closedAt\\\">\\n        <th mat-header-cell *matHeaderCellDef>\\n          <mat-form-field class=\\\"no-line\\\">\\n              <input matInput\\n              [formControl]=\\\"closedDateForm\\\"\\n               placeholder=\\\"Closed\\\"\\n               [satDatepicker]=\\\"closedDate\\\"\\n               (dateInput)=\\\"updateClosedDate('input', $event)\\\" \\n               (dateChange)=\\\"updateClosedDate('change', $event)\\\"\\n               >\\n              <sat-datepicker #closedDate [rangeMode]=\\\"true\\\" [closeAfterSelection]=\\\"true\\\">\\n              </sat-datepicker>\\n              <sat-datepicker-toggle matSuffix [for]=\\\"closedDate\\\"></sat-datepicker-toggle>\\n              <button matTooltip=\\\"Current date\\\"  mat-button matSuffix mat-icon-button aria-label=\\\"Current date\\\" (click)=\\\"closedCurrent()\\\">\\n                <mat-icon>access_time</mat-icon>\\n              </button>\\n              <button matTooltip=\\\"Date time show\\\"  mat-button matSuffix mat-icon-button aria-label=\\\"Date time show\\\" (click)=\\\"closedDateTimeToggle()\\\">\\n                <mat-icon>alarm</mat-icon>\\n              </button>\\n              <button matTooltip=\\\"Reset\\\" mat-button matSuffix mat-icon-button aria-label=\\\"Reset\\\" (click)=\\\"closedReset()\\\">\\n                  <mat-icon>close</mat-icon>\\n              </button>\\n            </mat-form-field>\\n        </th>\\n        <td mat-cell *matCellDef=\\\"let saleInvoice\\\"> {{closedDateFormat === 'shortTime' ? (saleInvoice.closedAt | date: 'shortTime') : (saleInvoice.closedAt | date: 'mediumDate')}} </td>\\n        <td mat-footer-cell *matFooterCellDef></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"total\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Total </th>\\n        <td mat-cell *matCellDef=\\\"let saleInvoice\\\"> {{saleInvoice.total | currency}} </td>\\n        <td mat-footer-cell *matFooterCellDef>\\n          <p>{{revenue$ | async | currency}}</p>\\n          <p>{{grossProfit$ | async | currency}}</p>\\n          <p>{{netProfit$ | async | currency}}</p>\\n        </td>\\n      </ng-container>\\n\\n\\n    \\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns;  sticky: true\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n      <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [length]=\\\"2000\\\" [pageSize]=\\\"50\\\" [pageSizeOptions]=\\\"[10, 50, 100]\\\"></mat-paginator>\\n  </div>\\n</div>\\n<div style=\\\"position: fixed; bottom: 10px; right: 10px;\\\">\\n  <a  routerLink=\\\"/admin/sale/new\\\" mat-fab color=\\\"primary\\\"><mat-icon aria-label=\\\"Add\\\">add</mat-icon></a>  \\n</div>\"","import { Component, OnInit, AfterViewInit, ElementRef, ViewChild, OnDestroy} from '@angular/core';\nimport { AdminService } from './../admin.service';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { SaleInvoice } from './../../../model/SaleInvoice';\nimport { tap } from 'rxjs/operators';\nimport { merge, Subscription, Observable } from 'rxjs';\nimport { SaleInvoiceDatasource } from './sale.invoice.datasource';\nimport {MatDatepickerInputEvent} from '@angular/material/datepicker';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { FormControl } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-admin-sale-list',\n  templateUrl: './admin-sale-list.component.html',\n  styleUrls: ['./admin-sale-list.component.css']\n})\nexport class AdminSaleListComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  private _routes: Subscription;\n  private saleInvoice: SaleInvoice;\n  private filter: string | Boolean = false;\n  private dataSource: SaleInvoiceDatasource;\n\n  public revenue$: Observable<string> = null;\n  public grossProfit$: Observable<string> = null;\n  public netProfit$: Observable<string> = null;\n\n  displayedColumns = [\n    // 'id',\n    'state',\n    'openedAt',\n    'closedAt',\n    'total'\n  ];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  @ViewChild(MatSort) sort: MatSort;\n\n  @ViewChild('input') input: ElementRef;\n  openedDateForm = new FormControl();\n  closedDateForm = new FormControl();\n  openedDate = null;\n  closedDate = null;\n  openedDateBegin = null;\n  closedDateBegin = null;\n  openedDateEnd = null;\n  closedDateEnd = null;\n  closedDateFormat = 'shortTime';\n  openedDateFormat = 'shortTime';\n  constructor(private adminService: AdminService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.openedDateFormat = localStorage.getItem('startDateFormat') !== null ?\n      localStorage.getItem('startDateFormat') : this.openedDateFormat;\n    this.closedDateFormat = localStorage.getItem('endDateFormat') !== null ?\n      localStorage.getItem('endDateFormat') : this.closedDateFormat;\n\n      if (localStorage.getItem('openedDateBegin') !== null) {\n        this.openedDateBegin = new Date(localStorage.getItem('openedDateBegin'));\n        this.openedDate = {\n          begin: new Date(localStorage.getItem('openedDateBegin')),\n          end: new Date(localStorage.getItem('openedDateEnd'))\n        };\n      }\n\n      if (localStorage.getItem('openedDateEnd') !== null) {\n        this.openedDateEnd = new Date(localStorage.getItem('openedDateEnd'));\n      }\n\n      if (localStorage.getItem('closedDateBegin') !== null) {\n        this.closedDateBegin = new Date(localStorage.getItem('closedDateBegin'));\n        this.closedDate = {\n          begin: new Date(localStorage.getItem('closedDateBegin')),\n          end: new Date(localStorage.getItem('closedDateEnd'))\n        };\n      }\n\n      if (localStorage.getItem('closedDateEnd') !== null) {\n        this.closedDateEnd = new Date(localStorage.getItem('closedDateEnd'));\n      }\n\n    this.openedDateForm = new FormControl({value: this.openedDate, disabled: false});\n    this.closedDateForm = new FormControl({value: this.closedDate, disabled: false});\n\n    this._routes = this.route.params\n    .subscribe(\n      (params: Params) => {\n        this.filter = params.filter;\n        this.dataSource = new SaleInvoiceDatasource(this.adminService);\n        this.revenue$ = this.dataSource.revenue$;\n        this.grossProfit$ = this.dataSource.grossProfit$;\n        this.netProfit$ = this.dataSource.netProfit$;\n\n        console.log('', this.filter);\n        this.dataSource.loadSaleInvoices(\n          this.filter,\n          'openedAt ASC',\n          0,\n          25,\n          this.openedDateBegin,\n          this.openedDateEnd,\n          this.closedDateBegin,\n          this.closedDateEnd);\n      }\n    );\n  }\n\n\n  ngOnDestroy() {\n    this._routes.unsubscribe();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n\n    merge(this.sort.sortChange, this.paginator.page)\n      .pipe(\n        tap(() => this.loadSaleInvoicesPage())\n      )\n      .subscribe();\n\n  }\n\n  updateOpenedDate(type: string, event: MatDatepickerInputEvent<any>) {\n    localStorage.setItem('openedDateBegin', event.value.begin);\n    localStorage.setItem('openedDateEnd', event.value.end);\n    this.openedDateBegin = event.value.begin;\n    this.openedDateEnd = event.value.end;\n    this.loadSaleInvoicesPage();\n  }\n\n  updateClosedDate(type: string, event: MatDatepickerInputEvent<any>) {\n    localStorage.setItem('closedDateBegin', event.value.begin);\n    localStorage.setItem('closedDateEnd', event.value.end);\n    this.closedDateBegin = event.value.begin;\n    this.closedDateEnd = event.value.end;\n    this.loadSaleInvoicesPage();\n  }\n\n  openedCurrent() {\n    const beginDate = new Date();\n    beginDate.setHours(0, 0, 0, 0);\n    const endDate = new Date();\n    endDate.setHours(23, 59, 59, 999);\n    this.openedDateForm.setValue({begin: beginDate, end: endDate});\n    localStorage.setItem('openedDateBegin', beginDate.toString());\n    localStorage.setItem('openedDateEnd', endDate.toString());\n    this.openedDateBegin = beginDate;\n    this.openedDateEnd = endDate;\n    this.loadSaleInvoicesPage();\n  }\n\n  openedDateTimeToggle() {\n    this.openedDateFormat = this.openedDateFormat === 'shortTime' ? 'mediumDate' : 'shortTime';\n    localStorage.setItem('openedDateFormat' , this.openedDateFormat);\n  }\n\n  openedReset() {\n    this.openedDateForm.setValue('');\n    localStorage.removeItem('openedDateBegin');\n    localStorage.removeItem('openedDateEnd');\n    this.openedDateBegin = null;\n    this.openedDateEnd = null;\n    this.loadSaleInvoicesPage();\n  }\n\n  closedCurrent() {\n    const beginDate = new Date();\n    beginDate.setHours(0, 0, 0, 0);\n    const endDate = new Date();\n    endDate.setHours(23, 59, 59, 999);\n    this.closedDateForm.setValue({begin: beginDate, end: endDate});\n    localStorage.setItem('closedDateBegin', beginDate.toString());\n    localStorage.setItem('closedDateEnd', endDate.toString());\n    this.closedDateBegin = beginDate;\n    this.closedDateEnd = endDate;\n    this.loadSaleInvoicesPage();\n  }\n\n  closedDateTimeToggle() {\n    this.closedDateFormat = this.closedDateFormat === 'shortTime' ? 'mediumDate' : 'shortTime';\n    localStorage.setItem('endDateFormat' , this.closedDateFormat);\n  }\n\n  closedReset() {\n    this.closedDateForm.setValue('');\n    localStorage.removeItem('closedDateBegin');\n    localStorage.removeItem('closedDateEnd');\n    this.closedDateBegin = null;\n    this.closedDateEnd = null;\n    this.loadSaleInvoicesPage();\n  }\n\n  loadSaleInvoicesPage() {\n\n    const sort = this.sort.active === undefined ? 'id ASC' : this.sort.active + ' ' + this.sort.direction.toUpperCase();\n\n    this.dataSource.loadSaleInvoices(\n        this.filter,\n        sort,\n        this.paginator.pageIndex,\n        this.paginator.pageSize,\n        this.openedDateBegin,\n        this.openedDateEnd,\n        this.closedDateBegin,\n        this.closedDateEnd,\n      );\n  }\n\n}\n","import { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { Observable, BehaviorSubject, of } from 'rxjs';\nimport { SaleInvoice } from './../../../model/SaleInvoice';\nimport { AdminService } from './../admin.service';\nimport { catchError, finalize } from 'rxjs/operators';\n\n\n\nexport class SaleInvoiceDatasource implements DataSource<SaleInvoice> {\n\n\n  private saleInvoiceSubject = new BehaviorSubject<SaleInvoice[]>([]);\n\n  private loadingSubject = new BehaviorSubject<boolean>(false);\n\n  public revenue: BehaviorSubject<string> = new BehaviorSubject<string>('0');\n  public revenue$ = this.revenue.asObservable();\n  public grossProfit: BehaviorSubject<string>  = new BehaviorSubject<string>('0');\n  public grossProfit$ = this.grossProfit.asObservable();\n  public netProfit: BehaviorSubject<string>  = new BehaviorSubject<string>('0');\n  public netProfit$ = this.netProfit.asObservable();\n\n  public loading$ = this.loadingSubject.asObservable();\n\n  public paginator;\n\n  constructor(private adminService: AdminService) {\n\n  }\n\n  loadSaleInvoices(\n    filter: string | Boolean = false,\n    sortDirection: string,\n    pageIndex: number,\n    pageSize: number,\n    openedDateBegin = null,\n    openedDateEnd = null,\n    closedDateBegin = null,\n    closedDateEnd = null) {\n\n    this.loadingSubject.next(true);\n\n    this.adminService.findSaleInvoices(filter, sortDirection,\n      pageIndex, pageSize, openedDateBegin, openedDateEnd, closedDateBegin, closedDateEnd).pipe(\n        catchError(() => of([])),\n        finalize(() => this.loadingSubject.next(false))\n      )\n      .subscribe((saleInvoices: any) => {\n        this.saleInvoiceSubject.next(saleInvoices.body.result);\n        this.revenue.next(saleInvoices.body.revenue);\n        this.grossProfit.next(saleInvoices.body.grossProfit);\n        this.netProfit.next(saleInvoices.body.netProfit);\n        this.paginator.length = saleInvoices.headers.get('Content-Range').split('/')[1];\n      });\n\n  }\n\n  connect(collectionViewer: CollectionViewer): Observable<SaleInvoice[]> {\n    return this.saleInvoiceSubject.asObservable();\n  }\n\n  disconnect(collectionViewer: CollectionViewer): void {\n    console.log('disconnect');\n    this.saleInvoiceSubject.complete();\n    this.loadingSubject.complete();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SatDatepickerModule, SatNativeDateModule } from 'saturn-datepicker';\nimport {\n  MatCardModule,\n  MatToolbarModule,\n  MatInputModule,\n  MatButtonModule,\n  MatIconModule,\n  MatSidenavModule,\n  MatListModule,\n  MatMenuModule,\n  MatExpansionModule,\n  MatTableModule,\n  MatPaginatorModule,\n  MatSortModule,\n  MatProgressSpinnerModule,\n  MatProgressBarModule,\n  MatOptionModule,\n  MatSelectModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatRadioModule,\n  MatAutocompleteModule,\n  MatSnackBarModule,\n  MatDialogModule,\n  MatBadgeModule,\n  MatTooltipModule,\n  MAT_SNACK_BAR_DEFAULT_OPTIONS\n} from '@angular/material';\n\nimport { StubSharedModule } from './../../shared/stub/stub.shared.module';\nimport { DashboardSharedModule } from './../../shared/dashboard/dashboard.shared.module';\nimport { NotFoundSharedModule } from './../../shared/not-found/not-found.shared.module';\n\nimport { AdminItemListComponent } from './admin-item-list/admin-item-list.component';\nimport { AdminItemEditComponent } from './admin-item-edit/admin-item-edit.component';\n\nimport { AdminSaleListComponent } from './admin-sale-list/admin-sale-list.component';\nimport { AdminSaleEditComponent } from './admin-sale-edit/admin-sale-edit.component';\nimport { AdminOrderListComponent } from './admin-order-list/admin-order-list.component';\n\nimport { AdminPurchaseListComponent } from './admin-purchase-list/admin-purchase-list.component';\nimport { AdminPurchaseEditComponent } from './admin-purchase-edit/admin-purchase-edit.component';\nimport { SaleSnackbarComponent } from './admin-sale-edit/sale-snackbar/sale-snackbar.component';\n\n\n@NgModule({\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    AdminRoutingModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatListModule,\n    MatMenuModule,\n    MatExpansionModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    FlexLayoutModule,\n    MatRadioModule,\n    MatAutocompleteModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    DashboardSharedModule,\n    StubSharedModule,\n    NotFoundSharedModule,\n    SatDatepickerModule,\n    SatNativeDateModule\n  ],\n  declarations: [\n    AdminItemEditComponent,\n    AdminItemListComponent,\n    AdminSaleEditComponent,\n    SaleSnackbarComponent,\n    AdminSaleListComponent,\n    AdminPurchaseEditComponent,\n    AdminPurchaseListComponent,\n    AdminOrderListComponent,\n  ],\n  entryComponents: [ SaleSnackbarComponent ],\n  providers: [\n    {provide: MAT_SNACK_BAR_DEFAULT_OPTIONS, useValue: {duration: 100000}}\n  ],\n})\nexport class AdminModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\nimport { Item } from './../../model/Item';\nimport { Order } from './../../model/Order';\nimport { Category } from './../../model/Category';\nimport { Ingredient } from './../../model/Ingredient';\nimport { PurchaseInvoice } from './../../model/PurchaseInvoice';\nimport { SaleInvoice } from './../../model/SaleInvoice';\n\nimport {\n  map,\n} from 'rxjs/operators';\nimport {\n  BehaviorSubject,\n  Observable\n} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  public apiUrl = environment.apiUrl;\n  public items: BehaviorSubject<Item[]>  = new BehaviorSubject<Item[]>(null);\n  public items$: Observable<Item[]> = this.items.asObservable();\n\n\n  constructor(private http: HttpClient) { }\n\n  public getItems(filter: string | Boolean = false, fullText: string | Boolean = false) {\n    if (!filter) {\n      this.listItems(fullText);\n    } else if (filter === 'shoppinglist') {\n      this.listShoppingList(fullText);\n    } else if (filter === 'stoplist') {\n      this.listStopList(fullText);\n    }\n  }\n\n  public listItems(fullText: string | Boolean = false){\n    return this.http.get<Item[]>(this.apiUrl  + 'api/Items/listItems', {\n      params: new HttpParams()\n        .set('fullText', fullText.toString())\n    }).subscribe(\n      data => this.items.next(data)\n    );\n  }\n\n  public listShoppingList(fullText: string | Boolean = false){\n    return this.http.get<Item[]>(this.apiUrl  + 'api/Items/listShoppingList', {\n      params: new HttpParams()\n        .set('fullText', fullText.toString())\n    }).subscribe(\n      data => this.items.next(data)\n    );\n  }\n\n  public listStopList(fullText: string | Boolean = false){\n    return this.http.get<Item[]>(this.apiUrl  + 'api/Items/listStopList', {\n      params: new HttpParams()\n        .set('fullText', fullText.toString())\n    }).subscribe(\n      data => this.items.next(data)\n    );\n  }\n\n  public progressOrder(id, index) {\n    return this.http.get<Order>(this.apiUrl  + 'api/relSalesInvoiceItems/progressOrder?id=' + id).pipe(\n      map(() => {\n        return 'progress';\n      })\n    );\n  }\n\n  public readyOrder(id, index) {\n    return this.http.get(this.apiUrl  + 'api/relSalesInvoiceItems/readyOrder?id=' + id\n    ).pipe(\n      map(() => {\n        return 'ready';\n      })\n    );\n  }\n\n  public serveOrder(id, index) {\n    return this.http.get(this.apiUrl  + 'api/relSalesInvoiceItems/serveOrder?id=' + id\n    ).pipe(\n      map(() => {\n        return 'served';\n      })\n    );\n  }\n\n  public getOrders(filter: string | Boolean = false) {\n    return this.http.get<Order[]>(this.apiUrl  + 'api/relSalesInvoiceItems/listOrders', {\n      params: new HttpParams()\n        .set('filter', filter.toString())\n    }).pipe(\n      map(data => {\n        return(data);\n      })\n    );\n  }\n\n\n  public getItem(id): Observable<Item> {\n    return this.http.get<Item>(this.apiUrl  + 'api/Items/' + id.toString()).pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public searchMenuItems(fullText): Observable<Item[]> {\n    return this.http.get<Item[]>(this.apiUrl  + 'api/Items/searchMenuItems?fullText=' + fullText.toString()).pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public getRecipe(id): Observable<Ingredient[]> {\n    return this.http.get<Ingredient[]>(this.apiUrl  + 'api/Items/' + id + '/recipe').pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public updateItem(item) {\n    return this.http.post(this.apiUrl  + 'api/Items/replaceOrCreate',  item).pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public getCategories(): Observable<Category[]> {\n    return this.http.get<Category[]>(this.apiUrl  + 'api/Categories').pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public updateIngredient(ingredient) {\n\n    return this.http.post(this.apiUrl  + 'api/Ingredients/updateIngredient', {ingredient: ingredient}).pipe(\n      map(data => {\n        console.log(data);\n        return data;\n      })\n    );\n  }\n\n  public search(recipeId, fulltext = ''): Observable<Ingredient[]> {\n    return this.http.get<Ingredient[]>(this.apiUrl  + 'api/Ingredients/search?recipeId=' + recipeId + '&fullText=' + fulltext).pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public findPurchaseInvoices(order = 'id ASC', pageNumber = 0, pageSize = 1, startDate = null, endDate = null) {\n    let offset = 0;\n    if (pageNumber === 0) {\n      offset = 0;\n    } else {\n      offset = pageSize * pageNumber + 1;\n    }\n\n    startDate = startDate === null ? '0000-09-30T21:00:00.000Z' : startDate.toISOString();\n    endDate = endDate === null ? '9999-09-30T21:00:00.000Z' : endDate.toISOString();\n\n    return this.http.get(this.apiUrl  + 'api/PurchaseInvoices',\n    {\n      observe: 'response',\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Prefer': 'count=exact'\n      }),\n      params: new HttpParams()\n        .set('filter[limit]', pageSize.toString())\n        .set('filter[order]', order)\n        .set('filter[limit]',  pageSize.toString() )\n        .set('filter[skip]', offset.toString())\n        .set('filter[where][date][between][0]', startDate)\n        .set('filter[where][date][between][1]', endDate)\n    }).pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public getPurchaseInvoice(id: string): Observable<PurchaseInvoice>  {\n    return this.http.get<PurchaseInvoice>(this.apiUrl  + 'api/PurchaseInvoices/' + id.toString()).pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public searchItemsPurchaseInvoice(id: string, fulltext = '') {\n    return this.http.get(this.apiUrl  + 'api/relPurchaseInvoiceItems/searchItemsPurchaseInvoice?purchaseInvoiceId=' + id.toString() + '&fullText=' + fulltext).pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public updatePurchaseInvoiceItem(item) {\n    return this.http.post(this.apiUrl  + 'api/relPurchaseInvoiceItems/updatePurchaseInvoiceItem', {item: item}).pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public profilePurchaseInvoice(PurchaseInvoice) {\n    return this.http.post(this.apiUrl  + 'api/PurchaseInvoices/profile',  {invoice: PurchaseInvoice}).pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public updatePurchaseInvoice(PurchaseInvoice) {\n    return this.http.post(this.apiUrl  + 'api/PurchaseInvoices/replaceOrCreate',  PurchaseInvoice).pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public findSaleInvoices(\n    filter: string | Boolean = false,\n    order = 'openedAt ASC',\n    pageNumber = 0,\n    pageSize = 1,\n    openedDateBegin = null,\n    openedDateEnd = null,\n    closedDateBegin = null,\n    closedDateEnd = null,\n    ) {\n    let offset = 0;\n    if (pageNumber === 0) {\n      offset = 0;\n    } else {\n      offset = pageSize * pageNumber + 1;\n    }\n\n    const openedFilter = openedDateBegin === null ? {} : {\n      'openedAt': {\n        between: [openedDateBegin, openedDateEnd]\n      }\n    };\n\n    const closedFilter = closedDateBegin === null ? {} : {\n      'closedAt': {\n        between: [closedDateBegin, closedDateEnd]\n      }\n    };\n\n    const stateFilter = !filter ? {} : {state: filter};\n\n    const requestFilter = {\n      limit: pageSize.toString(),\n      order: order,\n      skip: offset.toString(),\n      where: {\n        and: [\n          openedFilter,\n          closedFilter,\n          stateFilter\n        ]\n      }\n    };\n\n    const params = new HttpParams()\n    .set('filter', JSON.stringify(requestFilter));\n\n    return this.http.get(this.apiUrl  + 'api/SalesInvoices',\n    {\n      observe: 'response',\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Prefer': 'count=exact'\n      }),\n      params: params\n    }).pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public getSaleInvoice(id: string): Observable<SaleInvoice>  {\n    return this.http.get<SaleInvoice>(this.apiUrl  + 'api/SalesInvoices/' + id.toString()).pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public searchItemsSaleInvoice(id: string, fulltext = ''): Observable<Item[]> {\n    return this.http.get<Item[]>(this.apiUrl  + 'api/relSalesInvoiceItems/searchItemsSalesInvoice?salesInvoiceId=' + id.toString() + '&fullText=' + fulltext).pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public updateSaleInvoiceItem(item) {\n    return this.http.post(this.apiUrl  + 'api/relSalesInvoiceItems/updateSalesInvoiceItem', {item: item}).pipe(\n      map(data => {\n        console.log(data);\n        return data;\n      })\n    );\n  }\n\n  public updateSaleInvoice(SaleInvoice) {\n    console.log(SaleInvoice);\n    return this.http.post(this.apiUrl  + 'api/SalesInvoices/replaceOrCreate',  SaleInvoice).pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public addItemSaleInvoice(item) {\n    return this.http.post(this.apiUrl  + 'api/relSalesInvoiceItems/addItemSaleInvoice', {item: item}).pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public closeSaleInvoice(id) {\n    return this.http.get(this.apiUrl  + 'api/SalesInvoices/closeSaleInvoice?salesInvoiceId=' + id.toString()).pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  uploadFile(fileToUpload: any) {\nreturn this.http.post(this.apiUrl  + 'api/storages/images/upload', fileToUpload).pipe(\n  map(data => {\n    return data;\n  })\n);\n  }\n}\n"],"sourceRoot":""}