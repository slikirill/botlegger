{"version":3,"sources":["webpack:///./src/app/role/waiter/waiter-order-list/waiter-order-list.component.css","webpack:///./src/app/role/waiter/waiter-order-list/waiter-order-list.component.html","webpack:///./src/app/role/waiter/waiter-order-list/waiter-order-list.component.ts","webpack:///./src/app/role/waiter/waiter-routing.module.ts","webpack:///./src/app/role/waiter/waiter-sale-edit/sale-snackbar/sale-snackbar.component.css","webpack:///./src/app/role/waiter/waiter-sale-edit/sale-snackbar/sale-snackbar.component.html","webpack:///./src/app/role/waiter/waiter-sale-edit/sale-snackbar/sale-snackbar.component.ts","webpack:///./src/app/role/waiter/waiter-sale-edit/waiter-sale-edit.component.css","webpack:///./src/app/role/waiter/waiter-sale-edit/waiter-sale-edit.component.html","webpack:///./src/app/role/waiter/waiter-sale-edit/waiter-sale-edit.component.ts","webpack:///./src/app/role/waiter/waiter-sale-list/sale.invoice.datasource.ts","webpack:///./src/app/role/waiter/waiter-sale-list/waiter-sale-list.component.css","webpack:///./src/app/role/waiter/waiter-sale-list/waiter-sale-list.component.html","webpack:///./src/app/role/waiter/waiter-sale-list/waiter-sale-list.component.ts","webpack:///./src/app/role/waiter/waiter.module.ts","webpack:///./src/app/role/waiter/waiter.service.ts"],"names":[],"mappings":"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","file":"role-waiter-waiter-module.js","sourcesContent":["module.exports = \".mat-card:not([class*=mat-elevation-z]) {\\n  box-shadow: 0px 2px 6px 0px rgba(0,0,0,.12);\\n}\\n\\n::ng-deep .mat-card-header-text {\\nmargin: 0;\\n}\\n\\n.mcard{\\nmargin-left: 5px;\\nmargin-top: 5px;\\n}\\n\\n.card {\\n  margin-bottom: 1%;\\n}\"","module.exports = \"<div class=\\\"mcard\\\" fxLayout=\\\"row wrap\\\" fxLayout.sm=\\\"column\\\" fxLayoutGap=\\\"1%\\\" fxLayoutWrap fxLayoutAlign=\\\"space-between center\\\" fxLayoutAlign.sm=\\\"center\\\"   >\\n    <mat-card *ngFor=\\\"let order of orders$ | async; let i = index\\\" class=\\\"card\\\" fxFlex=\\\"49%\\\" fxFlex.xs=\\\"100\\\">\\n        <mat-card-header fxLayout=\\\"row\\\">\\n            <div  fxLayout=\\\"row\\\" fxFlex=\\\"70\\\">\\n                <div mat-card-avatar [ngStyle]=\\\"{'background-image':'url(/backend/api/storages/images/download/'+order.item.image+')'}\\\" style=\\\"background-size: cover;\\\"></div>\\n                <div fxLayout=\\\"column\\\"> \\n                    <mat-card-title>{{order.item.name}} <mat-icon *ngIf=\\\"order.menuItem\\\" aria-label=\\\"Menu order\\\">restaurant_menu</mat-icon></mat-card-title>\\n                    <mat-card-subtitle>{{order.quantity}} x {{order.sellingPrice | currency}}</mat-card-subtitle>\\n                </div>\\n            </div>\\n            <div fxLayout=\\\"column\\\" fxFlex fxLayoutAlign.sm=\\\"end center\\\">\\n              <div [ngSwitch]=\\\"order.state\\\">\\n                <ng-container *ngSwitchCase= \\\"'new'\\\">   \\n                  <button mat-icon-button  color=\\\"primary\\\">\\n                    <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">fiber_new</mat-icon>\\n                  </button> \\n                </ng-container>\\n                <ng-container *ngSwitchCase= \\\"'progress'\\\">\\n                  <button mat-icon-button color=\\\"primary\\\">\\n                    <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">update</mat-icon>\\n                  </button> \\n                </ng-container>\\n                <ng-container *ngSwitchCase= \\\"'ready'\\\">\\n                  <button mat-icon-button color=\\\"primary\\\">\\n                    <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">thumb_up_alt</mat-icon>\\n                  </button>                 \\n                </ng-container>\\n                <ng-container *ngSwitchCase= \\\"'served'\\\">                \\n                  <button mat-icon-button color=\\\"primary\\\">\\n                    <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">restaurant_menu</mat-icon>\\n                  </button>    \\n                </ng-container>\\n              </div> \\n            </div>\\n        </mat-card-header>\\n        <mat-card-actions fxLayout=\\\"row\\\">\\n            <div fxFlex=\\\"70\\\">\\n  \\n            </div>\\n            <div [ngSwitch]=\\\"order.state\\\">\\n                <ng-container *ngSwitchCase= \\\"'new'\\\">   \\n                    <div fxFlex style=\\\"height: 36px;\\\">\\n\\n                    </div>\\n                </ng-container>\\n                <ng-container  *ngSwitchCase= \\\"'progress'\\\" >\\n                    <div fxFlex style=\\\"height: 36px;\\\">\\n\\n                    </div>\\n                </ng-container>\\n                <ng-container *ngSwitchCase= \\\"'ready'\\\">\\n                    <div fxFlex>\\n                        <button  mat-button (click)=\\\"changeState(order.id,'served', i);\\\">SERVE</button>\\n                    </div>             \\n                </ng-container>\\n                <ng-container *ngSwitchCase= \\\"'served'\\\">                \\n                    <div fxFlex>\\n                        <button routerLink=\\\"/waiter/sale/{{order.salesInvoiceId}}/edit\\\" mat-button>INVOICE</button>\\n                    </div> \\n                </ng-container>\\n              </div> \\n  \\n        </mat-card-actions>\\n    </mat-card>\\n  </div>\\n  \"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { WaiterService } from './../waiter.service';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { WaiterStatService } from './../stat.service';\nimport { Order } from './../../../model/Order';\n\nimport {\n  Subscription,\n  BehaviorSubject,\n  timer\n} from 'rxjs';\nimport {\n  switchMap\n} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-waiter-order-list',\n  templateUrl: './waiter-order-list.component.html',\n  styleUrls: ['./waiter-order-list.component.css']\n})\nexport class WaiterOrderListComponent implements OnInit, OnDestroy {\n\n  private _routes: Subscription;\n  private _orders: Subscription = new Subscription;\n\n  public orders: BehaviorSubject<Order[]> = new BehaviorSubject<Order[]>(null);\n  public orders$ = this.orders.asObservable();\n  private filter: string | Boolean = false;\n\n  constructor(\n    private waiterService: WaiterService,\n    private route: ActivatedRoute,\n    private statService: WaiterStatService\n    ) { }\n\n  ngOnInit() {\n    this._routes = this.route.params\n    .subscribe(\n      (params: Params) => {\n        this.filter = params.filter;\n        this._orders.unsubscribe();\n        this._orders = timer(0, 1000 * 30).pipe(\n          switchMap(() => this.waiterService.getOrders(this.filter))\n        ).subscribe((result)  => this.orders.next(result));\n      }\n    );\n  }\n\n  changeState(id: string, state: string, index) {\n    switch (state) {\n      case 'served':\n        this.statService.changeCounter('readyOrders', 'decrement');\n        this.waiterService.serveOrder(id, index).subscribe(() => {\n          this.orders.value[index].state = 'served';\n        });\n        break;\n      default:\n        break;\n    }\n    return true;\n  }\n\n  ngOnDestroy(): void {\n    this._orders.unsubscribe();\n    this._routes.unsubscribe();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { StubComponent } from './../../shared/stub/stub.component';\nimport { DashboardComponent } from './../../shared/dashboard/dashboard.component';\nimport { NotFoundComponent } from './../../shared/not-found/not-found.component';\nimport { WaiterOrderListComponent } from './waiter-order-list/waiter-order-list.component';\nimport { WaiterSaleListComponent } from './waiter-sale-list/waiter-sale-list.component';\nimport { WaiterSaleEditComponent } from './waiter-sale-edit/waiter-sale-edit.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardComponent,\n    children: [\n      { path: 'sale', component: StubComponent ,\n        children: [\n          { path: '', component: WaiterSaleListComponent },\n          { path: 'new', component: WaiterSaleEditComponent },\n          { path: ':id/edit', component: WaiterSaleEditComponent},\n          { path: ':filter/show', component: WaiterSaleListComponent },\n          { path: 'order', component: WaiterOrderListComponent},\n          { path: 'order/:filter/show', component: WaiterOrderListComponent },\n        ]\n      },\n      {path: '404', component: NotFoundComponent},\n      {path: '**', redirectTo: '/waiter/404'}\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WaiterRoutingModule { }\n\n\n","module.exports = \".mat-18{\\n    margin-top: 6px;\\n    cursor: pointer;\\n}\"","module.exports = \"<div fxLayout=\\\"column\\\">\\n  <div fxLayout=\\\"row\\\" fxFill fxLayoutAlign=\\\"space-between center\\\">\\n    <div fxFlex=\\\"90\\\"><p>{{ data.message }}</p></div>\\n    <div fxFlex=\\\"10\\\">\\n      <button mat-icon-button (click)=\\\"snackBarRef.dismiss()\\\"><mat-icon>close</mat-icon></button>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n  <!-- <div fxLayout=\\\"row\\\" fxFill fxLayoutAlign=\\\"space-between center\\\">\\n    <div fxFlex=\\\"90\\\">{{data.item.name}} - {{data.quantity}}</div>\\n    <div fxFlex=\\\"10\\\">\\n      <button mat-icon-button (click)=\\\"snackBarRef.dismiss()\\\"><mat-icon>close</mat-icon></button>\\n    </div>\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" *ngIf=\\\"data.newAt\\\" fxLayoutWrap fxLayoutGap=\\\"0.5%\\\" fxLayoutAlign=\\\"space-between end\\\">\\n      <div fxFlex=\\\"10\\\"><mat-icon matTooltip=\\\"Order time\\\" matTooltipPosition=\\\"above\\\" class=\\\"mat-18\\\">fiber_new</mat-icon></div>\\n      <div fxFlex=\\\"30\\\"><p>{{ newAt$ | async }}</p></div>\\n    </div>\\n \\n    <mat-divider></mat-divider>\\n    <div fxLayout=\\\"row\\\" *ngIf=\\\"data.progressAt\\\" fxLayoutWrap fxLayoutGap=\\\"0.5%\\\" fxLayoutAlign=\\\"space-between end\\\">\\n        <div fxFlex=\\\"10\\\"><mat-icon matTooltip=\\\"In progress\\\" matTooltipPosition=\\\"above\\\" class=\\\"mat-18\\\">schedule</mat-icon></div>\\n        <div fxFlex=\\\"30\\\"><p>{{ time$ | async | date:'mediumTime' }}</p></div>\\n      </div>\\n      <mat-divider></mat-divider>\\n      <div fxLayout=\\\"row\\\" *ngIf=\\\"data.readyAt\\\" fxLayoutWrap fxLayoutGap=\\\"0.5%\\\" fxLayoutAlign=\\\"space-between end\\\">\\n          <div fxFlex=\\\"10\\\"><mat-icon matTooltip=\\\"Ready\\\" matTooltipPosition=\\\"above\\\" class=\\\"mat-18\\\">thumb_up_alt</mat-icon></div>\\n          <div fxFlex=\\\"30\\\"><p>{{data.readyAt | date:'shortTime' }}</p></div>\\n        </div>\\n        <mat-divider></mat-divider>\\n        <div fxLayout=\\\"row\\\" *ngIf=\\\"data.servedAt\\\" fxLayoutWrap fxLayoutGap=\\\"0.5%\\\" fxLayoutAlign=\\\"space-between end\\\">\\n            <div fxFlex=\\\"10\\\"><mat-icon matTooltip=\\\"Served\\\" matTooltipPosition=\\\"above\\\" class=\\\"mat-18\\\">restaurant</mat-icon></div>\\n            <div fxFlex=\\\"30\\\"><p>{{data.servedAt | date:'shortTime' }}</p></div>\\n          </div> -->\"","import { Component, OnInit, AfterViewInit, Inject } from '@angular/core';\nimport { MatSnackBarRef, MAT_SNACK_BAR_DATA } from '@angular/material';\nimport {Observable, of, Subject, interval, } from 'rxjs';\nimport {delay, distinctUntilChanged, flatMap, map, tap} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-sale-snackbar',\n  templateUrl: './sale-snackbar.component.html',\n  styleUrls: ['./sale-snackbar.component.css']\n})\nexport class WaiterSaleSnackbarComponent implements OnInit, AfterViewInit {\n\n  constructor(    public snackBarRef: MatSnackBarRef<WaiterSaleSnackbarComponent>,\n    @Inject(MAT_SNACK_BAR_DATA) public data) {\n      this.time$ = interval(1000).pipe(\n        map(val => new Date())\n      );\n      this.initTimer(this.data);\n    }\n    message$: Observable<string>;\n    newAt$: Observable<string>;\n    newTime;\n    time$;\n\n    ticks = 0;\n\n    initTimer(data) {\n      this.newAt$ = interval(1000).pipe(\n          map((val) => {\n            const newAt = new Date(data.newAt);\n            const startTime = new Date(data.newAt);\n            const endTime = new Date();\n            let timeDiff = Number(endTime) - Number(startTime);\n            timeDiff /= 1000;\n            const seconds = Math.round(timeDiff % 60);\n            timeDiff = Math.floor(timeDiff / 60);\n            const minutes = Math.round(timeDiff % 60);\n            timeDiff = Math.floor(timeDiff / 60);\n            const hours = Math.round(timeDiff % 24);\n            timeDiff = Math.floor(timeDiff / 24);\n            const days = timeDiff;\n            newAt.setSeconds(newAt.getSeconds() + val);\n            console.log(hours + ':' + minutes + ':' + seconds);\n            return hours + ':' + minutes + ':' + seconds;\n          })\n        );\n    }\n\n  ngOnInit() {\n\n  }\n\n  ngAfterViewInit(): void {\n\n  }\n\n}\n","module.exports = \".mat-18{\\n    margin-top: 6px;\\n}\\n\\n.card {\\n    margin-bottom: 1%;\\n  }\\n\\n.mat-card:not([class*=mat-elevation-z]) {\\n    box-shadow: 0px 2px 6px 0px rgba(0,0,0,.12);\\n}\\n\\n.mcard_white{\\n    background-color: white;\\n    padding: 5px;\\n    margin-left: 5px;\\n    margin-right: 5px;\\n    margin-top: 5px;\\n    box-shadow: 0px 2px 6px 0px rgba(0,0,0,.12);\\n}\\n\\n.mcard{\\n    margin-left: 5px;\\n    margin-top: 5px;\\n    margin-right: 5px;\\n}\\n\\n.mat-fab-div{\\n    margin-bottom: 5px; \\n}\\n\\n.buttons-container {\\n    position: fixed; bottom: 10px; right: 10px;\\n}\\n\\n.buttons {\\n    margin-left: 9px;\\n}\\n\"","module.exports = \"<div class=\\\"mcard_white\\\" fxLayout=\\\"column\\\">\\n  <h3>Sale invoice </h3>\\n\\n  <div *ngIf=\\\"SaleInvoice$ | async as SaleInvoice\\\">\\n      <p>Visitor: {{SaleInvoice.visitorId}}</p>\\n      <p>State: {{SaleInvoice.state}}</p>\\n      <p>Opened: {{SaleInvoice.openedAt | date: 'fullDate'}}</p>\\n      <p *ngIf=\\\"SaleInvoice.closedAt\\\">Closed: {{SaleInvoice.closedAt | date: 'fullDate'}}</p>\\n      <p>Total: {{SaleInvoice.total | currency}}</p>\\n  </div>\\n\\n  <form fxHide fxLayout=\\\"column\\\" *ngIf=\\\"SaleInvoice$ | async\\\" [formGroup]=\\\"saleInvoiceForm\\\" (ngSubmit)=\\\"onUpdate()\\\">\\n    <ng-template *ngIf=\\\"!editMode\\\">\\n      <input matInput formControlName=\\\"id\\\">\\n    </ng-template>\\n    <div  fxLayout=\\\"row\\\"  fxFill fxLayoutAlign=\\\"space-between center\\\">\\n      <mat-form-field fxFlex=\\\"32\\\">\\n        <input matInput placeholder=\\\"Visitor\\\" formControlName=\\\"visitorId\\\">\\n        <mat-error *ngIf=\\\"saleInvoiceForm.controls['visitorId'].hasError('required')\\\">\\n          Visitor is\\n          <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field fxFlex=\\\"32\\\">\\n        <input matInput placeholder=\\\"Total\\\" formControlName=\\\"total\\\">\\n        <mat-error *ngIf=\\\"saleInvoiceForm.controls['total'].hasError('required')\\\">\\n          Total is\\n          <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n    <div  fxLayout=\\\"row\\\"  fxFill fxLayoutAlign=\\\"space-between center\\\">\\n      <mat-form-field>\\n        <input matInput [matDatepicker]=\\\"openedAt\\\"  placeholder=\\\"Opened at\\\" formControlName=\\\"openedAt\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"openedAt\\\">\\n          <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\\n        </mat-datepicker-toggle>\\n        <mat-datepicker #openedAt></mat-datepicker>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput [matDatepicker]=\\\"closedAt\\\"  placeholder=\\\"Closed at\\\" formControlName=\\\"closedAt\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"closedAt\\\">\\n          <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\\n        </mat-datepicker-toggle>\\n        <mat-datepicker #closedAt></mat-datepicker>\\n      </mat-form-field>\\n    </div>\\n  </form>\\n\\n  <div class=\\\"buttons-container\\\" fxLayout=\\\"column\\\">\\n      <div  class=\\\"buttons\\\" *ngIf=\\\"show\\\" fxLayout=\\\"column\\\" >\\n          <div class=\\\"mat-fab-div\\\"  (click)=\\\" show = !show;\\\" fxFlex=\\\"32\\\">\\n              <button form=\\\"ngForm\\\" color=\\\"primary\\\" mat-mini-fab aria-label=\\\"Save\\\" (click)=\\\"saveInvoice()\\\">\\n                <mat-icon>save</mat-icon>\\n              </button>\\n          </div>\\n          <div class=\\\"mat-fab-div\\\" (click)=\\\" show = !show;\\\" fxFlex=\\\"32\\\">\\n            <button mat-mini-fab  aria-label=\\\"Close\\\" (click)=\\\"closeInvoice()\\\">\\n              <mat-icon>close</mat-icon>\\n            </button>\\n          </div>\\n        </div>\\n      <button mat-fab color=\\\"primary\\\" [disabled]=\\\"closed\\\" (click)=\\\" show = !show \\\"><mat-icon aria-label=\\\"Options\\\">more_vert</mat-icon></button>\\n    </div>\\n</div>\\n  <div class=\\\"mcard\\\">\\n    <form   [formGroup]=\\\"searchItemsForm\\\">\\n      <div  formArrayName=\\\"searchItems\\\"     fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\".3%\\\" fxLayoutGap.lt-md=\\\".9%\\\" fxLayoutWrap fxLayoutAlign=\\\"space-between center\\\">\\n        <mat-card    style=\\\"margin-bottom: 1em;\\\" fxFill fxFlex=\\\"49.5%\\\" fxFlex.lt-md=\\\"99.5%\\\" \\n        *ngFor=\\\"let searchItem of searchItems$ | async as searchItems; let i = index\\\"\\n        [formGroupName]=\\\"i\\\" class=\\\"card\\\">\\n            <mat-card-header fxLayout=\\\"row\\\">\\n                <div  fxLayout=\\\"row\\\" fxFlex=\\\"70\\\">\\n                    <div mat-card-avatar [ngStyle]=\\\"{'background-image':'url(/backend/api/storages/images/download/'+searchItem.image+')'}\\\" style=\\\"background-size: cover;\\\"></div>\\n                    <div fxLayout=\\\"column\\\"> \\n                        <mat-card-title>{{searchItem.name}} </mat-card-title>\\n                        <mat-card-subtitle>{{searchItem.sellingPrice | currency}}&#x24;</mat-card-subtitle>\\n                    </div>\\n                </div>\\n                <div fxLayout=\\\"row\\\" fxFlex fxLayoutAlign=\\\"end center\\\">\\n\\n                    <input hidden matInput formControlName=\\\"quantity\\\">\\n                    <input hidden matInput formControlName=\\\"itemId\\\">\\n                    <input hidden matInput formControlName=\\\"salesInvoiceId\\\">\\n                    <div  fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\" [ngSwitch]=\\\"searchItemsForm.get('searchItems').controls[i].value.quantity\\\">\\n                        <ng-template ngSwitchCase=\\\"0\\\">\\n                            <button disabled mat-icon-button (click)=\\\"changeQuantity(searchItemsForm.get('searchItems').controls[i].value, i,false)\\\"><mat-icon aria-label=\\\"Add one\\\">chevron_left</mat-icon></button>\\n                            <button  mat-mini-fab color=\\\"accent\\\"  [matBadge]=\\\"searchItemsForm.get('searchItems').controls[i].value.quantity\\\" matBadgePosition=\\\"after\\\" matBadgeColor=\\\"primary\\\" (click)=\\\"clearSearch(searchItemsForm.get('searchItems').controls[i].value, i)\\\">Clear</button>\\n                            <button disabled mat-icon-button (click)=\\\"changeQuantity(searchItemsForm.get('searchItems').controls[i].value, i, true)\\\"><mat-icon aria-label=\\\"Delete one\\\">chevron_right</mat-icon></button>\\n                        </ng-template>\\n                        <ng-template ngSwitchDefault>\\n                            <button mat-icon-button (click)=\\\"changeQuantity(searchItemsForm.get('searchItems').controls[i].value, i,false)\\\"><mat-icon aria-label=\\\"Add one\\\">chevron_left</mat-icon></button>\\n                            <button mat-mini-fab color=\\\"primary\\\"  [matBadge]=\\\"searchItemsForm.get('searchItems').controls[i].value.quantity\\\" matBadgePosition=\\\"after\\\" matBadgeColor=\\\"accent\\\" (click)=\\\"addItem(searchItemsForm.get('searchItems').controls[i].value, i)\\\">Add</button>\\n                            <button mat-icon-button (click)=\\\"changeQuantity(searchItemsForm.get('searchItems').controls[i].value, i, true)\\\"><mat-icon aria-label=\\\"Delete one\\\">chevron_right</mat-icon></button>                         \\n                        </ng-template>\\n                    </div>\\n\\n                </div>\\n            </mat-card-header>\\n        </mat-card>\\n\\n      </div>\\n  </form>\\n    <form *ngIf=\\\"items$ | async as items\\\" [formGroup]=\\\"itemsForm\\\">\\n      <div  formArrayName=\\\"items\\\"   fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\".3%\\\" fxLayoutGap.lt-md=\\\".9%\\\" fxLayoutWrap fxLayoutAlign=\\\"space-between center\\\">\\n        <mat-card class=\\\"card\\\"  style=\\\"margin-bottom: 1em;\\\" fxFill fxFlex=\\\"49.5%\\\" fxFlex.lt-md=\\\"99.5%\\\"  \\n        *ngFor=\\\"let itemCtrl of itemsForm.get('items').controls; let i = index\\\"\\n        [formGroupName]=\\\"i\\\">\\n            <mat-card-header fxLayout=\\\"row\\\">\\n                    <div mat-card-avatar [ngStyle]=\\\"{'background-image':'url(/backend/api/storages/images/download/'+items[i].item.image+')'}\\\" style=\\\"background-size: cover;\\\"></div>\\n                        <mat-card-title>{{items[i].item.name}} </mat-card-title>\\n                        <mat-card-subtitle>State: {{items[i].state}} <br> Quantity: {{items[i].quantity}} <br> Total: {{items[i].sellingPrice * items[i].quantity | currency}}</mat-card-subtitle>\\n                    \\n            </mat-card-header>\\n        </mat-card>\\n      </div>\\n  </form>\\n  </div>\\n\\n\\n\\n\"","import { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators, FormArray} from '@angular/forms';\nimport { WaiterService } from './../waiter.service';\nimport { WaiterStatService } from './../stat.service';\nimport { SafePipe } from './../../../safe.pipe';\nimport {MatSnackBar} from '@angular/material';\nimport {WaiterSaleSnackbarComponent} from './sale-snackbar/sale-snackbar.component';\nimport { SearchService } from './../../../shared/dashboard/search.service';\nimport { SaleInvoice } from './../../../model/SaleInvoice';\n\n\nimport {\n  Subject,\n  BehaviorSubject,\n  Subscription\n} from 'rxjs';\n@Component({\n  selector: 'app-waiter-sale-edit',\n  templateUrl: './waiter-sale-edit.component.html',\n  styleUrls: ['./waiter-sale-edit.component.css']\n})\nexport class WaiterSaleEditComponent implements OnInit, OnDestroy {\n\n  @ViewChild('invoiceForm') invoiceForm: ElementRef;\n  public id: string;\n  public editMode = false;\n  public saleInvoiceForm: FormGroup;\n  public itemsForm:  FormGroup;\n  public itemsArray: FormArray;\n  public searchItemsForm:  FormGroup;\n  public searchItemsArray: FormArray;\n  public searchInputSubscription;\n  public searchInput = new Subject<string>();\n  public fullText;\n  public closed = false;\n  private _SaleInvoice: Subscription;\n  public SaleInvoice: BehaviorSubject<SaleInvoice> = new BehaviorSubject<SaleInvoice>(\n    {\n      id: null,\n      visitorId: 'New visitor',\n      openedAt: new Date(),\n      closedAt: null,\n      state: 'opened',\n      total: 0\n    }\n  );\n  public SaleInvoice$ = this.SaleInvoice.asObservable();\n\n  private _items: Subscription;\n  public items: BehaviorSubject<any> = new BehaviorSubject<any>([]);\n  public items$ = this.items.asObservable();\n\n  private _searchItems: Subscription;\n  public searchItems: BehaviorSubject<any> = new BehaviorSubject<any>([]);\n  public searchItems$ = this.searchItems.asObservable();\n\n  constructor(\n    private route: ActivatedRoute,\n    private waiterService: WaiterService,\n    private router: Router,\n    private safePipe: SafePipe,\n    public snackBar: MatSnackBar,\n    private searchService: SearchService,\n    private statService: WaiterStatService\n    ) { }\n\n  ngOnInit() {\n    this.route.params\n    .subscribe(\n      (params: Params) => {\n        this.id = params.id;\n        this.editMode = params.id != null;\n        if (this.editMode === true) {\n          this.waiterService.getSaleInvoice(this.id).subscribe(saleInvoice => {\n            this.SaleInvoice.next(saleInvoice);\n            this.closed = this.SaleInvoice.value.state === 'closed' ? true : false;\n            if (!this.closed) {\n              this.searchService.confirmSearchPossibility(true);\n              this.searchService.searchRequest$.subscribe(\n               fullText => {\n                 this.fullText = fullText;\n                 this.waiterService.searchMenuItems(this.fullText).subscribe(items => {\n                  this.searchItems.next(items);\n                 });\n               });\n            }\n          });\n          this.waiterService.searchItemsSaleInvoice(this.id).subscribe(items => {\n            this.items.next(items);\n          });\n        } else {\n          this.waiterService.updateSaleInvoice(\n            this.SaleInvoice.value).subscribe(\n            (result: any) => {\n              console.log('', result);\n              this.router.navigate(['/waiter/sale/' + result.id + '/edit']);\n            },\n            error => console.log(error)\n          );\n        }\n      }\n    );\n    this._items = this.items.subscribe(data => {\n\n\n      this.initItemsForm();\n    });\n    this._SaleInvoice = this.SaleInvoice.subscribe(data => {\n        this.initForm();\n      }\n    );\n    this._searchItems = this.searchItems.subscribe(data => {\n      this.initSearchItemsForm();\n    });\n  }\n\n  private saveInvoice() {\n    // this.invoiceForm.nativeElement.submit();\n  }\n\n  private closeInvoice() {\n    this.waiterService.closeSaleInvoice(this.id).subscribe(result => {\n      if (result) {\n        this.searchService.clearSearchInput(true);\n        this.searchService.confirmSearchPossibility(false);\n        this.closed = true;\n        this.SaleInvoice.value.state = 'closed';\n        this.statService.changeCounter('openedInvoices', 'decrement');\n      }\n    });\n  }\n\n  private initForm() {\n    this.saleInvoiceForm = new FormGroup({\n      'visitorId': new FormControl({value: this.SaleInvoice.value.visitorId, disabled: this.closed}),\n      'id': new FormControl({value: this.SaleInvoice.value.id,  disabled: this.closed}, Validators.required),\n      'openedAt': new FormControl({value: this.SaleInvoice.value.openedAt,  disabled: this.closed}, Validators.required),\n      'closedAt': new FormControl({value: this.SaleInvoice.value.closedAt,  disabled: this.closed}),\n      'total': new FormControl({value: this.SaleInvoice.value.total, disabled: true}),\n      'state': new FormControl({value: this.SaleInvoice.value.state,  disabled: this.closed}, Validators.required),\n    });\n  }\n  \n\n\n  addItem(item, index) {\n    this.waiterService.addItemSaleInvoice(item).subscribe(\n      (result: any) => {\n        if (!result.add) {\n          if (result.availablePortions === 0) {\n            this.showSnackbar({message: 'Sorry, you are not allowed to order this dish at the moment.'});\n          }\n          if (this.searchItemsArray.controls[index].value.quantity !== result.availablePortions) {\n            this.showSnackbar({message: 'Sorry, but this dish is currently available in quantities of ' + result.availablePortions + ' servings'});\n          }\n\n          this.searchItemsArray.controls[index].patchValue({'quantity': result.availablePortions});\n        } else {\n          this.waiterService.getSaleInvoice(this.id).subscribe(saleInvoice => {\n            this.waiterService.searchItemsSaleInvoice(this.id).subscribe(items => {\n              this.items.next(items);\n              this.SaleInvoice.next(saleInvoice);\n              this.saleInvoiceForm.controls['total'].patchValue(result.total);\n              this.searchItems.value.splice(index, 1);\n              this.searchItemsArray.removeAt(index);\n              this.searchItemsArray.updateValueAndValidity();\n              this.statService.changeCounter('newOrders');\n            });\n          });\n        }\n      },\n      error => console.log(error)\n    );\n  }\n\n  changeQuantity(itemCtrl, i, add = true) {\n    if (add === true) {\n      this.searchItemsArray.controls[i].patchValue({'quantity': itemCtrl.quantity + 1});\n    } else {\n      if (itemCtrl.quantity === 1) {\n        this.searchItemsArray.controls[i].patchValue({'quantity': itemCtrl.quantity});\n      } else {\n        this.searchItemsArray.controls[i].patchValue({'quantity': itemCtrl.quantity - 1});\n      }\n    }\n  }\n\n  initSearchItemsForm() {\n    this.searchItemsForm = new FormGroup({});\n    this.searchItemsArray = new FormArray([]);\n    this.searchItems.value.forEach((item, key) => {\n      this.searchItemsArray.push(\n        new FormGroup({\n          'itemId': new FormControl(item.id),\n          'salesInvoiceId': new FormControl(this.id),\n          'quantity': new FormControl(1),\n        })\n      );\n    });\n\n    this.searchItemsForm.addControl('searchItems', this.searchItemsArray);\n  }\n\n\n  initItemsForm() {\n    this.itemsForm = new FormGroup({});\n    this.itemsArray = new FormArray([]);\n    this.items.value.forEach((item, key) => {\n      this.itemsArray.push(\n        new FormGroup({\n          'itemId': new FormControl(item.itemId),\n          'salesInvoiceId': new FormControl(item.salesInvoiceId),\n          'quantity': new FormControl(item.quantity),\n          'sellingPrice': new FormControl(item.sellingPrice),\n          'id': new FormControl(item.id),\n        })\n      );\n    });\n\n    this.itemsForm.addControl('items', this.itemsArray);\n  }\n\n  onUpdate() {\n    this.waiterService.updateSaleInvoice(this.saleInvoiceForm.getRawValue()).subscribe(\n      (result: any) => {\n        this.router.navigate(['/waiter/sale/' + result.id + '/edit']);\n      },\n      error => console.log(error)\n    );\n  }\n\n  clearSearch(item, i) {\n    this.searchService.clearSearchInput(true);\n    // this.searchItems.value.splice(i, 1);\n  }\n\n  onUpdateItem(item, index: number) {\n    this.waiterService.updateSaleInvoiceItem(item).subscribe(\n      (result: any) => {\n        this.saleInvoiceForm.controls['total'].patchValue(result.total);\n      },\n      error => console.log(error)\n    );\n  }\n\n  showSnackbar(item: object) {\n    this.openSnackBar(item);\n  }\n\n  openSnackBar(item: object) {\n    this.snackBar.openFromComponent(WaiterSaleSnackbarComponent, {\n      data: item,\n      duration: 5000,\n    });\n\n  }\n\n  ngOnDestroy() {\n    this.searchService.clearSearchInput(true);\n    this.searchService.confirmSearchPossibility(false);\n    this._items.unsubscribe();\n    this._searchItems.unsubscribe();\n    this._SaleInvoice.unsubscribe();\n  }\n}\n","import { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { Observable, BehaviorSubject, of } from 'rxjs';\nimport { SaleInvoice } from './../../../model/SaleInvoice';\nimport { WaiterService } from './../waiter.service';\nimport { catchError, finalize } from 'rxjs/operators';\n\n\n\nexport class SaleInvoiceDatasource implements DataSource<SaleInvoice> {\n\n\n  private saleInvoiceSubject = new BehaviorSubject<SaleInvoice[]>([]);\n\n  private loadingSubject = new BehaviorSubject<boolean>(false);\n\n  public revenue: BehaviorSubject<string> = new BehaviorSubject<string>('0');\n  public revenue$ = this.revenue.asObservable();\n  public grossProfit: BehaviorSubject<string>  = new BehaviorSubject<string>('0');\n  public grossProfit$ = this.grossProfit.asObservable();\n  public netProfit: BehaviorSubject<string>  = new BehaviorSubject<string>('0');\n  public netProfit$ = this.netProfit.asObservable();\n\n  public loading$ = this.loadingSubject.asObservable();\n\n  public paginator;\n\n  constructor(private waiterService: WaiterService) {\n\n  }\n\n  loadSaleInvoices(\n    filter: string | Boolean = false,\n    sortDirection: string,\n    pageIndex: number,\n    pageSize: number,\n    openedDateBegin = null,\n    openedDateEnd = null,\n    closedDateBegin = null,\n    closedDateEnd = null) {\n\n    this.loadingSubject.next(true);\n\n    this.waiterService.findSaleInvoices(filter, sortDirection,\n      pageIndex, pageSize, openedDateBegin, openedDateEnd, closedDateBegin, closedDateEnd).pipe(\n        catchError(() => of([])),\n        finalize(() => this.loadingSubject.next(false))\n      )\n      .subscribe((saleInvoices: any) => {\n        this.saleInvoiceSubject.next(saleInvoices.body.result);\n        this.paginator.length = saleInvoices.headers.get('Content-Range').split('/')[1];\n      });\n\n  }\n\n  connect(collectionViewer: CollectionViewer): Observable<SaleInvoice[]> {\n    return this.saleInvoiceSubject.asObservable();\n  }\n\n  disconnect(collectionViewer: CollectionViewer): void {\n    console.log('disconnect');\n    this.saleInvoiceSubject.complete();\n    this.loadingSubject.complete();\n  }\n\n}\n","module.exports = \".mcard{\\n  background-color: white;\\n  padding: 5px;\\n  margin-left: 5px;\\n  margin-right: 5px;\\n  margin-top: 5px;\\n  box-shadow: 0px 2px 6px 0px rgba(0,0,0,.12);\\n}\\n\\n\\n.no-line {\\n  width: 200px;\\n}\"","module.exports = \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"dataSource.loading$ | async\\\"></mat-progress-bar>\\n<div fxLayout=\\\"column\\\" class=\\\"mcard\\\" >\\n  <div fxLayout=\\\"column\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort matSortDisableClear=true>\\n\\n      <ng-container matColumnDef=\\\"state\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>State</th>\\n\\n          <td mat-cell *matCellDef=\\\"let saleInvoice\\\"> \\n            <span [ngSwitch]=\\\"saleInvoice.state\\\">\\n              <button matTooltip=\\\"Opened\\\" *ngSwitchCase=\\\"'opened'\\\" mat-icon-button>\\n                <mat-icon routerLink=\\\"/waiter/sale/{{saleInvoice.id}}/edit\\\" >update</mat-icon>\\n              </button>\\n              <button matTooltip=\\\"Closed\\\" *ngSwitchCase=\\\"'closed'\\\" mat-icon-button>\\n                  <mat-icon routerLink=\\\"/waiter/sale/{{saleInvoice.id}}/edit\\\" >check_circle_outline</mat-icon>\\n              </button>\\n            </span>\\n            </td>\\n        </ng-container>\\n\\n      <ng-container matColumnDef=\\\"openedAt\\\">\\n        <th mat-header-cell *matHeaderCellDef> \\n          <div>\\n              <mat-form-field class=\\\"no-line\\\">\\n                  <input matInput\\n                        [formControl]=\\\"openedDateForm\\\"\\n                         placeholder=\\\"Opened\\\"\\n                         [satDatepicker]=\\\"openedDate\\\"\\n                         (dateInput)=\\\"updateOpenedDate('input', $event)\\\" \\n                         (dateChange)=\\\"updateOpenedDate('change', $event)\\\"\\n                         >\\n                  <sat-datepicker #openedDate [rangeMode]=\\\"true\\\" [closeAfterSelection]=\\\"true\\\">\\n                  </sat-datepicker>\\n                  <sat-datepicker-toggle matSuffix [for]=\\\"openedDate\\\"></sat-datepicker-toggle>\\n                  <button matTooltip=\\\"Current date\\\"  mat-button matSuffix mat-icon-button aria-label=\\\"Current date\\\" (click)=\\\"openedCurrent()\\\">\\n                      <mat-icon>access_time</mat-icon>\\n                    </button>\\n                    <button matTooltip=\\\"Date time show\\\"  mat-button matSuffix mat-icon-button aria-label=\\\"Date time show\\\" (click)=\\\"openedDateTimeToggle()\\\">\\n                      <mat-icon>alarm</mat-icon>\\n                    </button>\\n                    <button matTooltip=\\\"Reset\\\" mat-button matSuffix mat-icon-button aria-label=\\\"Reset\\\" (click)=\\\"openedReset()\\\">\\n                        <mat-icon>close</mat-icon>\\n                    </button>   \\n                </mat-form-field>\\n            </div>\\n        </th>\\n        <td mat-cell *matCellDef=\\\"let saleInvoice\\\"> {{openedDateFormat === 'shortTime' ? (saleInvoice.openedAt | date: 'shortTime') : (saleInvoice.openedAt | date: 'mediumDate')}} </td>\\n        <td mat-footer-cell *matFooterCellDef></td>\\n      </ng-container>\\n    \\n      <ng-container matColumnDef=\\\"closedAt\\\">\\n        <th mat-header-cell *matHeaderCellDef>\\n          <mat-form-field class=\\\"no-line\\\">\\n              <input matInput\\n              [formControl]=\\\"closedDateForm\\\"\\n               placeholder=\\\"Closed\\\"\\n               [satDatepicker]=\\\"closedDate\\\"\\n               (dateInput)=\\\"updateClosedDate('input', $event)\\\" \\n               (dateChange)=\\\"updateClosedDate('change', $event)\\\"\\n               >\\n              <sat-datepicker #closedDate [rangeMode]=\\\"true\\\" [closeAfterSelection]=\\\"true\\\">\\n              </sat-datepicker>\\n              <sat-datepicker-toggle matSuffix [for]=\\\"closedDate\\\"></sat-datepicker-toggle>\\n              <button matTooltip=\\\"Current date\\\"  mat-button matSuffix mat-icon-button aria-label=\\\"Current date\\\" (click)=\\\"closedCurrent()\\\">\\n                <mat-icon>access_time</mat-icon>\\n              </button>\\n              <button matTooltip=\\\"Date time show\\\"  mat-button matSuffix mat-icon-button aria-label=\\\"Date time show\\\" (click)=\\\"closedDateTimeToggle()\\\">\\n                <mat-icon>alarm</mat-icon>\\n              </button>\\n              <button matTooltip=\\\"Reset\\\" mat-button matSuffix mat-icon-button aria-label=\\\"Reset\\\" (click)=\\\"closedReset()\\\">\\n                  <mat-icon>close</mat-icon>\\n              </button>\\n            </mat-form-field>\\n        </th>\\n        <td mat-cell *matCellDef=\\\"let saleInvoice\\\"> {{closedDateFormat === 'shortTime' ? (saleInvoice.closedAt | date: 'shortTime') : (saleInvoice.closedAt | date: 'mediumDate')}} </td>\\n        <td mat-footer-cell *matFooterCellDef></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"total\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Total </th>\\n        <td mat-cell *matCellDef=\\\"let saleInvoice\\\"> {{saleInvoice.total | currency}} </td>\\n      </ng-container>\\n\\n\\n    \\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns;  sticky: true\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [length]=\\\"2000\\\" [pageSize]=\\\"50\\\" [pageSizeOptions]=\\\"[10, 50, 100]\\\"></mat-paginator>\\n  </div>\\n</div>\\n<div style=\\\"position: fixed; bottom: 10px; right: 10px;\\\">\\n  <a  routerLink=\\\"/waiter/sale/new\\\" mat-fab color=\\\"primary\\\"><mat-icon aria-label=\\\"Add\\\">add</mat-icon></a>  \\n</div>\"","import { Component, OnInit, AfterViewInit, ElementRef, ViewChild, OnDestroy} from '@angular/core';\nimport { WaiterService } from './../waiter.service';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { SaleInvoice } from './../../../model/SaleInvoice';\nimport { tap } from 'rxjs/operators';\nimport { merge, Subscription, Observable } from 'rxjs';\nimport { SaleInvoiceDatasource } from './sale.invoice.datasource';\nimport {MatDatepickerInputEvent} from '@angular/material/datepicker';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { FormControl } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-waiter-sale-list',\n  templateUrl: './waiter-sale-list.component.html',\n  styleUrls: ['./waiter-sale-list.component.css']\n})\nexport class WaiterSaleListComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  private _routes: Subscription;\n  private saleInvoice: SaleInvoice;\n  private filter: string | Boolean = false;\n  private dataSource: SaleInvoiceDatasource;\n\n  public revenue$: Observable<string> = null;\n  public grossProfit$: Observable<string> = null;\n  public netProfit$: Observable<string> = null;\n\n  displayedColumns = [\n    // 'id',\n    'state',\n    'openedAt',\n    'closedAt',\n    'total'\n  ];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  @ViewChild(MatSort) sort: MatSort;\n\n  @ViewChild('input') input: ElementRef;\n  openedDateForm = new FormControl();\n  closedDateForm = new FormControl();\n  openedDate = null;\n  closedDate = null;\n  openedDateBegin = null;\n  closedDateBegin = null;\n  openedDateEnd = null;\n  closedDateEnd = null;\n  closedDateFormat = 'shortTime';\n  openedDateFormat = 'shortTime';\n  constructor(private waiterService: WaiterService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.openedDateFormat = localStorage.getItem('startDateFormat') !== null ?\n      localStorage.getItem('startDateFormat') : this.openedDateFormat;\n    this.closedDateFormat = localStorage.getItem('endDateFormat') !== null ?\n      localStorage.getItem('endDateFormat') : this.closedDateFormat;\n\n      if (localStorage.getItem('openedDateBegin') !== null) {\n        this.openedDateBegin = new Date(localStorage.getItem('openedDateBegin'));\n        this.openedDate = {\n          begin: new Date(localStorage.getItem('openedDateBegin')),\n          end: new Date(localStorage.getItem('openedDateEnd'))\n        };\n      }\n\n      if (localStorage.getItem('openedDateEnd') !== null) {\n        this.openedDateEnd = new Date(localStorage.getItem('openedDateEnd'));\n      }\n\n      if (localStorage.getItem('closedDateBegin') !== null) {\n        this.closedDateBegin = new Date(localStorage.getItem('closedDateBegin'));\n        this.closedDate = {\n          begin: new Date(localStorage.getItem('closedDateBegin')),\n          end: new Date(localStorage.getItem('closedDateEnd'))\n        };\n      }\n\n      if (localStorage.getItem('closedDateEnd') !== null) {\n        this.closedDateEnd = new Date(localStorage.getItem('closedDateEnd'));\n      }\n\n    this.openedDateForm = new FormControl({value: this.openedDate, disabled: false});\n    this.closedDateForm = new FormControl({value: this.closedDate, disabled: false});\n\n    this._routes = this.route.params\n    .subscribe(\n      (params: Params) => {\n        this.filter = params.filter;\n        this.dataSource = new SaleInvoiceDatasource(this.waiterService);\n        this.revenue$ = this.dataSource.revenue$;\n        this.grossProfit$ = this.dataSource.grossProfit$;\n        this.netProfit$ = this.dataSource.netProfit$;\n\n        console.log('', this.filter);\n        this.dataSource.loadSaleInvoices(\n          this.filter,\n          'openedAt ASC',\n          0,\n          25,\n          this.openedDateBegin,\n          this.openedDateEnd,\n          this.closedDateBegin,\n          this.closedDateEnd);\n      }\n    );\n  }\n\n\n  ngOnDestroy() {\n    this._routes.unsubscribe();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n\n    merge(this.sort.sortChange, this.paginator.page)\n      .pipe(\n        tap(() => this.loadSaleInvoicesPage())\n      )\n      .subscribe();\n\n  }\n\n  updateOpenedDate(type: string, event: MatDatepickerInputEvent<any>) {\n    localStorage.setItem('openedDateBegin', event.value.begin);\n    localStorage.setItem('openedDateEnd', event.value.end);\n    this.openedDateBegin = event.value.begin;\n    this.openedDateEnd = event.value.end;\n\n\n    this.loadSaleInvoicesPage();\n  }\n\n  updateClosedDate(type: string, event: MatDatepickerInputEvent<any>) {\n    localStorage.setItem('closedDateBegin', event.value.begin);\n    localStorage.setItem('closedDateEnd', event.value.end);\n    this.closedDateBegin = event.value.begin;\n    this.closedDateEnd = event.value.end;\n    this.loadSaleInvoicesPage();\n  }\n\n  openedCurrent() {\n    const beginDate = new Date();\n    beginDate.setHours(0, 0, 0, 0);\n    const endDate = new Date();\n    endDate.setHours(23, 59, 59, 999);\n    this.openedDateForm.setValue({begin: beginDate, end: endDate});\n    localStorage.setItem('openedDateBegin', beginDate.toString());\n    localStorage.setItem('openedDateEnd', endDate.toString());\n    this.openedDateBegin = beginDate;\n    this.openedDateEnd = endDate;\n    this.loadSaleInvoicesPage();\n  }\n\n  openedDateTimeToggle() {\n    this.openedDateFormat = this.openedDateFormat === 'shortTime' ? 'mediumDate' : 'shortTime';\n    localStorage.setItem('openedDateFormat' , this.openedDateFormat);\n  }\n\n  openedReset() {\n    this.openedDateForm.setValue('');\n    localStorage.removeItem('openedDateBegin');\n    localStorage.removeItem('openedDateEnd');\n    this.openedDateBegin = null;\n    this.openedDateEnd = null;\n    this.loadSaleInvoicesPage();\n  }\n\n  closedCurrent() {\n    const beginDate = new Date();\n    beginDate.setHours(0, 0, 0, 0);\n    const endDate = new Date();\n    endDate.setHours(23, 59, 59, 999);\n    this.closedDateForm.setValue({begin: beginDate, end: endDate});\n    localStorage.setItem('closedDateBegin', beginDate.toString());\n    localStorage.setItem('closedDateEnd', endDate.toString());\n    this.closedDateBegin = beginDate;\n    this.closedDateEnd = endDate;\n    this.loadSaleInvoicesPage();\n  }\n\n  closedDateTimeToggle() {\n    this.closedDateFormat = this.closedDateFormat === 'shortTime' ? 'mediumDate' : 'shortTime';\n    localStorage.setItem('endDateFormat' , this.closedDateFormat);\n  }\n\n  closedReset() {\n    this.closedDateForm.setValue('');\n    localStorage.removeItem('closedDateBegin');\n    localStorage.removeItem('closedDateEnd');\n    this.closedDateBegin = null;\n    this.closedDateEnd = null;\n    this.loadSaleInvoicesPage();\n  }\n\n  loadSaleInvoicesPage() {\n\n    const sort = this.sort.active === undefined ? 'id ASC' : this.sort.active + ' ' + this.sort.direction.toUpperCase();\n\n    this.dataSource.loadSaleInvoices(\n        this.filter,\n        sort,\n        this.paginator.pageIndex,\n        this.paginator.pageSize,\n        this.openedDateBegin,\n        this.openedDateEnd,\n        this.closedDateBegin,\n        this.closedDateEnd,\n      );\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { WaiterRoutingModule } from './waiter-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SatDatepickerModule, SatNativeDateModule } from 'saturn-datepicker';\n\n\n\nimport {\n  MatCardModule,\n  MatToolbarModule,\n  MatInputModule,\n  MatButtonModule,\n  MatIconModule,\n  MatSidenavModule,\n  MatListModule,\n  MatMenuModule,\n  MatExpansionModule,\n  MatTableModule,\n  MatPaginatorModule,\n  MatSortModule,\n  MatProgressSpinnerModule,\n  MatProgressBarModule,\n  MatOptionModule,\n  MatSelectModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatRadioModule,\n  MatAutocompleteModule,\n  MatSnackBarModule,\n  MatDialogModule,\n  MatBadgeModule,\n  MatTooltipModule,\n  MAT_SNACK_BAR_DEFAULT_OPTIONS\n} from '@angular/material';\n\nimport { WaiterSaleSnackbarComponent } from './waiter-sale-edit/sale-snackbar/sale-snackbar.component';\nimport { WaiterOrderListComponent } from './waiter-order-list/waiter-order-list.component';\nimport { WaiterSaleListComponent } from './waiter-sale-list/waiter-sale-list.component';\nimport { WaiterSaleEditComponent } from './waiter-sale-edit/waiter-sale-edit.component';\nimport { StubSharedModule } from './../../shared/stub/stub.shared.module';\nimport { DashboardSharedModule } from './../../shared/dashboard/dashboard.shared.module';\nimport { NotFoundSharedModule } from './../../shared/not-found/not-found.shared.module';\n\n\n@NgModule({\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    WaiterRoutingModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatListModule,\n    MatMenuModule,\n    MatExpansionModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    FlexLayoutModule,\n    MatRadioModule,\n    MatAutocompleteModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    DashboardSharedModule,\n    StubSharedModule,\n    NotFoundSharedModule,\n    SatDatepickerModule,\n    SatNativeDateModule\n  ],\n  declarations: [\n    WaiterOrderListComponent,\n    WaiterSaleListComponent,\n    WaiterSaleEditComponent,\n    WaiterSaleSnackbarComponent,\n\n  ],\n  entryComponents: [ WaiterSaleSnackbarComponent ],\n  providers: [\n    {provide: MAT_SNACK_BAR_DEFAULT_OPTIONS, useValue: {duration: 100000}}\n  ],\n})\nexport class WaiterModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\n\nimport { environment } from '../../../environments/environment';\nimport { Item } from './../../model/Item';\nimport { Order } from './../../model/Order';\nimport { SaleInvoice } from './../../model/SaleInvoice';\n\nimport {\n  map,\n  switchMap,\n} from 'rxjs/operators';\nimport {\n  BehaviorSubject,\n  Observable,\n  timer\n} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WaiterService {\n  public apiUrl = environment.apiUrl;\n  public items: BehaviorSubject<Item[]>  = new BehaviorSubject<Item[]>(null);\n  public items$: Observable<Item[]> = this.items.asObservable();\n\n\n  constructor(private http: HttpClient) { }\n\n  public getItems(filter: string | Boolean = false, fullText: string | Boolean = false) {\n    if (!filter) {\n      this.listItems(fullText);\n    } else if (filter === 'stoplist') {\n      this.listStopList(fullText);\n    }\n  }\n\n  public listItems(fullText: string | Boolean = false) {\n    return this.http.get<Item[]>(this.apiUrl  + 'api/Items/listItems', {\n      params: new HttpParams()\n        .set('fullText', fullText.toString())\n    }).subscribe(\n      data => this.items.next(data)\n    );\n  }\n\n  public listStopList(fullText: string | Boolean = false) {\n    return this.http.get<Item[]>(this.apiUrl  + 'api/Items/listStopList', {\n      params: new HttpParams()\n        .set('fullText', fullText.toString())\n    }).subscribe(\n      data => this.items.next(data)\n    );\n  }\n\n  public serveOrder(id, index) {\n    return this.http.get(this.apiUrl  + 'api/relSalesInvoiceItems/serveOrder?id=' + id\n    ).pipe(\n      map(() => {\n        return 'served';\n      })\n    );\n  }\n\n  public getOrders(filter: string | Boolean = false) {\n    return this.http.get<Order[]>(this.apiUrl  + 'api/relSalesInvoiceItems/listOrders', {\n      params: new HttpParams()\n        .set('filter', filter.toString())\n    }).pipe(\n      map(data => {\n        return(data);\n      })\n    );\n  }\n\n  public findSaleInvoices(\n    filter: string | Boolean = false,\n    order = 'openedAt ASC',\n    pageNumber = 0,\n    pageSize = 1,\n    openedDateBegin = null,\n    openedDateEnd = null,\n    closedDateBegin = null,\n    closedDateEnd = null,\n    ) {\n    let offset = 0;\n    if (pageNumber === 0) {\n      offset = 0;\n    } else {\n      offset = pageSize * pageNumber + 1;\n    }\n\n    const openedFilter = openedDateBegin === null ? {} : {\n      'openedAt': {\n        between: [openedDateBegin, openedDateEnd]\n      }\n    };\n\n    const closedFilter = closedDateBegin === null ? {} : {\n      'closedAt': {\n        between: [closedDateBegin, closedDateEnd]\n      }\n    };\n\n    const stateFilter = !filter ? {} : {state: filter};\n\n    const requestFilter = {\n      limit: pageSize.toString(),\n      order: order,\n      skip: offset.toString(),\n      where: {\n        and: [\n          openedFilter,\n          closedFilter,\n          stateFilter\n        ]\n      }\n    };\n\n    const params = new HttpParams()\n    .set('filter', JSON.stringify(requestFilter));\n\n    return this.http.get(this.apiUrl  + 'api/SalesInvoices',\n    {\n      observe: 'response',\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Prefer': 'count=exact'\n      }),\n      params: params\n    }).pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public searchMenuItems(fullText): Observable<Item[]> {\n    return this.http.get<Item[]>(this.apiUrl  + 'api/Items/searchMenuItems?fullText=' + fullText.toString()).pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public getSaleInvoice(id: string): Observable<SaleInvoice>  {\n    return this.http.get<SaleInvoice>(this.apiUrl  + 'api/SalesInvoices/' + id.toString()).pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public searchItemsSaleInvoice(id: string, fulltext = '') {\n    return this.http.get(this.apiUrl  + 'api/relSalesInvoiceItems/searchItemsSalesInvoice?salesInvoiceId=' + id.toString() + '&fullText=' + fulltext).pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public updateSaleInvoiceItem(item) {\n    return this.http.post(this.apiUrl  + 'api/relSalesInvoiceItems/updateSalesInvoiceItem', {item: item}).pipe(\n      map(data => {\n        console.log(data);\n        return data;\n      })\n    );\n  }\n\n  public updateSaleInvoice(SaleInvoice) {\n    console.log(SaleInvoice);\n    return this.http.post(this.apiUrl  + 'api/SalesInvoices/replaceOrCreate',  SaleInvoice).pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public addItemSaleInvoice(item) {\n    return this.http.post(this.apiUrl  + 'api/relSalesInvoiceItems/addItemSaleInvoice', {item: item}).pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public closeSaleInvoice(id) {\n    return this.http.get(this.apiUrl  + 'api/SalesInvoices/closeSaleInvoice?salesInvoiceId=' + id.toString()).pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n}\n"],"sourceRoot":""}