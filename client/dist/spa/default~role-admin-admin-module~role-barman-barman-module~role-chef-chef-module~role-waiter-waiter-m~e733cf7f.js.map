{"version":3,"sources":["webpack:///./src/app/role/admin/stat.service.ts","webpack:///./src/app/role/barman/stat.service.ts","webpack:///./src/app/role/chef/stat.service.ts","webpack:///./src/app/role/waiter/stat.service.ts","webpack:///./src/app/shared/dashboard/dashboard.component.css","webpack:///./src/app/shared/dashboard/dashboard.component.html","webpack:///./src/app/shared/dashboard/dashboard.component.ts","webpack:///./src/app/shared/dashboard/dashboard.shared.module.ts","webpack:///./src/app/shared/dashboard/search.service.ts","webpack:///./src/app/shared/stub/stub.component.css","webpack:///./src/app/shared/stub/stub.component.html","webpack:///./src/app/shared/stub/stub.component.ts","webpack:///./src/app/shared/stub/stub.shared.module.ts"],"names":[],"mappings":"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","file":"default~role-admin-admin-module~role-barman-barman-module~role-chef-chef-module~role-waiter-waiter-m~e733cf7f.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminStatService {\n  public apiUrl = environment.apiUrl;\n  public counterChange = new Subject<Object>();\n  public counterChange$ = this.counterChange.asObservable();\n  changeCounter(counterName: string, operation: string = 'increment') {\n    this.counterChange.next({name: counterName, operation: operation});\n  }\n\n  public fetchNewOrders(): Observable<number> {\n    return this.http.get<number>(this.apiUrl  + 'api/relSalesInvoiceItems/countNew').pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public fetchProgressOrders(): Observable<number> {\n    return this.http.get<number>(this.apiUrl  + 'api/relSalesInvoiceItems/countProgress').pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public fetchReadyOrders(): Observable<number> {\n    return this.http.get<number>(this.apiUrl  + 'api/relSalesInvoiceItems/countReady').pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public fetchStopList(): Observable<number> {\n    return this.http.get<number>(this.apiUrl  + 'api/Items/countStopList').pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public fetchOpenedBills(): Observable<number> {\n    return this.http.get<number>(this.apiUrl  + 'api/SalesInvoices/countOpenedInvoices').pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public fetchShoppingList(): Observable<number> {\n    return this.http.get<number>(this.apiUrl  + 'api/Items/countShoppingList').pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  constructor(private http: HttpClient) { }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BarmanStatService {\n  public apiUrl = environment.apiUrl;\n  public counterChange = new Subject<Object>();\n  public counterChange$ = this.counterChange.asObservable();\n  changeCounter(counterName: string, operation: string = 'increment') {\n    this.counterChange.next({name: counterName, operation: operation});\n  }\n\n  public fetchNewOrders(): Observable<number>  {\n    return this.http.get<number>(this.apiUrl  + 'api/relSalesInvoiceItems/countNew').pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public fetchProgressOrders(): Observable<number>  {\n    return this.http.get<number>(this.apiUrl  + 'api/relSalesInvoiceItems/countProgress').pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public fetchReadyOrders(): Observable<number>  {\n    return this.http.get<number>(this.apiUrl  + 'api/relSalesInvoiceItems/countReady').pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n\n  constructor(private http: HttpClient) { }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChefStatService {\n\n  public counterChange = new Subject<Object>();\n  public counterChange$ = this.counterChange.asObservable();\n  changeCounter(counterName: string, operation: string = 'increment') {\n    this.counterChange.next({name: counterName, operation: operation});\n  }\n\n  public fetchNewOrders(): Observable<number> {\n    return this.http.get<number>('http://localhost:3000/api/relSalesInvoiceItems/countNew').pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public fetchProgressOrders(): Observable<number> {\n    return this.http.get<number>('http://localhost:3000/api/relSalesInvoiceItems/countProgress').pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public fetchReadyOrders(): Observable<number> {\n    return this.http.get<number>('http://localhost:3000/api/relSalesInvoiceItems/countReady').pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n\n  constructor(private http: HttpClient) { }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class WaiterStatService {\n  public apiUrl = environment.apiUrl;\n  public counterChange = new Subject<Object>();\n  public counterChange$ = this.counterChange.asObservable();\n  changeCounter(counterName: string, operation: string = 'increment') {\n    this.counterChange.next({name: counterName, operation: operation});\n  }\n\n  public fetchOpenedBills(): Observable<number> {\n    return this.http.get<number>(this.apiUrl  + 'api/SalesInvoices/countOpenedInvoices').pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public fetchNewOrders(): Observable<number> {\n    return this.http.get<number>(this.apiUrl  + 'api/relSalesInvoiceItems/countNew').pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public fetchProgressOrders(): Observable<number> {\n    return this.http.get<number>(this.apiUrl  + 'api/relSalesInvoiceItems/countProgress').pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n  public fetchReadyOrders(): Observable<number> {\n    return this.http.get<number>(this.apiUrl  + 'api/relSalesInvoiceItems/countReady').pipe(\n      map(data => {\n        return data;\n      })\n    );\n  }\n\n\n  constructor(private http: HttpClient) { }\n\n}\n","module.exports = \".example-card {\\n    max-width: 200px;\\n  }\\n  \\n  .example-header-image {\\n    background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\\n    background-size: cover;\\n  }\\n  \\n  .mat-toolbar {\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    z-index: 2;\\n    box-shadow: 0px 2px 6px 0px rgba(0,0,0,.12);\\n}\\n  \\n  .mat-expansion-panel:not([class*=mat-elevation-z]) {\\n  box-shadow: 0px 2px 6px 0px rgba(0,0,0,.12);\\n}\\n  \\n  .mat-card:not([class*=mat-elevation-z]) {\\n  box-shadow: 0px 2px 6px 0px rgba(0,0,0,.12);\\n}\\n  \\n  .mat-toolbar.mat-primary {\\n  background: #ffffff;\\n  color: rgba(0,0,0,.54);\\n}\\n  \\n  .activities {\\n  position: fixed;\\n}\\n  \\n  .mat-form-field-infix {\\n  width: 400px;\\n}\\n  \\n  .suffix {\\n  display: block;\\n  position: relative;\\n  top: 10px;\\n}\\n  \\n  .mat-menu-panel {\\n  min-width: 50px;\\n  overflow: auto;\\n  -webkit-overflow-scrolling: touch;\\n  max-height: calc(100vh - 48px);\\n  /* border-radius: 2px; */\\n  outline: 0;\\n  background: rgba(255, 255, 255, 0);\\n  position: relative;\\n  bottom: 1px;\\n  left: 7px;\\n  box-shadow: none;\\n}\"","module.exports = \"<div fxLayout=\\\"row\\\" style=\\\"min-width: 100%; min-height: 100vh\\\">\\n  <mat-toolbar fxLayout=\\\"row\\\" color=\\\"primary\\\" class=\\\"mat-toolbar\\\">\\n    <button fxFlex=\\\"5\\\" mat-icon-button (click)=\\\"snav.toggle()\\\">\\n      <mat-icon>menu</mat-icon>\\n    </button>\\n    <div fxFlex=\\\"13\\\" >\\n      <h1>Bot.legger : {{role}}</h1>\\n    </div>\\n    <div fxFlex=\\\"78\\\" >            \\n      <mat-form-field *ngIf=\\\"searchPossible$ | async\\\" style=\\\"width: 400px; margin-left: 122px;\\\">\\n        <input matInput type=\\\"text\\\" style=\\\"width: 400px;\\\" [(ngModel)]=\\\"searchValue\\\" autocomplete=\\\"off\\\"  (keyup)=\\\"searchInput.next($event);\\\">\\n        <mat-icon matSuffix class=\\\"suffix\\\">search</mat-icon>\\n      </mat-form-field>\\n    </div>\\n    <div fxFlex>\\n    <mat-menu #appMenu=\\\"matMenu\\\">\\n      <button mat-menu-item routerLink=\\\"/signout\\\">Sign out</button>\\n    </mat-menu>\\n    <button mat-icon-button [matMenuTriggerFor]=\\\"appMenu\\\">\\n      <mat-icon>account_circle</mat-icon>\\n    </button>\\n    </div>\\n  </mat-toolbar>\\n  <mat-sidenav-container  style=\\\"min-width: 100%; margin-top: 64px;\\\" >\\n    <mat-sidenav   #snav [opened]=\\\"isOpen\\\" [mode]=\\\"mode\\\" style=\\\"min-height:100vh; min-width: 200px;\\\" [fixedInViewport]=\\\"true\\\" [fixedTopGap]=\\\"64\\\"\\n    [fixedBottomGap]=\\\"10\\\">\\n    <mat-accordion [ngSwitch]=\\\"role\\\">\\n      <ng-container *ngSwitchCase= \\\"'admin'\\\">\\n        <mat-expansion-panel  [expanded]=\\\"true\\\">\\n          <mat-expansion-panel-header>\\n            <mat-panel-title >\\n              Items\\n            </mat-panel-title>\\n          </mat-expansion-panel-header>\\n            <mat-nav-list>\\n              <a mat-list-item routerLink=\\\"/admin/item\\\">Item</a>\\n            </mat-nav-list>\\n        </mat-expansion-panel>\\n        <mat-expansion-panel [expanded]=\\\"true\\\">\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              Sales\\n            </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <mat-nav-list>\\n            <a mat-list-item routerLink=\\\"/admin/purchase\\\">Purchase Invoice</a>\\n            <a mat-list-item routerLink=\\\"/admin/sale\\\">Sales Invoice</a>\\n            <a mat-list-item routerLink=\\\"/admin/sale/order\\\">Orders List</a>\\n          </mat-nav-list>\\n        </mat-expansion-panel>\\n      </ng-container>\\n      <ng-container *ngSwitchCase= \\\"'waiter'\\\">\\n      <mat-expansion-panel [expanded]=\\\"true\\\">\\n          <mat-expansion-panel-header>\\n            <mat-panel-title >\\n              Sales\\n            </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <mat-nav-list>\\n            <a mat-list-item routerLink=\\\"/waiter/sale\\\">Sales</a>\\n            <a mat-list-item routerLink=\\\"/waiter/sale/order\\\">Orders</a>\\n          </mat-nav-list>\\n        </mat-expansion-panel>\\n      </ng-container>\\n      <ng-container *ngSwitchCase= \\\"'chef'\\\">\\n        <mat-expansion-panel>\\n            <mat-expansion-panel-header>\\n              <mat-panel-title>\\n                Chef\\n              </mat-panel-title>\\n            </mat-expansion-panel-header>\\n            <mat-nav-list>\\n              <a mat-list-item routerLink=\\\"/chef/sale/order\\\">Orders</a>\\n            </mat-nav-list>\\n          </mat-expansion-panel>\\n      </ng-container>\\n      <ng-container *ngSwitchCase= \\\"'barman'\\\">\\n          <mat-expansion-panel >\\n              <mat-expansion-panel-header>\\n                <mat-panel-title>\\n                  Barman\\n                </mat-panel-title>\\n              </mat-expansion-panel-header>\\n              <mat-nav-list>\\n                <a mat-list-item routerLink=\\\"/barman/sale/order\\\">Orders</a>\\n              </mat-nav-list>\\n            </mat-expansion-panel>\\n        </ng-container>\\n    </mat-accordion>\\n    </mat-sidenav>\\n    <mat-sidenav-content fxLayout=\\\"row\\\">\\n      <div fxFlex=\\\"75\\\" fxFlex.lt-md=\\\"100\\\" fxFill style=\\\"min-height: 100vh;\\\">\\n        <router-outlet></router-outlet>\\n      </div>\\n      <div fxFlex fxShow.lt-md=\\\"false\\\" fxFill style=\\\"min-height: 100vh; background-color: white;\\\">\\n        <div [ngSwitch]=\\\"role\\\" class=\\\"activities\\\">\\n            <ng-container *ngSwitchCase= \\\"'admin'\\\">\\n              <mat-nav-list>\\n                  <a mat-list-item routerLink=\\\"/admin/sale/order/new/show\\\" > <span [matBadge]=\\\"newOrders$ | async\\\" matBadgeColor=\\\"primary\\\"  matBadgeOverlap=\\\"false\\\" matBadgeSize=\\\"medium\\\" >New orders</span>  </a>\\n                  <a mat-list-item routerLink=\\\"/admin/sale/order/progress/show\\\" > <span [matBadge]=\\\"progressOrders$ | async\\\" matBadgeColor=\\\"primary\\\"  matBadgeOverlap=\\\"false\\\" >Orders in progress</span>  </a>\\n                  <a mat-list-item routerLink=\\\"/admin/sale/order/ready/show\\\" > <span [matBadge]=\\\"readyOrders$ | async\\\" matBadgeColor=\\\"warn\\\"  matBadgeOverlap=\\\"false\\\" >Ready orders</span>  </a>\\n              </mat-nav-list>\\n              <mat-nav-list>\\n                  <a mat-list-item routerLink=\\\"/admin/item/stoplist/show\\\" > <span [matBadge]=\\\"stopList$ | async\\\" matBadgeColor=\\\"warn\\\"  matBadgeOverlap=\\\"false\\\" >Stop list</span>  </a>\\n                  <a mat-list-item routerLink=\\\"/admin/sale/opened/show\\\" > <span [matBadge]=\\\"openedInvoices$ | async\\\" matBadgeColor=\\\"accent\\\"  matBadgeOverlap=\\\"false\\\" >Opened invoices</span>  </a>\\n                  <a mat-list-item routerLink=\\\"/admin/item/shoppinglist/show\\\" > <span [matBadge]=\\\"shoppingList$ | async\\\" matBadgeColor=\\\"warn\\\"  matBadgeOverlap=\\\"false\\\" >Shopping list</span>  </a>              \\n                </mat-nav-list>\\n              </ng-container>\\n              <ng-container *ngSwitchCase= \\\"'waiter'\\\">\\n                  <mat-nav-list>\\n                      <a mat-list-item routerLink=\\\"/waiter/sale/order/new/show\\\" > <span [matBadge]=\\\"newOrders$ | async\\\" matBadgeColor=\\\"primary\\\"  matBadgeOverlap=\\\"false\\\" matBadgeSize=\\\"medium\\\" >New orders</span>  </a>\\n                      <a mat-list-item routerLink=\\\"/waiter/sale/order/progress/show\\\" > <span [matBadge]=\\\"progressOrders$ | async\\\" matBadgeColor=\\\"primary\\\"  matBadgeOverlap=\\\"false\\\" >Orders in progress</span>  </a>\\n                      <a mat-list-item routerLink=\\\"/waiter/sale/order/ready/show\\\" > <span [matBadge]=\\\"readyOrders$ | async\\\" matBadgeColor=\\\"warn\\\"  matBadgeOverlap=\\\"false\\\" >Ready orders</span>  </a>\\n                  </mat-nav-list>\\n                  <mat-nav-list>\\n                      <a mat-list-item routerLink=\\\"/waiter/sale/opened/show\\\" > <span [matBadge]=\\\"openedInvoices$ | async\\\" matBadgeColor=\\\"accent\\\"  matBadgeOverlap=\\\"false\\\" >Opened invoices</span>  </a>\\n                    </mat-nav-list>\\n                </ng-container>\\n                <ng-container *ngSwitchCase= \\\"'chef'\\\">\\n                    <mat-nav-list>\\n                        <a mat-list-item routerLink=\\\"/chef/sale/order/new/show\\\" > <span [matBadge]=\\\"newOrders$ | async\\\" matBadgeColor=\\\"primary\\\"  matBadgeOverlap=\\\"false\\\" matBadgeSize=\\\"medium\\\" >New orders</span>  </a>\\n                        <a mat-list-item routerLink=\\\"/chef/sale/order/progress/show\\\" > <span [matBadge]=\\\"progressOrders$ | async\\\" matBadgeColor=\\\"primary\\\"  matBadgeOverlap=\\\"false\\\" >Orders in progress</span>  </a>\\n                        <a mat-list-item routerLink=\\\"/chef/sale/order/ready/show\\\" > <span [matBadge]=\\\"readyOrders$ | async\\\" matBadgeColor=\\\"warn\\\"  matBadgeOverlap=\\\"false\\\" >Ready orders</span>  </a>\\n                    </mat-nav-list>\\n                </ng-container>\\n                <ng-container *ngSwitchCase= \\\"'barman'\\\">\\n                    <mat-nav-list>\\n                        <a mat-list-item routerLink=\\\"/barman/sale/order/new/show\\\" > <span [matBadge]=\\\"newOrders$ | async\\\" matBadgeColor=\\\"primary\\\"  matBadgeOverlap=\\\"false\\\" matBadgeSize=\\\"medium\\\" >New orders</span>  </a>\\n                        <a mat-list-item routerLink=\\\"/barman/sale/order/progress/show\\\" > <span [matBadge]=\\\"progressOrders$ | async\\\" matBadgeColor=\\\"primary\\\"  matBadgeOverlap=\\\"false\\\" >Orders in progress</span>  </a>\\n                        <a mat-list-item routerLink=\\\"/barman/sale/order/ready/show\\\" > <span [matBadge]=\\\"readyOrders$ | async\\\" matBadgeColor=\\\"warn\\\"  matBadgeOverlap=\\\"false\\\" >Ready orders</span>  </a>\\n                    </mat-nav-list>\\n                </ng-container>\\n          </div>\\n      </div>\\n    </mat-sidenav-content>\\n  </mat-sidenav-container >\\n</div>\"","import { Component, OnInit, OnDestroy, Injector } from '@angular/core';\nimport { Router} from '@angular/router';\n\n  import {\n    distinctUntilChanged,\n    debounceTime,\n    map,\n    switchMap\n  } from 'rxjs/operators';\n  import {\n    timer,\n    Subscription,\n    BehaviorSubject,\n    Subject\n  } from 'rxjs';\n  import {\n    MediaChange,\n    ObservableMedia\n  } from '@angular/flex-layout';\n\nimport { AuthService } from './../../auth/auth.service';\nimport { SearchService } from './search.service';\nimport { AdminStatService } from './../../role/admin/stat.service';\nimport { BarmanStatService } from './../../role/barman/stat.service';\nimport { ChefStatService } from './../../role/chef/stat.service';\nimport { WaiterStatService } from './../../role/waiter/stat.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n\n  private _subscription: Subscription;\n  private  _searchInputSubscription: Subscription;\n  private _newOrders: Subscription;\n  private _progressOrders: Subscription;\n  private _readyOrders: Subscription;\n  private _stopList: Subscription;\n  private _openedInvoices: Subscription;\n  private _shoppingList: Subscription;\n\n  public isOpen = true;\n  public mode = 'over';\n  public mediaChange;\n  public url;\n  public searchReq = '';\n  public searchInput = new Subject<string>();\n  public role = null;\n\n  public searchValue = '';\n  public searchPossible: BehaviorSubject<Boolean> = new BehaviorSubject<Boolean>(false);\n  public searchPossible$ = this.searchPossible.asObservable();\n  public statService;\n  public newOrders: BehaviorSubject<number> = new BehaviorSubject<number>(0);\n  public newOrders$ = this.newOrders.asObservable();\n  public progressOrders: BehaviorSubject<number>  = new BehaviorSubject<number>(0);\n  public progressOrders$ = this.progressOrders.asObservable();\n  public readyOrders: BehaviorSubject<number>  = new BehaviorSubject<number>(0);\n  public readyOrders$ = this.readyOrders.asObservable();\n  public stopList: BehaviorSubject<number>  = new BehaviorSubject<number>(0);\n  public stopList$ = this.stopList.asObservable();\n  public openedInvoices: BehaviorSubject<number>  = new BehaviorSubject<number>(0);\n  public openedInvoices$ = this.openedInvoices.asObservable();\n  public shoppingList: BehaviorSubject<number>  = new BehaviorSubject<number>(0);\n  public shoppingList$ = this.shoppingList.asObservable();\n\n\n  constructor(\n    public $media: ObservableMedia,\n    public router: Router,\n    public searchService: SearchService,\n    private injector: Injector,\n    private authService: AuthService\n  ) {\n    this.role = this.authService.getRole();\n    switch (this.role) {\n      case 'admin':\n        this.statService = <AdminStatService>this.injector.get(AdminStatService);\n        break;\n      case 'barman':\n        this.statService = <BarmanStatService>this.injector.get(BarmanStatService);\n        break;\n      case 'chef':\n        this.statService = <ChefStatService>this.injector.get(ChefStatService);\n        break;\n      case 'waiter':\n        this.statService = <WaiterStatService>this.injector.get(WaiterStatService);\n        break;\n      default:\n        break;\n    }\n  }\n\n  ngOnInit() {\n\n    this._subscription = this.$media.subscribe((change: MediaChange) => {\n      this.isOpen = (change.mqAlias !== 'xs');\n      this.mediaChange = change;\n      this.mode = this.isOpen === true ? 'side' : 'over';\n    });\n\n    if (typeof this.statService.fetchNewOrders === 'function') {\n      this._newOrders = timer(0, 1000 * 30).pipe(\n        switchMap(() => this.statService.fetchNewOrders())\n      ).subscribe((result: number)  => this.newOrders.next(result));\n    }\n\n    if (typeof this.statService.fetchProgressOrders === 'function') {\n      this._progressOrders = timer(0, 1000 * 30).pipe(\n        switchMap(() => this.statService.fetchProgressOrders())\n      ).subscribe((result: number) => this.progressOrders.next(result));\n    }\n\n    if (typeof this.statService.fetchReadyOrders === 'function') {\n      this._readyOrders = timer(0, 1000 * 30).pipe(\n        switchMap(() => this.statService.fetchReadyOrders())\n      ).subscribe((result: number)  => this.readyOrders.next(result));\n    }\n\n    if (typeof this.statService.fetchStopList === 'function') {\n      this._stopList = timer(0, 1000 * 30).pipe(\n        switchMap(() => this.statService.fetchStopList())\n      ).subscribe((result: number)  => this.stopList.next(result));\n    }\n\n    if (typeof this.statService.fetchOpenedBills === 'function') {\n      this._openedInvoices = timer(0, 1000 * 30).pipe(\n        switchMap(() => this.statService.fetchOpenedBills())\n      ).subscribe((result: number)  => this.openedInvoices.next(result));\n    }\n\n    if (typeof this.statService.fetchShoppingList === 'function') {\n      this._shoppingList = timer(0, 1000 * 30).pipe(\n        switchMap(() => this.statService.fetchShoppingList())\n      ).subscribe((result: number)  => this.shoppingList.next(result));\n    }\n\n    this.searchService.searchPossible$.subscribe(\n      searchPossibility => {\n        setTimeout(() => this.searchPossible.next(searchPossibility), 0 );\n      });\n      this.searchService.clear$.subscribe(\n        clear => {\n          this.searchValue = null;\n        });\n        this.statService.counterChange$.subscribe(\n          counterData => {\n            counterData.operation === 'increment' ?\n            this[counterData.name].next(this[counterData.name].value + 1) :\n            this[counterData.name].next(this[counterData.name].value - 1);\n          });\n\n    this._searchInputSubscription = this.searchInput.pipe(\n      map((evt: any) => evt.target.value),\n      // filter(res => res.length > 2),\n      debounceTime(500),\n      distinctUntilChanged(),\n    ).subscribe((fullText) => {\n      this.searchService.sendRequest(fullText);\n    });\n  }\n\n\n\n  sendRequest(event) {\n    this.searchService.sendRequest(event.target.value);\n  }\n\n\n  ngOnDestroy(): void {\n    this._subscription.unsubscribe();\n    this._searchInputSubscription.unsubscribe();\n    if (typeof this.statService.fetchNewOrders === 'function') {\n      this._newOrders.unsubscribe();\n    }\n    if (typeof this.statService.fetchProgressOrders === 'function') {\n      this._progressOrders.unsubscribe();\n    }\n    if (typeof this.statService.fetchReadyOrders === 'function') {\n      this._readyOrders.unsubscribe();\n    }\n    if (typeof this.statService.fetchStopList === 'function') {\n      this._stopList.unsubscribe();\n    }\n    if (typeof this.statService.fetchOpenedBills === 'function') {\n      this._openedInvoices.unsubscribe();\n    }\n    if (typeof this.statService.fetchShoppingList === 'function') {\n      this._shoppingList.unsubscribe();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule} from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatCardModule,\n  MatToolbarModule,\n  MatInputModule,\n  MatButtonModule,\n  MatIconModule,\n  MatMenuModule,\n  MatSidenavModule,\n  MatExpansionModule,\n  MatListModule,\n  MatBadgeModule\n} from '@angular/material';\nimport { DashboardComponent } from './dashboard.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatInputModule,\n    MatIconModule,\n    MatInputModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatCardModule,\n    FormsModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatExpansionModule,\n    MatListModule,\n    RouterModule,\n    MatBadgeModule,\n    FlexLayoutModule\n  ],\n  declarations: [\n    DashboardComponent\n  ],\n  providers: [],\n  exports: [\n    DashboardComponent\n  ]\n})\n\nexport class DashboardSharedModule { }\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n\n  // Observable string sources\n\n  public searchPossible = new Subject<boolean>();\n  private searchRequest = new Subject<string>();\n  private clear = new Subject<Boolean>();\n\n  // Observable string streams\n  searchPossible$ = this.searchPossible.asObservable();\n  searchRequest$ = this.searchRequest.asObservable();\n  clear$ = this.clear.asObservable();\n\n  // Service message commands\n  sendRequest(searchRequest: string) {\n    this.searchRequest.next(searchRequest);\n  }\n\n  clearSearchInput(clear: Boolean = true) {\n    this.clear.next(true);\n  }\n\n  confirmSearchPossibility(searchPossible: boolean) {\n    this.searchPossible.next(searchPossible);\n  }\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-stub',\n  templateUrl: './stub.component.html',\n  styleUrls: ['./stub.component.css']\n})\nexport class StubComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { StubComponent } from './stub.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  declarations: [\n    StubComponent\n  ],\n  exports: [\n    StubComponent\n  ]\n})\n\nexport class StubSharedModule { }\n"],"sourceRoot":""}